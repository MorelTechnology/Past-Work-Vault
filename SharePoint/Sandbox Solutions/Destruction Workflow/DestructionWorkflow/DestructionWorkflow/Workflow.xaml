<Activity mc:Ignorable="sap sap2010 sads" x:Class="DestructionWorkflow.Destruction_Workflow.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="DestructionWorkflow.Destruction_Workflow.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Net</x:String>
      <x:String>Microsoft.SharePoint</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>DestructionWorkflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Top Flowchart" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="Initiator" />
      <Variable x:TypeArguments="x:Int32" Name="CurrentItemId" />
      <Variable x:TypeArguments="p:DynamicValue" Name="CurrentItem" />
      <Variable x:TypeArguments="x:String" Name="CurrentItemName" />
      <Variable x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))" Name="RecordCoordinators" />
      <Variable x:TypeArguments="x:String" Name="InitiatorDisplayName" />
      <Variable x:TypeArguments="x:Int32" Name="CountRecordCoordinators" />
      <Variable x:TypeArguments="x:String" Name="WebUrl" />
      <Variable x:TypeArguments="x:Int32" Name="RecordCustodianApprovalOutcome" />
      <Variable x:TypeArguments="x:String" Name="InitiatorEmailAddress" />
      <Variable x:TypeArguments="x:String" Name="WorkflowInstanceUrl" />
      <Variable x:TypeArguments="x:Int32" Name="CurrentItemModifiedBy" />
      <Variable x:TypeArguments="x:String" Name="ContextInfoRestUrl" />
      <Variable x:TypeArguments="x:String" Name="UpdateItemRestUrl" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_30">
        <Sequence DisplayName="Global Variable Prep" sap2010:WorkflowViewState.IdRef="Sequence_60">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Name="InitiatorId" />
            <Variable x:TypeArguments="p:DynamicValue" Name="InitiatorSPUser" />
            <Variable x:TypeArguments="x:String" Name="WorkflowInstanceId" />
            <Variable x:TypeArguments="x:String" Name="CurrentListId" />
          </Sequence.Variables>
          <p1:LookupWorkflowContextProperty DisplayName="Get Workflow Initiator" sap2010:WorkflowViewState.IdRef="LookupWorkflowContextProperty_11" PropertyName="InitiatorUserId">
            <p1:LookupWorkflowContextProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">Initiator</mca:CSharpReference>
              </OutArgument>
            </p1:LookupWorkflowContextProperty.Result>
          </p1:LookupWorkflowContextProperty>
          <p1:LookupWorkflowContextProperty DisplayName="Get Workflow Instance Id" sap2010:WorkflowViewState.IdRef="LookupWorkflowContextProperty_12" PropertyName="WorkflowInstanceId">
            <p1:LookupWorkflowContextProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">WorkflowInstanceId</mca:CSharpReference>
              </OutArgument>
            </p1:LookupWorkflowContextProperty.Result>
          </p1:LookupWorkflowContextProperty>
          <p1:LookupSPPrincipalId AddToUserInfoList="True" DisplayName="LookupInitiatorSPPrincipalId" sap2010:WorkflowViewState.IdRef="LookupSPPrincipalId_8">
            <p1:LookupSPPrincipalId.Result>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">InitiatorId</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPPrincipalId.Result>
            <p1:LookupSPPrincipalId.UserName>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">Initiator</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPPrincipalId.UserName>
          </p1:LookupSPPrincipalId>
          <p1:LookupSPUser DisplayName="LookupInitiatorSPUser" sap2010:WorkflowViewState.IdRef="LookupSPUser_11">
            <p1:LookupSPUser.PrincipalId>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">InitiatorId</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPUser.PrincipalId>
            <p1:LookupSPUser.Result>
              <OutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">InitiatorSPUser</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPUser.Result>
          </p1:LookupSPUser>
          <p:GetODataProperties DisplayName="Get Properties of Initiator" sap2010:WorkflowViewState.IdRef="GetODataProperties_26">
            <p:GetODataProperties.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">InitiatorSPUser</mca:CSharpValue>
              </InArgument>
            </p:GetODataProperties.Source>
            <scg:Dictionary x:TypeArguments="x:String, OutArgument">
              <OutArgument x:TypeArguments="x:String" x:Key="Title">
                <mca:CSharpReference x:TypeArguments="x:String">InitiatorDisplayName</mca:CSharpReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Email">
                <mca:CSharpReference x:TypeArguments="x:String">InitiatorEmailAddress</mca:CSharpReference>
              </OutArgument>
            </scg:Dictionary>
          </p:GetODataProperties>
          <p1:GetCurrentItemId sap2010:WorkflowViewState.IdRef="GetCurrentItemId_5">
            <p1:GetCurrentItemId.Result>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">CurrentItemId</mca:CSharpReference>
              </OutArgument>
            </p1:GetCurrentItemId.Result>
          </p1:GetCurrentItemId>
          <p1:LookupSPListItem ItemGuid="{x:Null}" DisplayName="GetCurrentItem" sap2010:WorkflowViewState.IdRef="LookupSPListItem_15">
            <p1:LookupSPListItem.ItemId>
              <InArgument x:TypeArguments="x:Int32">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                  <p1:GetCurrentItemId />
                </p:ExpressionContainerValue>
              </InArgument>
            </p1:LookupSPListItem.ItemId>
            <p1:LookupSPListItem.ListId>
              <InArgument x:TypeArguments="s:Guid">
                <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                  <p1:GetCurrentListId />
                </p:ExpressionContainerValue>
              </InArgument>
            </p1:LookupSPListItem.ListId>
            <p1:LookupSPListItem.Properties>
              <InArgument x:TypeArguments="sco:Collection(x:String)">
                <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">new System.Collections.ObjectModel.Collection&lt;string&gt;() { "FileLeafRef" }</mca:CSharpValue>
              </InArgument>
            </p1:LookupSPListItem.Properties>
            <p1:LookupSPListItem.Result>
              <OutArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpReference x:TypeArguments="p:DynamicValue">CurrentItem</mca:CSharpReference>
              </OutArgument>
            </p1:LookupSPListItem.Result>
          </p1:LookupSPListItem>
          <p:GetODataProperties DisplayName="Get Properties of Current Item" sap2010:WorkflowViewState.IdRef="GetODataProperties_27">
            <p:GetODataProperties.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <mca:CSharpValue x:TypeArguments="p:DynamicValue">CurrentItem</mca:CSharpValue>
              </InArgument>
            </p:GetODataProperties.Source>
            <scg:Dictionary x:TypeArguments="x:String, OutArgument">
              <OutArgument x:TypeArguments="x:String" x:Key="FileLeafRef">
                <mca:CSharpReference x:TypeArguments="x:String">CurrentItemName</mca:CSharpReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="EditorId">
                <mca:CSharpReference x:TypeArguments="x:Int32">CurrentItemModifiedBy</mca:CSharpReference>
              </OutArgument>
            </scg:Dictionary>
          </p:GetODataProperties>
          <p1:WebUri DisplayName="Get Current Web URL" sap2010:WorkflowViewState.IdRef="WebUri_4">
            <p1:WebUri.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">WebUrl</mca:CSharpReference>
              </OutArgument>
            </p1:WebUri.Result>
          </p1:WebUri>
          <p1:LookupWorkflowContextProperty DisplayName="Get Current List Id" sap2010:WorkflowViewState.IdRef="LookupWorkflowContextProperty_13" PropertyName="ListId">
            <p1:LookupWorkflowContextProperty.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">CurrentListId</mca:CSharpReference>
              </OutArgument>
            </p1:LookupWorkflowContextProperty.Result>
          </p1:LookupWorkflowContextProperty>
          <Assign DisplayName="Set Workflow Instance Url" sap2010:WorkflowViewState.IdRef="Assign_26">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">WorkflowInstanceUrl</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}_layouts/15/wrkstat.aspx?List={1}&amp;WorkflowInstanceName={2}", WebUrl, CurrentListId, WorkflowInstanceId)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Set Context Info REST Url" sap2010:WorkflowViewState.IdRef="Assign_27">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}_api/contextinfo",WebUrl)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <p:BuildUri DisplayName="Build Update Request URL" sap2010:WorkflowViewState.IdRef="BuildUri_1">
            <p:BuildUri.Query>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("formValues=[{'__metadata':{'type':'SP.ListItemFormUpdateValue'},'FieldName':'Destruction_x0020_Workflow_x0020_Status','FieldValue':'{0}, {LinkTitle}'}]&amp;bNewDocumentUpdate=true&amp;checkinComment=''",WorkflowInstanceUrl)</mca:CSharpValue>
              </InArgument>
            </p:BuildUri.Query>
            <p:BuildUri.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpReference>
              </OutArgument>
            </p:BuildUri.Result>
            <p:BuildUri.Source>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}_api/Web/Lists/GetByTitle('Destruction Reports')/Items({1})/File/ListItemAllFields/ValidateUpdateListItem", WebUrl, CurrentItemId)</mca:CSharpValue>
              </InArgument>
            </p:BuildUri.Source>
          </p:BuildUri>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_15">
            <Parallel sap2010:WorkflowViewState.IdRef="Parallel_1">
              <Parallel.Variables>
                <Variable x:TypeArguments="x:Boolean" Default="False" Name="WorkflowTerminated" />
              </Parallel.Variables>
              <Parallel.CompletionCondition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">WorkflowTerminated</mca:CSharpValue>
              </Parallel.CompletionCondition>
              <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_3">
                <Flowchart.StartNode>
                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                    <Sequence DisplayName="Assign Record Coordinator" sap2010:WorkflowViewState.IdRef="Sequence_41">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="AssignRecordCoordinatorTaskOutcome" />
                        <Variable x:TypeArguments="p:DynamicValue" Name="AssignRecordCoordinatorTaskResult" />
                        <Variable x:TypeArguments="x:Int32" Name="AssignRecordCoordinatorTaskId" />
                        <Variable x:TypeArguments="sco:Collection(x:String)" Name="RecordCoordinatorItemIds" />
                      </Sequence.Variables>
                      <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_1">
                        <p1:AppOnlySequence.Body>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                              <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                              <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                              <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                              <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                            </Sequence.Variables>
                            <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_4" Method="POST">
                              <p:HttpSend.RequestHeaders>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <p:SetDynamicValueProperties>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                      <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                      <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                    </scg:Dictionary>
                                  </p:SetDynamicValueProperties>
                                </InArgument>
                              </p:HttpSend.RequestHeaders>
                              <p:HttpSend.ResponseContent>
                                <OutArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                </OutArgument>
                              </p:HttpSend.ResponseContent>
                              <p:HttpSend.Uri>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                </InArgument>
                              </p:HttpSend.Uri>
                            </p:HttpSend>
                            <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_7" PropertyName="d/GetContextWebInformation/FormDigestValue">
                              <p:GetDynamicValueProperty.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                </OutArgument>
                              </p:GetDynamicValueProperty.Result>
                              <p:GetDynamicValueProperty.Source>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                </InArgument>
                              </p:GetDynamicValueProperty.Source>
                            </p:GetDynamicValueProperty>
                            <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_2">
                              <p:BuildDynamicValue.Result>
                                <InOutArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                </InOutArgument>
                              </p:BuildDynamicValue.Result>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Assign Record Coordinator",WorkflowInstanceUrl)</mca:CSharpValue>
                                </InArgument>
                              </scg:Dictionary>
                            </p:BuildDynamicValue>
                            <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_13">
                              <p:BuildCollection.Result>
                                <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                  <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                </OutArgument>
                              </p:BuildCollection.Result>
                              <p:BuildCollection.Values>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                </InArgument>
                              </p:BuildCollection.Values>
                            </p:BuildCollection>
                            <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_3">
                              <p:BuildDynamicValue.Result>
                                <InOutArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                </InOutArgument>
                              </p:BuildDynamicValue.Result>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                  <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </scg:Dictionary>
                            </p:BuildDynamicValue>
                            <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_5" Method="POST">
                              <p:HttpSend.RequestContent>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                </InArgument>
                              </p:HttpSend.RequestContent>
                              <p:HttpSend.RequestHeaders>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <p:SetDynamicValueProperties>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                      <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                        <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                      </InArgument>
                                    </scg:Dictionary>
                                  </p:SetDynamicValueProperties>
                                </InArgument>
                              </p:HttpSend.RequestHeaders>
                              <p:HttpSend.Uri>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                </InArgument>
                              </p:HttpSend.Uri>
                            </p:HttpSend>
                            <p:SetUserStatus Description="Assign Record Coordinator" sap2010:WorkflowViewState.IdRef="SetUserStatus_1" />
                          </Sequence>
                        </p1:AppOnlySequence.Body>
                      </p1:AppOnlySequence>
                      <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_19">
                        <p1:WriteToHistory.Message>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Assign Record Coordinator task assigned to " + InitiatorDisplayName</mca:CSharpValue>
                          </InArgument>
                        </p1:WriteToHistory.Message>
                      </p1:WriteToHistory>
                      <p1:SingleTask TaskId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned - %Task: Title%" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style='font-size:21pt;color:#0066cc;'&gt;%Task: Title%&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled - %Task: Title%" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F00B68922094B534F2DAD3E59FE519DAB5E" DefaultTaskOutcome="0" DisplayName="Assign Select Record Coordinator Task to Initiator" sap2010:WorkflowViewState.IdRef="SingleTask_5" OutcomeFieldName="Submit" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size: 10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif; color:#ff3b3b;white-space:nowrap;padding-right:15px;vertical-align:top;padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size: 11pt;font-family:Segoe UI Light,sans-serif;color:#ff3b3b;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue - %Task: Title%" OverdueReminderRepeat="1" OverdueRepeatTimes="-1" SendReminderEmail="True" WaitForTaskCompletion="True">
                        <p1:SingleTask.AssignedTo>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">Initiator</mca:CSharpValue>
                          </InArgument>
                        </p1:SingleTask.AssignedTo>
                        <p1:SingleTask.Body>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Please choose a record coordinator for the Destruction Report named " + CurrentItemName</mca:CSharpValue>
                          </InArgument>
                        </p1:SingleTask.Body>
                        <p1:SingleTask.DueDate>
                          <InArgument x:TypeArguments="s:DateTime">
                            <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.UtcNow.AddDays(3)</mca:CSharpValue>
                          </InArgument>
                        </p1:SingleTask.DueDate>
                        <p1:SingleTask.Outcome>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32">AssignRecordCoordinatorTaskOutcome</mca:CSharpReference>
                          </OutArgument>
                        </p1:SingleTask.Outcome>
                        <p1:SingleTask.RelatedContentLinkListId>
                          <InArgument x:TypeArguments="s:Guid">
                            <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                              <p1:GetCurrentListId />
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </p1:SingleTask.RelatedContentLinkListId>
                        <p1:SingleTask.RelatedContentLinkListItemId>
                          <InArgument x:TypeArguments="s:Guid">
                            <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                              <p1:GetCurrentItemGuid />
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </p1:SingleTask.RelatedContentLinkListItemId>
                        <p1:SingleTask.RelatedContentLinkListItemIntegerId>
                          <InArgument x:TypeArguments="x:Int32">
                            <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                              <p1:GetCurrentItemId />
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </p1:SingleTask.RelatedContentLinkListItemIntegerId>
                        <p1:SingleTask.TaskItemId>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32">AssignRecordCoordinatorTaskId</mca:CSharpReference>
                          </OutArgument>
                        </p1:SingleTask.TaskItemId>
                        <p1:SingleTask.Title>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Assign Record Coordinator for Destruction Report " + CurrentItemName</mca:CSharpValue>
                          </InArgument>
                        </p1:SingleTask.Title>
                      </p1:SingleTask>
                      <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Task Item for Results" sap2010:WorkflowViewState.IdRef="LookupSPListItem_11">
                        <p1:LookupSPListItem.ItemId>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">AssignRecordCoordinatorTaskId</mca:CSharpValue>
                          </InArgument>
                        </p1:LookupSPListItem.ItemId>
                        <p1:LookupSPListItem.ListId>
                          <InArgument x:TypeArguments="s:Guid">
                            <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Destruction Workflow Tasks;}")</mca:CSharpValue>
                          </InArgument>
                        </p1:LookupSPListItem.ListId>
                        <p1:LookupSPListItem.Result>
                          <OutArgument x:TypeArguments="p:DynamicValue">
                            <mca:CSharpReference x:TypeArguments="p:DynamicValue">AssignRecordCoordinatorTaskResult</mca:CSharpReference>
                          </OutArgument>
                        </p1:LookupSPListItem.Result>
                      </p1:LookupSPListItem>
                      <p:GetODataProperties DisplayName="Get Record Coordinator Item IDs" sap2010:WorkflowViewState.IdRef="GetODataProperties_20">
                        <p:GetODataProperties.Source>
                          <InArgument x:TypeArguments="p:DynamicValue">
                            <mca:CSharpValue x:TypeArguments="p:DynamicValue">AssignRecordCoordinatorTaskResult</mca:CSharpValue>
                          </InArgument>
                        </p:GetODataProperties.Source>
                        <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                          <OutArgument x:TypeArguments="sco:Collection(x:String)" x:Key="RecordCoordinatorId/results">
                            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">RecordCoordinatorItemIds</mca:CSharpReference>
                          </OutArgument>
                        </scg:Dictionary>
                      </p:GetODataProperties>
                      <p:BuildDictionary x:TypeArguments="x:String, scg:IDictionary(x:String, sco:Collection(x:String))" DisplayName="Build RecordCoordinators Dictionary" sap2010:WorkflowViewState.IdRef="BuildDictionary`2_5">
                        <p:BuildDictionary.Result>
                          <OutArgument x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                            <mca:CSharpReference x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">RecordCoordinators</mca:CSharpReference>
                          </OutArgument>
                        </p:BuildDictionary.Result>
                      </p:BuildDictionary>
                      <ForEach x:TypeArguments="x:String" DisplayName="ForEach RecordCoordinatorItemId" sap2010:WorkflowViewState.IdRef="ForEach`1_19">
                        <ForEach.Values>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">RecordCoordinatorItemIds</mca:CSharpValue>
                          </InArgument>
                        </ForEach.Values>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="RecordCoordinatorItemId" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Parse RecordCoordinator Item" sap2010:WorkflowViewState.IdRef="Sequence_40">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="p:DynamicValue" Name="RecordCoordinatorListItem" />
                              <Variable x:TypeArguments="x:String" Name="DepartmentName" />
                              <Variable x:TypeArguments="sco:Collection(x:String)" Name="DepartmentMemberIds" />
                              <Variable x:TypeArguments="sco:Collection(x:String)" Name="DepartmentLoginNames" />
                              <Variable x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))" Name="Department" />
                            </Sequence.Variables>
                            <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Record Coordinator List Item" sap2010:WorkflowViewState.IdRef="LookupSPListItem_12">
                              <p1:LookupSPListItem.ItemId>
                                <InArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpValue x:TypeArguments="x:Int32">int.Parse(RecordCoordinatorItemId)</mca:CSharpValue>
                                </InArgument>
                              </p1:LookupSPListItem.ItemId>
                              <p1:LookupSPListItem.ListId>
                                <InArgument x:TypeArguments="s:Guid">
                                  <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Record Coordinators;}")</mca:CSharpValue>
                                </InArgument>
                              </p1:LookupSPListItem.ListId>
                              <p1:LookupSPListItem.Result>
                                <OutArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">RecordCoordinatorListItem</mca:CSharpReference>
                                </OutArgument>
                              </p1:LookupSPListItem.Result>
                            </p1:LookupSPListItem>
                            <p:GetODataProperties DisplayName="Get Properties of Record Coordinator List Item" sap2010:WorkflowViewState.IdRef="GetODataProperties_21">
                              <p:GetODataProperties.Source>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">RecordCoordinatorListItem</mca:CSharpValue>
                                </InArgument>
                              </p:GetODataProperties.Source>
                              <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                <OutArgument x:TypeArguments="x:String" x:Key="Title">
                                  <mca:CSharpReference x:TypeArguments="x:String">DepartmentName</mca:CSharpReference>
                                </OutArgument>
                                <OutArgument x:TypeArguments="sco:Collection(x:String)" x:Key="MembersId/results">
                                  <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">DepartmentMemberIds</mca:CSharpReference>
                                </OutArgument>
                              </scg:Dictionary>
                            </p:GetODataProperties>
                            <p:BuildCollection x:TypeArguments="x:String" DisplayName="Build DepartmentLoginNames Collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_9">
                              <p:BuildCollection.Result>
                                <OutArgument x:TypeArguments="sco:Collection(x:String)">
                                  <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">DepartmentLoginNames</mca:CSharpReference>
                                </OutArgument>
                              </p:BuildCollection.Result>
                            </p:BuildCollection>
                            <ForEach x:TypeArguments="x:String" DisplayName="ForEach DepartmentMemberId" sap2010:WorkflowViewState.IdRef="ForEach`1_18">
                              <ForEach.Values>
                                <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">DepartmentMemberIds</mca:CSharpValue>
                                </InArgument>
                              </ForEach.Values>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="DepartmentMemberId" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Parse User" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="p:DynamicValue" Name="SPUser" />
                                    <Variable x:TypeArguments="x:String" Name="LoginName" />
                                  </Sequence.Variables>
                                  <p1:LookupSPUser sap2010:WorkflowViewState.IdRef="LookupSPUser_9">
                                    <p1:LookupSPUser.PrincipalId>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpValue x:TypeArguments="x:Int32">int.Parse(DepartmentMemberId)</mca:CSharpValue>
                                      </InArgument>
                                    </p1:LookupSPUser.PrincipalId>
                                    <p1:LookupSPUser.Result>
                                      <OutArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">SPUser</mca:CSharpReference>
                                      </OutArgument>
                                    </p1:LookupSPUser.Result>
                                  </p1:LookupSPUser>
                                  <p:GetODataProperties DisplayName="GetUserProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_22">
                                    <p:GetODataProperties.Source>
                                      <InArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpValue x:TypeArguments="p:DynamicValue">SPUser</mca:CSharpValue>
                                      </InArgument>
                                    </p:GetODataProperties.Source>
                                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                      <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
                                        <mca:CSharpReference x:TypeArguments="x:String">LoginName</mca:CSharpReference>
                                      </OutArgument>
                                    </scg:Dictionary>
                                  </p:GetODataProperties>
                                  <AddToCollection x:TypeArguments="x:String" DisplayName="Add To DepartmentLoginNames Collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_9">
                                    <AddToCollection.Item>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">LoginName</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection.Item>
                                    <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                      <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">DepartmentLoginNames</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection>
                                </Sequence>
                              </ActivityAction>
                            </ForEach>
                            <p:BuildDictionary x:TypeArguments="x:String, sco:Collection(x:String)" DisplayName="Build Department Dictionary" sap2010:WorkflowViewState.IdRef="BuildDictionary`2_6">
                              <p:BuildDictionary.Result>
                                <OutArgument x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">
                                  <mca:CSharpReference x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">Department</mca:CSharpReference>
                                </OutArgument>
                              </p:BuildDictionary.Result>
                            </p:BuildDictionary>
                            <p:AddToDictionary x:TypeArguments="x:String, sco:Collection(x:String)" DisplayName="Add To Department Dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_5">
                              <p:AddToDictionary.Dictionary>
                                <InArgument x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">
                                  <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">Department</mca:CSharpValue>
                                </InArgument>
                              </p:AddToDictionary.Dictionary>
                              <p:AddToDictionary.Key>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">DepartmentName</mca:CSharpValue>
                                </InArgument>
                              </p:AddToDictionary.Key>
                              <p:AddToDictionary.Value>
                                <InArgument x:TypeArguments="sco:Collection(x:String)">
                                  <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">DepartmentLoginNames</mca:CSharpValue>
                                </InArgument>
                              </p:AddToDictionary.Value>
                            </p:AddToDictionary>
                            <p:AddToDictionary x:TypeArguments="x:String, scg:IDictionary(x:String, sco:Collection(x:String))" DisplayName="Add RecordCoordinators Dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_6">
                              <p:AddToDictionary.Dictionary>
                                <InArgument x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                                  <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">RecordCoordinators</mca:CSharpValue>
                                </InArgument>
                              </p:AddToDictionary.Dictionary>
                              <p:AddToDictionary.Key>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">RecordCoordinatorItemId</mca:CSharpValue>
                                </InArgument>
                              </p:AddToDictionary.Key>
                              <p:AddToDictionary.Value>
                                <InArgument x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">
                                  <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">Department</mca:CSharpValue>
                                </InArgument>
                              </p:AddToDictionary.Value>
                            </p:AddToDictionary>
                          </Sequence>
                        </ActivityAction>
                      </ForEach>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                        <Sequence DisplayName="Record Coordinator Approvals" sap2010:WorkflowViewState.IdRef="Sequence_46">
                          <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_7">
                            <p1:AppOnlySequence.Body>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_61">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                                  <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                                  <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                                  <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                                  <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                                </Sequence.Variables>
                                <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_6" Method="POST">
                                  <p:HttpSend.RequestHeaders>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <p:SetDynamicValueProperties>
                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                          <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                          <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                        </scg:Dictionary>
                                      </p:SetDynamicValueProperties>
                                    </InArgument>
                                  </p:HttpSend.RequestHeaders>
                                  <p:HttpSend.ResponseContent>
                                    <OutArgument x:TypeArguments="p:DynamicValue">
                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                    </OutArgument>
                                  </p:HttpSend.ResponseContent>
                                  <p:HttpSend.Uri>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                    </InArgument>
                                  </p:HttpSend.Uri>
                                </p:HttpSend>
                                <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_9" PropertyName="d/GetContextWebInformation/FormDigestValue">
                                  <p:GetDynamicValueProperty.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                    </OutArgument>
                                  </p:GetDynamicValueProperty.Result>
                                  <p:GetDynamicValueProperty.Source>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                    </InArgument>
                                  </p:GetDynamicValueProperty.Source>
                                </p:GetDynamicValueProperty>
                                <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_4">
                                  <p:BuildDynamicValue.Result>
                                    <InOutArgument x:TypeArguments="p:DynamicValue">
                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                    </InOutArgument>
                                  </p:BuildDynamicValue.Result>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                    <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Record Coordinator Approvals",WorkflowInstanceUrl)</mca:CSharpValue>
                                    </InArgument>
                                  </scg:Dictionary>
                                </p:BuildDynamicValue>
                                <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_14">
                                  <p:BuildCollection.Result>
                                    <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                      <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                    </OutArgument>
                                  </p:BuildCollection.Result>
                                  <p:BuildCollection.Values>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                    </InArgument>
                                  </p:BuildCollection.Values>
                                </p:BuildCollection>
                                <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_5">
                                  <p:BuildDynamicValue.Result>
                                    <InOutArgument x:TypeArguments="p:DynamicValue">
                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                    </InOutArgument>
                                  </p:BuildDynamicValue.Result>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                    <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                      <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </scg:Dictionary>
                                </p:BuildDynamicValue>
                                <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_7" Method="POST">
                                  <p:HttpSend.RequestContent>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                    </InArgument>
                                  </p:HttpSend.RequestContent>
                                  <p:HttpSend.RequestHeaders>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <p:SetDynamicValueProperties>
                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                          <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                            <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                          </InArgument>
                                        </scg:Dictionary>
                                      </p:SetDynamicValueProperties>
                                    </InArgument>
                                  </p:HttpSend.RequestHeaders>
                                  <p:HttpSend.Uri>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                    </InArgument>
                                  </p:HttpSend.Uri>
                                </p:HttpSend>
                                <p:SetUserStatus Description="Record Coordinator Approvals" sap2010:WorkflowViewState.IdRef="SetUserStatus_2" />
                              </Sequence>
                            </p1:AppOnlySequence.Body>
                          </p1:AppOnlySequence>
                          <ParallelForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))" DisplayName="ForEach RecordCoordinator" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3">
                            <ParallelForEach.Values>
                              <InArgument x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String))))">
                                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String))))">RecordCoordinators</mca:CSharpValue>
                              </InArgument>
                            </ParallelForEach.Values>
                            <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))" Name="RecordCoordinator" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Parse Record Coordinator" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="RecordCoordinatorItemId" />
                                  <Variable x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))" Name="Department" />
                                </Sequence.Variables>
                                <p:SplitKeyValuePair x:TypeArguments="x:String, scg:IDictionary(x:String, sco:Collection(x:String))" sap2010:WorkflowViewState.IdRef="SplitKeyValuePair`2_11">
                                  <p:SplitKeyValuePair.Input>
                                    <InArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                                      <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">RecordCoordinator</mca:CSharpValue>
                                    </InArgument>
                                  </p:SplitKeyValuePair.Input>
                                  <p:SplitKeyValuePair.Key>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String">RecordCoordinatorItemId</mca:CSharpReference>
                                    </OutArgument>
                                  </p:SplitKeyValuePair.Key>
                                  <p:SplitKeyValuePair.Value>
                                    <OutArgument x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">
                                      <mca:CSharpReference x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">Department</mca:CSharpReference>
                                    </OutArgument>
                                  </p:SplitKeyValuePair.Value>
                                </p:SplitKeyValuePair>
                                <ForEach x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))" DisplayName="ForEach Department" sap2010:WorkflowViewState.IdRef="ForEach`1_21">
                                  <ForEach.Values>
                                    <InArgument x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, sco:Collection(x:String)))">
                                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, sco:Collection(x:String)))">Department</mca:CSharpValue>
                                    </InArgument>
                                  </ForEach.Values>
                                  <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))" Name="SingleDepartment" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Parse Department" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="DepartmentName" />
                                        <Variable x:TypeArguments="sco:Collection(x:String)" Name="DepartmentMemberLoginNames" />
                                        <Variable x:TypeArguments="x:Int32" Name="RecordCoordinatorApprovalOutcome" />
                                        <Variable x:TypeArguments="x:String" Name="RecordCoordinatorOutcomeString" />
                                      </Sequence.Variables>
                                      <p:SplitKeyValuePair x:TypeArguments="x:String, sco:Collection(x:String)" sap2010:WorkflowViewState.IdRef="SplitKeyValuePair`2_12">
                                        <p:SplitKeyValuePair.Input>
                                          <InArgument x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))">
                                            <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))">SingleDepartment</mca:CSharpValue>
                                          </InArgument>
                                        </p:SplitKeyValuePair.Input>
                                        <p:SplitKeyValuePair.Key>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String">DepartmentName</mca:CSharpReference>
                                          </OutArgument>
                                        </p:SplitKeyValuePair.Key>
                                        <p:SplitKeyValuePair.Value>
                                          <OutArgument x:TypeArguments="sco:Collection(x:String)">
                                            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">DepartmentMemberLoginNames</mca:CSharpReference>
                                          </OutArgument>
                                        </p:SplitKeyValuePair.Value>
                                      </p:SplitKeyValuePair>
                                      <ForEach x:TypeArguments="x:String" DisplayName="ForEach Assignee" sap2010:WorkflowViewState.IdRef="ForEach`1_20">
                                        <ForEach.Values>
                                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                                            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">DepartmentMemberLoginNames</mca:CSharpValue>
                                          </InArgument>
                                        </ForEach.Values>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="LoginName" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Get User Information" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="AssigneeDisplayName" />
                                              <Variable x:TypeArguments="x:Int32" Name="SPPrincipalId" />
                                              <Variable x:TypeArguments="p:DynamicValue" Name="SPUser" />
                                            </Sequence.Variables>
                                            <p1:LookupSPPrincipalId AddToUserInfoList="{x:Null}" sap2010:WorkflowViewState.IdRef="LookupSPPrincipalId_7">
                                              <p1:LookupSPPrincipalId.Result>
                                                <OutArgument x:TypeArguments="x:Int32">
                                                  <mca:CSharpReference x:TypeArguments="x:Int32">SPPrincipalId</mca:CSharpReference>
                                                </OutArgument>
                                              </p1:LookupSPPrincipalId.Result>
                                              <p1:LookupSPPrincipalId.UserName>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">LoginName</mca:CSharpValue>
                                                </InArgument>
                                              </p1:LookupSPPrincipalId.UserName>
                                            </p1:LookupSPPrincipalId>
                                            <p1:LookupSPUser sap2010:WorkflowViewState.IdRef="LookupSPUser_10">
                                              <p1:LookupSPUser.PrincipalId>
                                                <InArgument x:TypeArguments="x:Int32">
                                                  <mca:CSharpValue x:TypeArguments="x:Int32">SPPrincipalId</mca:CSharpValue>
                                                </InArgument>
                                              </p1:LookupSPUser.PrincipalId>
                                              <p1:LookupSPUser.Result>
                                                <OutArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">SPUser</mca:CSharpReference>
                                                </OutArgument>
                                              </p1:LookupSPUser.Result>
                                            </p1:LookupSPUser>
                                            <p:GetODataProperties DisplayName="GetUserProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_23">
                                              <p:GetODataProperties.Source>
                                                <InArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">SPUser</mca:CSharpValue>
                                                </InArgument>
                                              </p:GetODataProperties.Source>
                                              <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                                <OutArgument x:TypeArguments="x:String" x:Key="Title">
                                                  <mca:CSharpReference x:TypeArguments="x:String">AssigneeDisplayName</mca:CSharpReference>
                                                </OutArgument>
                                              </scg:Dictionary>
                                            </p:GetODataProperties>
                                            <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_20">
                                              <p1:WriteToHistory.Message>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">"Record Coordinator Approval task assigned. Department: " + DepartmentName + ", Assigned To: " + AssigneeDisplayName</mca:CSharpValue>
                                                </InArgument>
                                              </p1:WriteToHistory.Message>
                                            </p1:WriteToHistory>
                                          </Sequence>
                                        </ActivityAction>
                                      </ForEach>
                                      <p1:CompositeTask AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned - %Task: Title%" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style='font-size:21pt;color:#0066cc;'&gt;%Task: Title%&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled - %Task: Title%" CompletedStatus="Completed" CompletionCriteria="1" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="1" DisplayName="Assign Record Coordinator Approval Tasks" ExpandGroup="True" sap2010:WorkflowViewState.IdRef="CompositeTask_7" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size: 10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif; color:#ff3b3b;white-space:nowrap;padding-right:15px;vertical-align:top;padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size: 11pt;font-family:Segoe UI Light,sans-serif;color:#ff3b3b;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue - %Task: Title%" OverdueReminderRepeat="1" OverdueRepeatTimes="-1" ParallelAssignment="True" SendReminderEmail="True" WaitForTaskCompletion="True">
                                        <p1:CompositeTask.AssignedTo>
                                          <InArgument x:TypeArguments="sco:Collection(x:String)">
                                            <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">DepartmentMemberLoginNames</mca:CSharpValue>
                                          </InArgument>
                                        </p1:CompositeTask.AssignedTo>
                                        <p1:CompositeTask.Body>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String">"Please review and approve the destruction report " + CurrentItemName</mca:CSharpValue>
                                          </InArgument>
                                        </p1:CompositeTask.Body>
                                        <p1:CompositeTask.CompletionCriteriaProperties>
                                          <InArgument x:TypeArguments="scg:IDictionary(x:String, x:Object)">
                                            <p:BuildDictionary x:TypeArguments="x:String, x:Object" />
                                          </InArgument>
                                        </p1:CompositeTask.CompletionCriteriaProperties>
                                        <p1:CompositeTask.DueDate>
                                          <InArgument x:TypeArguments="s:DateTime">
                                            <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.UtcNow.AddDays(3)</mca:CSharpValue>
                                          </InArgument>
                                        </p1:CompositeTask.DueDate>
                                        <p1:CompositeTask.Outcome>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpReference x:TypeArguments="x:Int32">RecordCoordinatorApprovalOutcome</mca:CSharpReference>
                                          </OutArgument>
                                        </p1:CompositeTask.Outcome>
                                        <p1:CompositeTask.RelatedContentLinkListId>
                                          <InArgument x:TypeArguments="s:Guid">
                                            <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                              <p1:GetCurrentListId />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </p1:CompositeTask.RelatedContentLinkListId>
                                        <p1:CompositeTask.RelatedContentLinkListItemId>
                                          <InArgument x:TypeArguments="s:Guid">
                                            <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                              <p1:GetCurrentItemGuid />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </p1:CompositeTask.RelatedContentLinkListItemId>
                                        <p1:CompositeTask.RelatedContentLinkListItemIntegerId>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                              <p1:GetCurrentItemId />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </p1:CompositeTask.RelatedContentLinkListItemIntegerId>
                                        <p1:CompositeTask.Title>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String">"Review and Approve Destruction Report " + CurrentItemName + " (Department: " + DepartmentName + ")"</mca:CSharpValue>
                                          </InArgument>
                                        </p1:CompositeTask.Title>
                                      </p1:CompositeTask>
                                      <If DisplayName="If Approved" sap2010:WorkflowViewState.IdRef="If_5">
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpValue x:TypeArguments="x:Boolean">RecordCoordinatorApprovalOutcome == 0</mca:CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String">RecordCoordinatorOutcomeString</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">Approved</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <p:RemoveFromDictionary x:TypeArguments="x:String, scg:IDictionary(x:String, sco:Collection(x:String))" DisplayName="Remove from RecordCoordinators Dictionary" sap2010:WorkflowViewState.IdRef="RemoveFromDictionary`2_3">
                                              <p:RemoveFromDictionary.Dictionary>
                                                <InArgument x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                                                  <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">RecordCoordinators</mca:CSharpValue>
                                                </InArgument>
                                              </p:RemoveFromDictionary.Dictionary>
                                              <p:RemoveFromDictionary.Key>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">RecordCoordinatorItemId</mca:CSharpValue>
                                                </InArgument>
                                              </p:RemoveFromDictionary.Key>
                                            </p:RemoveFromDictionary>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <mca:CSharpReference x:TypeArguments="x:String">RecordCoordinatorOutcomeString</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Rejected</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Else>
                                      </If>
                                      <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_21">
                                        <p1:WriteToHistory.Message>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String">String.Format("Record Coordinator Approval task for department {0} completed. Outcome: {1}",DepartmentName,RecordCoordinatorOutcomeString)</mca:CSharpValue>
                                          </InArgument>
                                        </p1:WriteToHistory.Message>
                                      </p1:WriteToHistory>
                                    </Sequence>
                                  </ActivityAction>
                                </ForEach>
                              </Sequence>
                            </ActivityAction>
                          </ParallelForEach>
                          <p:CountDictionary x:TypeArguments="x:String, scg:IDictionary(x:String, sco:Collection(x:String))" DisplayName="Count Number of Remaining Record Coordinators" sap2010:WorkflowViewState.IdRef="CountDictionary`2_3">
                            <p:CountDictionary.Dictionary>
                              <InArgument x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                                <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">RecordCoordinators</mca:CSharpValue>
                              </InArgument>
                            </p:CountDictionary.Dictionary>
                            <p:CountDictionary.Result>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">CountRecordCoordinators</mca:CSharpReference>
                              </OutArgument>
                            </p:CountDictionary.Result>
                          </p:CountDictionary>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowDecision x:Name="__ReferenceID6" DisplayName="If No Remaining Record Coordinators" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                            <FlowDecision.Condition>
                              <mca:CSharpValue x:TypeArguments="x:Boolean">CountRecordCoordinators == 0</mca:CSharpValue>
                            </FlowDecision.Condition>
                            <FlowDecision.True>
                              <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                <Sequence DisplayName="Record Custodian Approval" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="RestApi" />
                                    <Variable x:TypeArguments="p:DynamicValue" Name="RecordCustodianResponse" />
                                    <Variable x:TypeArguments="p:DynamicValue" Name="RecordCustodianUsersData" />
                                    <Variable x:TypeArguments="sco:Collection(x:String)" Name="RecordCustodianUserLoginNames" />
                                    <Variable x:TypeArguments="x:String" Name="RecordCustodianApprovalOutcomeString" />
                                  </Sequence.Variables>
                                  <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_9">
                                    <p1:AppOnlySequence.Body>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_63">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                                          <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                                          <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                                          <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                                          <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                                        </Sequence.Variables>
                                        <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_10" Method="POST">
                                          <p:HttpSend.RequestHeaders>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <p:SetDynamicValueProperties>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                                </scg:Dictionary>
                                              </p:SetDynamicValueProperties>
                                            </InArgument>
                                          </p:HttpSend.RequestHeaders>
                                          <p:HttpSend.ResponseContent>
                                            <OutArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                            </OutArgument>
                                          </p:HttpSend.ResponseContent>
                                          <p:HttpSend.Uri>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                            </InArgument>
                                          </p:HttpSend.Uri>
                                        </p:HttpSend>
                                        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_11" PropertyName="d/GetContextWebInformation/FormDigestValue">
                                          <p:GetDynamicValueProperty.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                            </OutArgument>
                                          </p:GetDynamicValueProperty.Result>
                                          <p:GetDynamicValueProperty.Source>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                            </InArgument>
                                          </p:GetDynamicValueProperty.Source>
                                        </p:GetDynamicValueProperty>
                                        <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_8">
                                          <p:BuildDynamicValue.Result>
                                            <InOutArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                            </InOutArgument>
                                          </p:BuildDynamicValue.Result>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                            <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                              <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Record Custodian Approval",WorkflowInstanceUrl)</mca:CSharpValue>
                                            </InArgument>
                                          </scg:Dictionary>
                                        </p:BuildDynamicValue>
                                        <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_16">
                                          <p:BuildCollection.Result>
                                            <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                              <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                            </OutArgument>
                                          </p:BuildCollection.Result>
                                          <p:BuildCollection.Values>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                            </InArgument>
                                          </p:BuildCollection.Values>
                                        </p:BuildCollection>
                                        <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_9">
                                          <p:BuildDynamicValue.Result>
                                            <InOutArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                            </InOutArgument>
                                          </p:BuildDynamicValue.Result>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                            <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                              <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </scg:Dictionary>
                                        </p:BuildDynamicValue>
                                        <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_11" Method="POST">
                                          <p:HttpSend.RequestContent>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                            </InArgument>
                                          </p:HttpSend.RequestContent>
                                          <p:HttpSend.RequestHeaders>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <p:SetDynamicValueProperties>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                                    <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                                  </InArgument>
                                                </scg:Dictionary>
                                              </p:SetDynamicValueProperties>
                                            </InArgument>
                                          </p:HttpSend.RequestHeaders>
                                          <p:HttpSend.Uri>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                            </InArgument>
                                          </p:HttpSend.Uri>
                                        </p:HttpSend>
                                        <p:SetUserStatus Description="Record Custodian Approval" sap2010:WorkflowViewState.IdRef="SetUserStatus_4" />
                                      </Sequence>
                                    </p1:AppOnlySequence.Body>
                                  </p1:AppOnlySequence>
                                  <Assign DisplayName="REST Url for Record Custodian Users" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">RestApi</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}_api/web/sitegroups/getbyname('Record Custodian')/Users",WebUrl)</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <p:HttpSend DisplayName="REST Call to get users from Record Custodian Group" sap2010:WorkflowViewState.IdRef="HttpSend_3" Method="GET">
                                    <p:HttpSend.RequestHeaders>
                                      <InArgument x:TypeArguments="p:DynamicValue">
                                        <p:SetDynamicValueProperties>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                            <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                          </scg:Dictionary>
                                        </p:SetDynamicValueProperties>
                                      </InArgument>
                                    </p:HttpSend.RequestHeaders>
                                    <p:HttpSend.ResponseContent>
                                      <OutArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">RecordCustodianResponse</mca:CSharpReference>
                                      </OutArgument>
                                    </p:HttpSend.ResponseContent>
                                    <p:HttpSend.Uri>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">RestApi</mca:CSharpValue>
                                      </InArgument>
                                    </p:HttpSend.Uri>
                                  </p:HttpSend>
                                  <p:GetDynamicValueProperty x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_5" PropertyName="d/results">
                                    <p:GetDynamicValueProperty.Result>
                                      <OutArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">RecordCustodianUsersData</mca:CSharpReference>
                                      </OutArgument>
                                    </p:GetDynamicValueProperty.Result>
                                    <p:GetDynamicValueProperty.Source>
                                      <InArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpValue x:TypeArguments="p:DynamicValue">RecordCustodianResponse</mca:CSharpValue>
                                      </InArgument>
                                    </p:GetDynamicValueProperty.Source>
                                  </p:GetDynamicValueProperty>
                                  <p:BuildCollection x:TypeArguments="x:String" DisplayName="Initialize Record Custodian Email Collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_10">
                                    <p:BuildCollection.Result>
                                      <OutArgument x:TypeArguments="sco:Collection(x:String)">
                                        <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">RecordCustodianUserLoginNames</mca:CSharpReference>
                                      </OutArgument>
                                    </p:BuildCollection.Result>
                                  </p:BuildCollection>
                                  <ForEach x:TypeArguments="p:DynamicValue" DisplayName="ForEach Record Custodian User" sap2010:WorkflowViewState.IdRef="ForEach`1_22">
                                    <ForEach.Values>
                                      <InArgument x:TypeArguments="scg:IEnumerable(p:DynamicValue)">
                                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)">RecordCustodianUsersData</mca:CSharpValue>
                                      </InArgument>
                                    </ForEach.Values>
                                    <ActivityAction x:TypeArguments="p:DynamicValue">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="p:DynamicValue" Name="UserData" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Get Record Custodian Login Name" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="UserLoginName" />
                                        </Sequence.Variables>
                                        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Record Custodian Login Name" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_6" PropertyName="LoginName">
                                          <p:GetDynamicValueProperty.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String">UserLoginName</mca:CSharpReference>
                                            </OutArgument>
                                          </p:GetDynamicValueProperty.Result>
                                          <p:GetDynamicValueProperty.Source>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">UserData</mca:CSharpValue>
                                            </InArgument>
                                          </p:GetDynamicValueProperty.Source>
                                        </p:GetDynamicValueProperty>
                                        <AddToCollection x:TypeArguments="x:String" DisplayName="Add User Login Name to Collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_10">
                                          <AddToCollection.Item>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">UserLoginName</mca:CSharpValue>
                                            </InArgument>
                                          </AddToCollection.Item>
                                          <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">RecordCustodianUserLoginNames</mca:CSharpValue>
                                          </InArgument>
                                        </AddToCollection>
                                      </Sequence>
                                    </ActivityAction>
                                  </ForEach>
                                  <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_22" Message="Record Custodian Approval task assigned to Record Custodian." />
                                  <p1:CompositeTask AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned - %Task: Title%" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style='font-size:21pt;color:#0066cc;'&gt;%Task: Title%&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled - %Task: Title%" CompletedStatus="Completed" CompletionCriteria="1" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" DisplayName="Assign Record Custodian Approval Task" ExpandGroup="True" sap2010:WorkflowViewState.IdRef="CompositeTask_8" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size: 10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif; color:#ff3b3b;white-space:nowrap;padding-right:15px;vertical-align:top;padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size: 11pt;font-family:Segoe UI Light,sans-serif;color:#ff3b3b;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue - %Task: Title%" OverdueReminderRepeat="1" OverdueRepeatTimes="-1" ParallelAssignment="True" SendReminderEmail="True" WaitForTaskCompletion="True">
                                    <p1:CompositeTask.AssignedTo>
                                      <InArgument x:TypeArguments="sco:Collection(x:String)">
                                        <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">RecordCustodianUserLoginNames</mca:CSharpValue>
                                      </InArgument>
                                    </p1:CompositeTask.AssignedTo>
                                    <p1:CompositeTask.Body>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">"Please review and approve the destruction report " + CurrentItemName</mca:CSharpValue>
                                      </InArgument>
                                    </p1:CompositeTask.Body>
                                    <p1:CompositeTask.CompletionCriteriaProperties>
                                      <InArgument x:TypeArguments="scg:IDictionary(x:String, x:Object)">
                                        <p:BuildDictionary x:TypeArguments="x:String, x:Object" />
                                      </InArgument>
                                    </p1:CompositeTask.CompletionCriteriaProperties>
                                    <p1:CompositeTask.DueDate>
                                      <InArgument x:TypeArguments="s:DateTime">
                                        <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.UtcNow.AddDays(3)</mca:CSharpValue>
                                      </InArgument>
                                    </p1:CompositeTask.DueDate>
                                    <p1:CompositeTask.Outcome>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">RecordCustodianApprovalOutcome</mca:CSharpReference>
                                      </OutArgument>
                                    </p1:CompositeTask.Outcome>
                                    <p1:CompositeTask.RelatedContentLinkListId>
                                      <InArgument x:TypeArguments="s:Guid">
                                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                          <p1:GetCurrentListId />
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:CompositeTask.RelatedContentLinkListId>
                                    <p1:CompositeTask.RelatedContentLinkListItemId>
                                      <InArgument x:TypeArguments="s:Guid">
                                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                          <p1:GetCurrentItemGuid />
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:CompositeTask.RelatedContentLinkListItemId>
                                    <p1:CompositeTask.RelatedContentLinkListItemIntegerId>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                          <p1:GetCurrentItemId />
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:CompositeTask.RelatedContentLinkListItemIntegerId>
                                    <p1:CompositeTask.Title>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">"Review and Approve Destruction Report " + CurrentItemName</mca:CSharpValue>
                                      </InArgument>
                                    </p1:CompositeTask.Title>
                                  </p1:CompositeTask>
                                  <If sap2010:WorkflowViewState.IdRef="If_6">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">RecordCustodianApprovalOutcome == 0</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String">RecordCustodianApprovalOutcomeString</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Approved</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String">RecordCustodianApprovalOutcomeString</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Rejected</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                  <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_23">
                                    <p1:WriteToHistory.Message>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">String.Format("Record Custodian Approval task completed. Outcome: {0}", RecordCustodianApprovalOutcomeString)</mca:CSharpValue>
                                      </InArgument>
                                    </p1:WriteToHistory.Message>
                                  </p1:WriteToHistory>
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowDecision x:Name="__ReferenceID4" DisplayName="If Record Custodian Approved" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                    <FlowDecision.Condition>
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">RecordCustodianApprovalOutcome == 0</mca:CSharpValue>
                                    </FlowDecision.Condition>
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                                        <Sequence DisplayName="Report Approved" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="sco:Collection(x:String)" Name="EmailRecipients" />
                                          </Sequence.Variables>
                                          <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_10">
                                            <p1:AppOnlySequence.Body>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                                                  <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                                                  <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                                                  <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                                                  <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                                                </Sequence.Variables>
                                                <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_12" Method="POST">
                                                  <p:HttpSend.RequestHeaders>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <p:SetDynamicValueProperties>
                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                          <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                                        </scg:Dictionary>
                                                      </p:SetDynamicValueProperties>
                                                    </InArgument>
                                                  </p:HttpSend.RequestHeaders>
                                                  <p:HttpSend.ResponseContent>
                                                    <OutArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:HttpSend.ResponseContent>
                                                  <p:HttpSend.Uri>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:HttpSend.Uri>
                                                </p:HttpSend>
                                                <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_12" PropertyName="d/GetContextWebInformation/FormDigestValue">
                                                  <p:GetDynamicValueProperty.Result>
                                                    <OutArgument x:TypeArguments="x:String">
                                                      <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:GetDynamicValueProperty.Result>
                                                  <p:GetDynamicValueProperty.Source>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:GetDynamicValueProperty.Source>
                                                </p:GetDynamicValueProperty>
                                                <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_10">
                                                  <p:BuildDynamicValue.Result>
                                                    <InOutArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                                    </InOutArgument>
                                                  </p:BuildDynamicValue.Result>
                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                    <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Report Approved",WorkflowInstanceUrl)</mca:CSharpValue>
                                                    </InArgument>
                                                  </scg:Dictionary>
                                                </p:BuildDynamicValue>
                                                <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_17">
                                                  <p:BuildCollection.Result>
                                                    <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                                      <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:BuildCollection.Result>
                                                  <p:BuildCollection.Values>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:BuildCollection.Values>
                                                </p:BuildCollection>
                                                <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_11">
                                                  <p:BuildDynamicValue.Result>
                                                    <InOutArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                                    </InOutArgument>
                                                  </p:BuildDynamicValue.Result>
                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                    <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                                      <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </scg:Dictionary>
                                                </p:BuildDynamicValue>
                                                <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_13" Method="POST">
                                                  <p:HttpSend.RequestContent>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:HttpSend.RequestContent>
                                                  <p:HttpSend.RequestHeaders>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <p:SetDynamicValueProperties>
                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                          <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                                            <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                                          </InArgument>
                                                        </scg:Dictionary>
                                                      </p:SetDynamicValueProperties>
                                                    </InArgument>
                                                  </p:HttpSend.RequestHeaders>
                                                  <p:HttpSend.Uri>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:HttpSend.Uri>
                                                </p:HttpSend>
                                                <p:SetUserStatus Description="Report Approved" sap2010:WorkflowViewState.IdRef="SetUserStatus_5" />
                                                <p:BuildCollection x:TypeArguments="x:String" DisplayName="Initialize Email Recipients Collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_11">
                                                  <p:BuildCollection.Result>
                                                    <OutArgument x:TypeArguments="sco:Collection(x:String)">
                                                      <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">EmailRecipients</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:BuildCollection.Result>
                                                </p:BuildCollection>
                                                <AddToCollection x:TypeArguments="x:String" DisplayName="Add Workflow Initiator to Recipient List" sap2010:WorkflowViewState.IdRef="AddToCollection`1_11">
                                                  <AddToCollection.Item>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">Initiator</mca:CSharpValue>
                                                    </InArgument>
                                                  </AddToCollection.Item>
                                                  <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">EmailRecipients</mca:CSharpValue>
                                                  </InArgument>
                                                </AddToCollection>
                                                <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" DisplayName="Send Notification Email to Initiator" sap2010:WorkflowViewState.IdRef="Email_5">
                                                  <p1:Email.Body>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">"&lt;HTML&gt;&lt;HEAD&gt; &lt;META name=GENERATOR content='MSHTML 11.00.9600.17280'&gt;&lt;/HEAD&gt; &lt;BODY&gt; &lt;P&gt;&lt;FONT face='Segoe UI'&gt;The following destruction report was approved:&lt;/FONT&gt;&lt;/P&gt; &lt;P&gt;" + CurrentItemName + "&lt;/P&gt;&lt;/BODY&gt;&lt;/HTML&gt;"</mca:CSharpValue>
                                                    </InArgument>
                                                  </p1:Email.Body>
                                                  <p1:Email.Subject>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">"Destruction Report " + CurrentItemName + " was Approved"</mca:CSharpValue>
                                                    </InArgument>
                                                  </p1:Email.Subject>
                                                  <p1:Email.To>
                                                    <InArgument x:TypeArguments="sco:Collection(x:String)">
                                                      <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">EmailRecipients</mca:CSharpValue>
                                                    </InArgument>
                                                  </p1:Email.To>
                                                </p1:Email>
                                              </Sequence>
                                            </p1:AppOnlySequence.Body>
                                          </p1:AppOnlySequence>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_32">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">
                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">WorkflowTerminated</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                                        <Sequence DisplayName="Report Rejected" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="sco:Collection(x:String)" Name="EmailRecipients" />
                                          </Sequence.Variables>
                                          <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_11">
                                            <p1:AppOnlySequence.Body>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                                                  <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                                                  <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                                                  <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                                                  <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                                                </Sequence.Variables>
                                                <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_14" Method="POST">
                                                  <p:HttpSend.RequestHeaders>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <p:SetDynamicValueProperties>
                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                          <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                                        </scg:Dictionary>
                                                      </p:SetDynamicValueProperties>
                                                    </InArgument>
                                                  </p:HttpSend.RequestHeaders>
                                                  <p:HttpSend.ResponseContent>
                                                    <OutArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:HttpSend.ResponseContent>
                                                  <p:HttpSend.Uri>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:HttpSend.Uri>
                                                </p:HttpSend>
                                                <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_13" PropertyName="d/GetContextWebInformation/FormDigestValue">
                                                  <p:GetDynamicValueProperty.Result>
                                                    <OutArgument x:TypeArguments="x:String">
                                                      <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:GetDynamicValueProperty.Result>
                                                  <p:GetDynamicValueProperty.Source>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:GetDynamicValueProperty.Source>
                                                </p:GetDynamicValueProperty>
                                                <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_12">
                                                  <p:BuildDynamicValue.Result>
                                                    <InOutArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                                    </InOutArgument>
                                                  </p:BuildDynamicValue.Result>
                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                    <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Report Rejected",WorkflowInstanceUrl)</mca:CSharpValue>
                                                    </InArgument>
                                                  </scg:Dictionary>
                                                </p:BuildDynamicValue>
                                                <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_18">
                                                  <p:BuildCollection.Result>
                                                    <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                                      <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:BuildCollection.Result>
                                                  <p:BuildCollection.Values>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:BuildCollection.Values>
                                                </p:BuildCollection>
                                                <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_13">
                                                  <p:BuildDynamicValue.Result>
                                                    <InOutArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                                    </InOutArgument>
                                                  </p:BuildDynamicValue.Result>
                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                    <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                                      <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </scg:Dictionary>
                                                </p:BuildDynamicValue>
                                                <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_15" Method="POST">
                                                  <p:HttpSend.RequestContent>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:HttpSend.RequestContent>
                                                  <p:HttpSend.RequestHeaders>
                                                    <InArgument x:TypeArguments="p:DynamicValue">
                                                      <p:SetDynamicValueProperties>
                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                          <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                                            <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                                          </InArgument>
                                                        </scg:Dictionary>
                                                      </p:SetDynamicValueProperties>
                                                    </InArgument>
                                                  </p:HttpSend.RequestHeaders>
                                                  <p:HttpSend.Uri>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                                    </InArgument>
                                                  </p:HttpSend.Uri>
                                                </p:HttpSend>
                                                <p:SetUserStatus Description="Report Rejected" sap2010:WorkflowViewState.IdRef="SetUserStatus_6" />
                                                <p:BuildCollection x:TypeArguments="x:String" DisplayName="Initialize Email Recipients Collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_12">
                                                  <p:BuildCollection.Result>
                                                    <OutArgument x:TypeArguments="sco:Collection(x:String)">
                                                      <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">EmailRecipients</mca:CSharpReference>
                                                    </OutArgument>
                                                  </p:BuildCollection.Result>
                                                </p:BuildCollection>
                                                <AddToCollection x:TypeArguments="x:String" DisplayName="Add Workflow Initiator to Recipient List" sap2010:WorkflowViewState.IdRef="AddToCollection`1_12">
                                                  <AddToCollection.Item>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">Initiator</mca:CSharpValue>
                                                    </InArgument>
                                                  </AddToCollection.Item>
                                                  <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">EmailRecipients</mca:CSharpValue>
                                                  </InArgument>
                                                </AddToCollection>
                                                <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}" DisplayName="Send Notification Email to Initiator" sap2010:WorkflowViewState.IdRef="Email_6">
                                                  <p1:Email.Body>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">"&lt;HTML&gt;&lt;HEAD&gt; &lt;META name=GENERATOR content='MSHTML 11.00.9600.17280'&gt;&lt;/HEAD&gt; &lt;BODY&gt; &lt;P&gt;&lt;FONT face='Segoe UI'&gt;The following destruction report was rejected:&lt;/FONT&gt;&lt;/P&gt; &lt;P&gt;" + CurrentItemName + "&lt;/P&gt;&lt;/BODY&gt;&lt;/HTML&gt;"</mca:CSharpValue>
                                                    </InArgument>
                                                  </p1:Email.Body>
                                                  <p1:Email.Subject>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">"Destruction Report " + CurrentItemName + " was Rejected"</mca:CSharpValue>
                                                    </InArgument>
                                                  </p1:Email.Subject>
                                                  <p1:Email.To>
                                                    <InArgument x:TypeArguments="sco:Collection(x:String)">
                                                      <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">EmailRecipients</mca:CSharpValue>
                                                    </InArgument>
                                                  </p1:Email.To>
                                                </p1:Email>
                                              </Sequence>
                                            </p1:AppOnlySequence.Body>
                                          </p1:AppOnlySequence>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <x:Reference>__ReferenceID0</x:Reference>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowDecision.True>
                            <FlowDecision.False>
                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                                <Sequence DisplayName="Assign Remediation Task to Initiator" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Int32" Name="RemediationTaskOutcome" />
                                    <Variable x:TypeArguments="x:String" Name="RemainingDepartments" />
                                    <Variable x:TypeArguments="x:Int32" Name="RemediationTaskItemId" />
                                    <Variable x:TypeArguments="p:DynamicValue" Name="RemediationTaskItem" />
                                    <Variable x:TypeArguments="x:String" Name="RemediationTaskResolution" />
                                  </Sequence.Variables>
                                  <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_8">
                                    <p1:AppOnlySequence.Body>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                                          <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                                          <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                                          <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                                          <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                                        </Sequence.Variables>
                                        <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_8" Method="POST">
                                          <p:HttpSend.RequestHeaders>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <p:SetDynamicValueProperties>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                                </scg:Dictionary>
                                              </p:SetDynamicValueProperties>
                                            </InArgument>
                                          </p:HttpSend.RequestHeaders>
                                          <p:HttpSend.ResponseContent>
                                            <OutArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                            </OutArgument>
                                          </p:HttpSend.ResponseContent>
                                          <p:HttpSend.Uri>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                            </InArgument>
                                          </p:HttpSend.Uri>
                                        </p:HttpSend>
                                        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_10" PropertyName="d/GetContextWebInformation/FormDigestValue">
                                          <p:GetDynamicValueProperty.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                            </OutArgument>
                                          </p:GetDynamicValueProperty.Result>
                                          <p:GetDynamicValueProperty.Source>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                            </InArgument>
                                          </p:GetDynamicValueProperty.Source>
                                        </p:GetDynamicValueProperty>
                                        <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_6">
                                          <p:BuildDynamicValue.Result>
                                            <InOutArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                            </InOutArgument>
                                          </p:BuildDynamicValue.Result>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                            <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                              <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Approval Remediation",WorkflowInstanceUrl)</mca:CSharpValue>
                                            </InArgument>
                                          </scg:Dictionary>
                                        </p:BuildDynamicValue>
                                        <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_15">
                                          <p:BuildCollection.Result>
                                            <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                              <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                            </OutArgument>
                                          </p:BuildCollection.Result>
                                          <p:BuildCollection.Values>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                            </InArgument>
                                          </p:BuildCollection.Values>
                                        </p:BuildCollection>
                                        <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_7">
                                          <p:BuildDynamicValue.Result>
                                            <InOutArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                            </InOutArgument>
                                          </p:BuildDynamicValue.Result>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                            <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                              <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </scg:Dictionary>
                                        </p:BuildDynamicValue>
                                        <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_9" Method="POST">
                                          <p:HttpSend.RequestContent>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                            </InArgument>
                                          </p:HttpSend.RequestContent>
                                          <p:HttpSend.RequestHeaders>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <p:SetDynamicValueProperties>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                                    <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                                  </InArgument>
                                                </scg:Dictionary>
                                              </p:SetDynamicValueProperties>
                                            </InArgument>
                                          </p:HttpSend.RequestHeaders>
                                          <p:HttpSend.Uri>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                            </InArgument>
                                          </p:HttpSend.Uri>
                                        </p:HttpSend>
                                        <p:SetUserStatus Description="Approval Remediation" sap2010:WorkflowViewState.IdRef="SetUserStatus_3" />
                                      </Sequence>
                                    </p1:AppOnlySequence.Body>
                                  </p1:AppOnlySequence>
                                  <Assign DisplayName="Initialize Remaining Departments String" sap2010:WorkflowViewState.IdRef="Assign_24">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <mca:CSharpReference x:TypeArguments="x:String">RemainingDepartments</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ForEach x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))" DisplayName="ForEach RecordCoordinator" sap2010:WorkflowViewState.IdRef="ForEach`1_24">
                                    <ForEach.Values>
                                      <InArgument x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String))))">
                                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String))))">RecordCoordinators</mca:CSharpValue>
                                      </InArgument>
                                    </ForEach.Values>
                                    <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))" Name="RecordCoordinator" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Parse Departments" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))" Name="Departments" />
                                        </Sequence.Variables>
                                        <p:SplitKeyValuePair x:TypeArguments="x:String, scg:IDictionary(x:String, sco:Collection(x:String))" DisplayName="Get Department Dictionary" sap2010:WorkflowViewState.IdRef="SplitKeyValuePair`2_13">
                                          <p:SplitKeyValuePair.Input>
                                            <InArgument x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">
                                              <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, scg:IDictionary(x:String, sco:Collection(x:String)))">RecordCoordinator</mca:CSharpValue>
                                            </InArgument>
                                          </p:SplitKeyValuePair.Input>
                                          <p:SplitKeyValuePair.Value>
                                            <OutArgument x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">
                                              <mca:CSharpReference x:TypeArguments="scg:IDictionary(x:String, sco:Collection(x:String))">Departments</mca:CSharpReference>
                                            </OutArgument>
                                          </p:SplitKeyValuePair.Value>
                                        </p:SplitKeyValuePair>
                                        <ForEach x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))" DisplayName="ForEach Department" sap2010:WorkflowViewState.IdRef="ForEach`1_23">
                                          <ForEach.Values>
                                            <InArgument x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, sco:Collection(x:String)))">
                                              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(x:String, sco:Collection(x:String)))">Departments</mca:CSharpValue>
                                            </InArgument>
                                          </ForEach.Values>
                                          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))" Name="Department" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Add Department to Remaining Departments String" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="DepartmentName" />
                                              </Sequence.Variables>
                                              <p:SplitKeyValuePair x:TypeArguments="x:String, sco:Collection(x:String)" DisplayName="Get Department Name" sap2010:WorkflowViewState.IdRef="SplitKeyValuePair`2_14">
                                                <p:SplitKeyValuePair.Input>
                                                  <InArgument x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))">
                                                    <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, sco:Collection(x:String))">Department</mca:CSharpValue>
                                                  </InArgument>
                                                </p:SplitKeyValuePair.Input>
                                                <p:SplitKeyValuePair.Key>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <mca:CSharpReference x:TypeArguments="x:String">DepartmentName</mca:CSharpReference>
                                                  </OutArgument>
                                                </p:SplitKeyValuePair.Key>
                                              </p:SplitKeyValuePair>
                                              <Assign DisplayName="Add to String" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <mca:CSharpReference x:TypeArguments="x:String">RemainingDepartments</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">RemainingDepartments + DepartmentName + "; "</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ActivityAction>
                                        </ForEach>
                                      </Sequence>
                                    </ActivityAction>
                                  </ForEach>
                                  <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_24">
                                    <p1:WriteToHistory.Message>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">"Remediation task assigned to " + InitiatorDisplayName + ". Remediation necessary for the following department(s): " + RemainingDepartments</mca:CSharpValue>
                                      </InArgument>
                                    </p1:WriteToHistory.Message>
                                  </p1:WriteToHistory>
                                  <p1:SingleTask TaskId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned - %Task: Title%" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style='font-size:21pt;color:#0066cc;'&gt;%Task: Title%&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled - %Task: Title%" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F0014F14759D7584200908C16EAA6ECFBEF" DefaultTaskOutcome="0" DisplayName="Assign Remediation Task" sap2010:WorkflowViewState.IdRef="SingleTask_6" OutcomeFieldName="ResumeOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;a style='font-size:21pt;color:#0066cc;' href='%TaskSpecial: TaskUrl%'&gt;%Task: Title%&lt;/a&gt;&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;table&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Assigned To&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: AssignedTo%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size: 10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif; color:#ff3b3b;white-space:nowrap;padding-right:15px;vertical-align:top;padding-top:2px;'&gt;Due Date&lt;/td&gt;&lt;td style='font-size: 11pt;font-family:Segoe UI Light,sans-serif;color:#ff3b3b;vertical-align:top;'&gt;%Task: DueDate%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Description&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;%Task: Body%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style='font-size:10pt;text-transform:uppercase;font-family:Segoe UI Light,sans-serif;color:#444444;white-space:nowrap;padding-right:15px;vertical-align:top; padding-top:2px;'&gt;Related Item&lt;/td&gt;&lt;td style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;vertical-align:top;'&gt;&lt;a href='%TaskSpecial: RelatedItemUrl%' class='link'&gt;%TaskSpecial: RelatedItemTitle%&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue - %Task: Title%" OverdueReminderRepeat="1" OverdueRepeatTimes="-1" SendReminderEmail="True" WaitForTaskCompletion="True">
                                    <p1:SingleTask.AssignedTo>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">Initiator</mca:CSharpValue>
                                      </InArgument>
                                    </p1:SingleTask.AssignedTo>
                                    <p1:SingleTask.Body>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">"Record Coordinator Approval for the Destruction Report named " + CurrentItemName + " was rejected by the following departments: " + RemainingDepartments + "Please remediate the issue. When the issue has been remediated, please log the steps you took to remediate the issue, then resume the workflow. The department(s) that rejected the destruction report will be assigned a new approval task."</mca:CSharpValue>
                                      </InArgument>
                                    </p1:SingleTask.Body>
                                    <p1:SingleTask.DueDate>
                                      <InArgument x:TypeArguments="s:DateTime">
                                        <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.UtcNow.AddDays(3)</mca:CSharpValue>
                                      </InArgument>
                                    </p1:SingleTask.DueDate>
                                    <p1:SingleTask.Outcome>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">RemediationTaskOutcome</mca:CSharpReference>
                                      </OutArgument>
                                    </p1:SingleTask.Outcome>
                                    <p1:SingleTask.RelatedContentLinkListId>
                                      <InArgument x:TypeArguments="s:Guid">
                                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                          <p1:GetCurrentListId />
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:SingleTask.RelatedContentLinkListId>
                                    <p1:SingleTask.RelatedContentLinkListItemId>
                                      <InArgument x:TypeArguments="s:Guid">
                                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                          <p1:GetCurrentItemGuid />
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:SingleTask.RelatedContentLinkListItemId>
                                    <p1:SingleTask.RelatedContentLinkListItemIntegerId>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                          <p1:GetCurrentItemId />
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:SingleTask.RelatedContentLinkListItemIntegerId>
                                    <p1:SingleTask.TaskItemId>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">RemediationTaskItemId</mca:CSharpReference>
                                      </OutArgument>
                                    </p1:SingleTask.TaskItemId>
                                    <p1:SingleTask.Title>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">"Remediate Destruction Report Approval for " + CurrentItemName</mca:CSharpValue>
                                      </InArgument>
                                    </p1:SingleTask.Title>
                                  </p1:SingleTask>
                                  <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Remediation Task" sap2010:WorkflowViewState.IdRef="LookupSPListItem_13">
                                    <p1:LookupSPListItem.ItemId>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpValue x:TypeArguments="x:Int32">RemediationTaskItemId</mca:CSharpValue>
                                      </InArgument>
                                    </p1:LookupSPListItem.ItemId>
                                    <p1:LookupSPListItem.ListId>
                                      <InArgument x:TypeArguments="s:Guid">
                                        <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/Destruction Workflow Tasks;}")</mca:CSharpValue>
                                      </InArgument>
                                    </p1:LookupSPListItem.ListId>
                                    <p1:LookupSPListItem.Result>
                                      <OutArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">RemediationTaskItem</mca:CSharpReference>
                                      </OutArgument>
                                    </p1:LookupSPListItem.Result>
                                  </p1:LookupSPListItem>
                                  <p:GetODataProperties DisplayName="Get Remediation Task Properties" sap2010:WorkflowViewState.IdRef="GetODataProperties_24">
                                    <p:GetODataProperties.Source>
                                      <InArgument x:TypeArguments="p:DynamicValue">
                                        <mca:CSharpValue x:TypeArguments="p:DynamicValue">RemediationTaskItem</mca:CSharpValue>
                                      </InArgument>
                                    </p:GetODataProperties.Source>
                                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                      <OutArgument x:TypeArguments="x:String" x:Key="RemediationSteps">
                                        <mca:CSharpReference x:TypeArguments="x:String">RemediationTaskResolution</mca:CSharpReference>
                                      </OutArgument>
                                    </scg:Dictionary>
                                  </p:GetODataProperties>
                                  <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_25">
                                    <p1:WriteToHistory.Message>
                                      <InArgument x:TypeArguments="x:String">
                                        <mca:CSharpValue x:TypeArguments="x:String">String.Format("Remediation task completed. The following steps were taken: {0}",RemediationTaskResolution)</mca:CSharpValue>
                                      </InArgument>
                                    </p1:WriteToHistory.Message>
                                  </p1:WriteToHistory>
                                </Sequence>
                                <FlowStep.Next>
                                  <x:Reference>__ReferenceID1</x:Reference>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowDecision.False>
                          </FlowDecision>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </Flowchart.StartNode>
                <x:Reference>__ReferenceID2</x:Reference>
                <x:Reference>__ReferenceID3</x:Reference>
                <x:Reference>__ReferenceID4</x:Reference>
                <x:Reference>__ReferenceID5</x:Reference>
                <x:Reference>__ReferenceID6</x:Reference>
                <x:Reference>__ReferenceID7</x:Reference>
                <x:Reference>__ReferenceID1</x:Reference>
                <x:Reference>__ReferenceID8</x:Reference>
                <x:Reference>__ReferenceID0</x:Reference>
              </Flowchart>
              <Flowchart DisplayName="Wait Branch" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                <Flowchart.Variables>
                  <Variable x:TypeArguments="p:DynamicValue" Name="UpdatedCurrentItem" />
                  <Variable x:TypeArguments="x:Int32" Name="UpdatedModifiedBy" />
                </Flowchart.Variables>
                <Flowchart.StartNode>
                  <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_28">
                    <p1:WaitForItemEvent ItemGuid="{x:Null}" RelatedItemId="{x:Null}" RelatedItemIntId="{x:Null}" DisplayName="Wait for Item Changed" EventName="ItemUpdated" sap2010:WorkflowViewState.IdRef="WaitForItemEvent_1">
                      <p1:WaitForItemEvent.ItemId>
                        <InArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                            <p1:GetCurrentItemId />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p1:WaitForItemEvent.ItemId>
                      <p1:WaitForItemEvent.ListId>
                        <InArgument x:TypeArguments="s:Guid">
                          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                            <p1:GetCurrentListId />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p1:WaitForItemEvent.ListId>
                    </p1:WaitForItemEvent>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_27">
                        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Get Current List Item" sap2010:WorkflowViewState.IdRef="LookupSPListItem_14">
                          <p1:LookupSPListItem.ItemId>
                            <InArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                <p1:GetCurrentItemId />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:LookupSPListItem.ItemId>
                          <p1:LookupSPListItem.ListId>
                            <InArgument x:TypeArguments="s:Guid">
                              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                <p1:GetCurrentListId />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:LookupSPListItem.ListId>
                          <p1:LookupSPListItem.Result>
                            <OutArgument x:TypeArguments="p:DynamicValue">
                              <mca:CSharpReference x:TypeArguments="p:DynamicValue">UpdatedCurrentItem</mca:CSharpReference>
                            </OutArgument>
                          </p1:LookupSPListItem.Result>
                        </p1:LookupSPListItem>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_26">
                            <p:GetODataProperties DisplayName="Get Item Properties" sap2010:WorkflowViewState.IdRef="GetODataProperties_25">
                              <p:GetODataProperties.Source>
                                <InArgument x:TypeArguments="p:DynamicValue">
                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">UpdatedCurrentItem</mca:CSharpValue>
                                </InArgument>
                              </p:GetODataProperties.Source>
                              <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                <OutArgument x:TypeArguments="x:Int32" x:Key="EditorId">
                                  <mca:CSharpReference x:TypeArguments="x:Int32">UpdatedModifiedBy</mca:CSharpReference>
                                </OutArgument>
                              </scg:Dictionary>
                            </p:GetODataProperties>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID12" DisplayName="Modified by System?" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
                                <FlowDecision.Condition>
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">UpdatedModifiedBy == 1073741822</mca:CSharpValue>
                                </FlowDecision.Condition>
                                <FlowDecision.True>
                                  <x:Reference>__ReferenceID9</x:Reference>
                                </FlowDecision.True>
                                <FlowDecision.False>
                                  <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_31">
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_67">
                                      <p1:AppOnlySequence sap2010:WorkflowViewState.IdRef="AppOnlySequence_12">
                                        <p1:AppOnlySequence.Body>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="p:DynamicValue" Name="ContextInfoResponse" />
                                              <Variable x:TypeArguments="x:String" Name="FormDigestValue" />
                                              <Variable x:TypeArguments="p:DynamicValue" Name="metadata" />
                                              <Variable x:TypeArguments="p:DynamicValue" Name="postBody" />
                                              <Variable x:TypeArguments="sco:Collection(p:DynamicValue)" Name="fieldValues" />
                                            </Sequence.Variables>
                                            <p:HttpSend DisplayName="Execute Context Info POST" sap2010:WorkflowViewState.IdRef="HttpSend_16" Method="POST">
                                              <p:HttpSend.RequestHeaders>
                                                <InArgument x:TypeArguments="p:DynamicValue">
                                                  <p:SetDynamicValueProperties>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                      <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                      <InArgument x:TypeArguments="x:Object" x:Key="Authorization" />
                                                    </scg:Dictionary>
                                                  </p:SetDynamicValueProperties>
                                                </InArgument>
                                              </p:HttpSend.RequestHeaders>
                                              <p:HttpSend.ResponseContent>
                                                <OutArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpReference>
                                                </OutArgument>
                                              </p:HttpSend.ResponseContent>
                                              <p:HttpSend.Uri>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">ContextInfoRestUrl</mca:CSharpValue>
                                                </InArgument>
                                              </p:HttpSend.Uri>
                                            </p:HttpSend>
                                            <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get FormDigestValue" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_14" PropertyName="d/GetContextWebInformation/FormDigestValue">
                                              <p:GetDynamicValueProperty.Result>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String">FormDigestValue</mca:CSharpReference>
                                                </OutArgument>
                                              </p:GetDynamicValueProperty.Result>
                                              <p:GetDynamicValueProperty.Source>
                                                <InArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">ContextInfoResponse</mca:CSharpValue>
                                                </InArgument>
                                              </p:GetDynamicValueProperty.Source>
                                            </p:GetDynamicValueProperty>
                                            <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_14">
                                              <p:BuildDynamicValue.Result>
                                                <InOutArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">metadata</mca:CSharpReference>
                                                </InOutArgument>
                                              </p:BuildDynamicValue.Result>
                                              <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                <InArgument x:TypeArguments="x:String" x:Key="FieldName">Destruction_x0020_Workflow_x0020_Status</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="FieldValue">
                                                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, Terminated",WorkflowInstanceUrl)</mca:CSharpValue>
                                                </InArgument>
                                              </scg:Dictionary>
                                            </p:BuildDynamicValue>
                                            <p:BuildCollection x:TypeArguments="p:DynamicValue" sap2010:WorkflowViewState.IdRef="BuildCollection`1_19">
                                              <p:BuildCollection.Result>
                                                <OutArgument x:TypeArguments="sco:Collection(p:DynamicValue)">
                                                  <mca:CSharpReference x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpReference>
                                                </OutArgument>
                                              </p:BuildCollection.Result>
                                              <p:BuildCollection.Values>
                                                <InArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">metadata</mca:CSharpValue>
                                                </InArgument>
                                              </p:BuildCollection.Values>
                                            </p:BuildCollection>
                                            <p:BuildDynamicValue sap2010:WorkflowViewState.IdRef="BuildDynamicValue_15">
                                              <p:BuildDynamicValue.Result>
                                                <InOutArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpReference x:TypeArguments="p:DynamicValue">postBody</mca:CSharpReference>
                                                </InOutArgument>
                                              </p:BuildDynamicValue.Result>
                                              <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                <InArgument x:TypeArguments="sco:Collection(p:DynamicValue)" x:Key="formValues">
                                                  <mca:CSharpValue x:TypeArguments="sco:Collection(p:DynamicValue)">fieldValues</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="bNewDocumentUpdate">True</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="checkInComment">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </scg:Dictionary>
                                            </p:BuildDynamicValue>
                                            <p:HttpSend DisplayName="Execute Item Update" sap2010:WorkflowViewState.IdRef="HttpSend_17" Method="POST">
                                              <p:HttpSend.RequestContent>
                                                <InArgument x:TypeArguments="p:DynamicValue">
                                                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">postBody</mca:CSharpValue>
                                                </InArgument>
                                              </p:HttpSend.RequestContent>
                                              <p:HttpSend.RequestHeaders>
                                                <InArgument x:TypeArguments="p:DynamicValue">
                                                  <p:SetDynamicValueProperties>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                      <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                                        <mca:CSharpValue x:TypeArguments="x:String">FormDigestValue</mca:CSharpValue>
                                                      </InArgument>
                                                    </scg:Dictionary>
                                                  </p:SetDynamicValueProperties>
                                                </InArgument>
                                              </p:HttpSend.RequestHeaders>
                                              <p:HttpSend.Uri>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">UpdateItemRestUrl</mca:CSharpValue>
                                                </InArgument>
                                              </p:HttpSend.Uri>
                                            </p:HttpSend>
                                            <p:SetUserStatus Description="Terminated" sap2010:WorkflowViewState.IdRef="SetUserStatus_7" />
                                          </Sequence>
                                        </p1:AppOnlySequence.Body>
                                      </p1:AppOnlySequence>
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID15">
                                        <p1:WriteToHistory Message="The workflow was terminated because the document was changed." sap2010:WorkflowViewState.IdRef="WriteToHistory_26" />
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_33">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">
                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">WorkflowTerminated</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </FlowStep>
                                        </FlowStep.Next>
                                        <sap2010:WorkflowViewState.IdRef>FlowStep_34</sap2010:WorkflowViewState.IdRef>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </Flowchart.StartNode>
                <x:Reference>__ReferenceID9</x:Reference>
                <x:Reference>__ReferenceID10</x:Reference>
                <x:Reference>__ReferenceID11</x:Reference>
                <x:Reference>__ReferenceID12</x:Reference>
                <x:Reference>__ReferenceID13</x:Reference>
                <x:Reference>__ReferenceID14</x:Reference>
                <x:Reference>__ReferenceID15</x:Reference>
              </Flowchart>
            </Parallel>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <sads:DebugSymbol.Symbol></sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LookupWorkflowContextProperty_11" sap:VirtualizedContainerService.HintSize="247,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="Initiator" Value="InitiatorUserId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupWorkflowContextProperty_12" sap:VirtualizedContainerService.HintSize="247,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="Instance ID" Value="WorkflowInstanceId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPPrincipalId_8" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="LookupSPUser_11" sap:VirtualizedContainerService.HintSize="247,89" />
      <sap2010:ViewStateData Id="GetODataProperties_26" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetCurrentItemId_5" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="LookupSPListItem_15" sap:VirtualizedContainerService.HintSize="247,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_27" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Destruction</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WebUri_4" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="LookupWorkflowContextProperty_13" sap:VirtualizedContainerService.HintSize="247,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="List Id" Value="ListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="BuildUri_1" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_4" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_7" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_2" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_13" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_3" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_5" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_1" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="269,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_1" sap:VirtualizedContainerService.HintSize="351,786" />
      <sap2010:ViewStateData Id="WriteToHistory_19" sap:VirtualizedContainerService.HintSize="351,68" />
      <sap2010:ViewStateData Id="SingleTask_5" sap:VirtualizedContainerService.HintSize="351,89" />
      <sap2010:ViewStateData Id="LookupSPListItem_11" sap:VirtualizedContainerService.HintSize="351,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="Destruction Workflow Tasks" Value="Lists/Destruction Workflow Tasks" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_20" sap:VirtualizedContainerService.HintSize="351,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Destruction Workflow Tasks</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDictionary`2_5" sap:VirtualizedContainerService.HintSize="351,22" />
      <sap2010:ViewStateData Id="LookupSPListItem_12" sap:VirtualizedContainerService.HintSize="299,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="Record Coordinators" Value="Lists/Record Coordinators" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_21" sap:VirtualizedContainerService.HintSize="299,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Record Coordinators</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildCollection`1_9" sap:VirtualizedContainerService.HintSize="299,22" />
      <sap2010:ViewStateData Id="LookupSPUser_9" sap:VirtualizedContainerService.HintSize="247,89" />
      <sap2010:ViewStateData Id="GetODataProperties_22" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_9" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="269,407">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_18" sap:VirtualizedContainerService.HintSize="299,557" />
      <sap2010:ViewStateData Id="BuildDictionary`2_6" sap:VirtualizedContainerService.HintSize="299,22" />
      <sap2010:ViewStateData Id="AddToDictionary`2_5" sap:VirtualizedContainerService.HintSize="299,22" />
      <sap2010:ViewStateData Id="AddToDictionary`2_6" sap:VirtualizedContainerService.HintSize="299,22" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="321,1190">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_19" sap:VirtualizedContainerService.HintSize="351,1340" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_6" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_9" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_4" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_14" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_5" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_7" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_2" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="269,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_7" sap:VirtualizedContainerService.HintSize="635,786" />
      <sap2010:ViewStateData Id="SplitKeyValuePair`2_11" sap:VirtualizedContainerService.HintSize="583,22" />
      <sap2010:ViewStateData Id="SplitKeyValuePair`2_12" sap:VirtualizedContainerService.HintSize="531,22" />
      <sap2010:ViewStateData Id="LookupSPPrincipalId_7" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="LookupSPUser_10" sap:VirtualizedContainerService.HintSize="247,89" />
      <sap2010:ViewStateData Id="GetODataProperties_23" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_20" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="269,561">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_20" sap:VirtualizedContainerService.HintSize="531,711" />
      <sap2010:ViewStateData Id="CompositeTask_7" sap:VirtualizedContainerService.HintSize="531,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="DefaultTaskOutcome" DisplayName="Rejected" Value="1" />
              <msdad:ViewStateNameValue x:Key="CompletionCriteria" DisplayName="Wait for first response" Value="1" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="RemoveFromDictionary`2_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="531,398" />
      <sap2010:ViewStateData Id="WriteToHistory_21" sap:VirtualizedContainerService.HintSize="531,68" />
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="553,1572">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_21" sap:VirtualizedContainerService.HintSize="583,1722" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="605,1908">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ParallelForEach`1_3" sap:VirtualizedContainerService.HintSize="635,2058" />
      <sap2010:ViewStateData Id="CountDictionary`2_3" sap:VirtualizedContainerService.HintSize="635,22" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_10" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_11" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_8" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_16" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_9" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_11" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_4" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="269,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_9" sap:VirtualizedContainerService.HintSize="509,786" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="509,62" />
      <sap2010:ViewStateData Id="HttpSend_3" sap:VirtualizedContainerService.HintSize="509,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_5" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="BuildCollection`1_10" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_22" sap:VirtualizedContainerService.HintSize="509,358" />
      <sap2010:ViewStateData Id="WriteToHistory_22" sap:VirtualizedContainerService.HintSize="509,68" />
      <sap2010:ViewStateData Id="CompositeTask_8" sap:VirtualizedContainerService.HintSize="509,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="CompletionCriteria" DisplayName="Wait for first response" Value="1" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="509,212" />
      <sap2010:ViewStateData Id="WriteToHistory_23" sap:VirtualizedContainerService.HintSize="509,68" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_12" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_12" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_10" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_17" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_11" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_13" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_5" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildCollection`1_11" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_11" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Email_5" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="269,970">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_10" sap:VirtualizedContainerService.HintSize="295,1018" />
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_32">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">148.895,759.01953125</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,654.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">150,705.02 150,735.02 269.895,735.02 269.895,759.01953125</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_14" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_13" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_12" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_18" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_13" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_15" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_6" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildCollection`1_12" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_12" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Email_6" sap:VirtualizedContainerService.HintSize="247,68" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="269,970">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_11" sap:VirtualizedContainerService.HintSize="295,1018" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">290,654.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">390,705.02 390,735.02 269.895,735.02 269.895,759.01953125</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="160,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">65,516.5</av:Point>
            <av:Size x:Key="ShapeSize">160,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">225,560 390,560 390,654.02</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">65,560 35,560 35,624.02 150,624.02 150,654.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,424.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">150,475.02 150,505.02 145,505.02 145,516.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_8" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_10" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_6" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_15" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_7" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_9" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_3" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="269,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_8" sap:VirtualizedContainerService.HintSize="346,786" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="346,62" />
      <sap2010:ViewStateData Id="SplitKeyValuePair`2_13" sap:VirtualizedContainerService.HintSize="294,22" />
      <sap2010:ViewStateData Id="SplitKeyValuePair`2_14" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_23" sap:VirtualizedContainerService.HintSize="294,398" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="316,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_24" sap:VirtualizedContainerService.HintSize="346,734" />
      <sap2010:ViewStateData Id="WriteToHistory_24" sap:VirtualizedContainerService.HintSize="346,68" />
      <sap2010:ViewStateData Id="SingleTask_6" sap:VirtualizedContainerService.HintSize="346,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ContentTypeId" DisplayName="Remediate Task" Value="0x0108003365C4474CAE8C42BCE396314E88E51F0049130F41D859644B864F7A09A2C29BDD" />
              <msdad:ViewStateNameValue x:Key="OutcomeFieldName" DisplayName="Resume_x0020_Outcome" Value="Resume_x0020_Outcome" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_13" sap:VirtualizedContainerService.HintSize="346,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="Destruction Workflow Tasks" Value="Lists/Destruction Workflow Tasks" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_24" sap:VirtualizedContainerService.HintSize="346,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/Destruction Workflow Tasks</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_25" sap:VirtualizedContainerService.HintSize="346,68" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">360,424.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">560,449.52 590,449.52 590,259.52 400,259.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_6" sap:VirtualizedContainerService.HintSize="160,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">215,306.5</av:Point>
            <av:Size x:Key="ShapeSize">160,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">375,350 460,350 460,424.02</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">215,350 150,350 150,424.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,234.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,285.02 295,285.02 295,306.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,134.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,185.02 300,234.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="614,958">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,134.02</av:PointCollection>
            <x:Double x:Key="Height">835.01953125</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitForItemEvent_1" sap:VirtualizedContainerService.HintSize="200,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="EventName" DisplayName="When an item is updated" Value="ItemUpdated" />
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_14" sap:VirtualizedContainerService.HintSize="200,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_25" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Destruction</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_16" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_14" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_14" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="BuildCollection`1_19" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="BuildDynamicValue_15" sap:VirtualizedContainerService.HintSize="247,92" />
      <sap2010:ViewStateData Id="HttpSend_17" sap:VirtualizedContainerService.HintSize="247,62" />
      <sap2010:ViewStateData Id="SetUserStatus_7" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="269,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppOnlySequence_12" sap:VirtualizedContainerService.HintSize="295,786" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_26" sap:VirtualizedContainerService.HintSize="200,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_33">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">188.895,809.01953125</av:Point>
            <av:Size x:Key="ShapeSize">242,62</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_34">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,695.02</av:Point>
            <av:Size x:Key="ShapeSize">200,68</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,763.02 310,793.02 309.895,793.02 309.895,809.01953125</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_31">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,604.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,655.02 310,695.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_7" sap:VirtualizedContainerService.HintSize="114,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">245,476.5</av:Point>
            <av:Size x:Key="ShapeSize">114,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">245,520 170,520 170,149.02 200,149.02</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">359,520 370,520 370,574.02 310,574.02 310,604.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">176.5,354</av:Point>
            <av:Size x:Key="ShapeSize">247,92</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,446 300,476 302,476 302,476.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,225.02</av:Point>
            <av:Size x:Key="ShapeSize">200,89</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,314.02 300,354</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,115.02</av:Point>
            <av:Size x:Key="ShapeSize">200,68</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,183.02 300,225.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_4" sap:VirtualizedContainerService.HintSize="664,958">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,115.02</av:PointCollection>
            <x:Double x:Key="Height">922</x:Double>
            <x:Double x:Key="Width">650</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1382,1004">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,224.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,175.5 300,224.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,124.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DestructionWorkflow.Destruction_Workflow.Workflow_1" sap:VirtualizedContainerService.HintSize="654,716" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>