 -- PINSPolicyFTP_Prod ENVIRONMENT VARIABLE VALUES --

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag
Declare @FTPArchiveFlag sql_variant = N'True'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag
Declare @FTPDeleteRemoteFileFlag sql_variant = N'False'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask
Declare @FTPFileMask sql_variant = N'ODS_POLICY_*'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent
Declare @FTPFileMask_Cedent sql_variant = N'ODS_CEDENT_*'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured
Declare @FTPFileMask_Insured sql_variant = N'ODS_INSURED_*'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder
Declare @FTPLocalArchiveFolder sql_variant = N'\\ManSan02\Batch$\ETL\PINS\Policy\Archive\'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder
Declare @FTPLocalFolder sql_variant = N'\\ManSan02\Batch$\ETL\PINS\Policy\'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword
Declare @FTPPassword sql_variant = N'ShareWithUs1!'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder
Declare @FTPRemoteFolder sql_variant = N'/US_Data_Transfer/Prod/ODS/'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer
Declare @FTPServer sql_variant = N'rsml.sharefileftp.com'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID
Declare @FTPUserID sql_variant = N'ud463dfcd5'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password
Declare @Password sql_variant = N'/* MANUALLY SET SENSITIVE PARAMETER VALUE HERE */'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients
Declare @PolicyEmailRecipients sql_variant = N'Roja_Kasula@trg.com'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection
Declare @SendMailConnection sql_variant = N'Data Source=ManProdbs01;Initial Catalog=ITProductionSupport;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;'

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName
Declare @ServerName sql_variant = N'ManProdbs01'



 ---------------------------------

/*
Script Name: C:\ProdTeamWorkRequirementDocs\PINS Policy\PINSPolicyFTP\4_BIETL01_SSISDB_PINSPolicyFTP_PINSPolicyFTP_Prod.environment.sql
Generated From Catalog Instance: BIETL01
Catalog Name: SSISDB
Folder Name: PINSPolicyFTP
Environment Name: PINSPolicyFTP_Prod
Generated By: TRG\rkasu
Generated Date: 2/22/2017 2:24:51 PM
Generated From: CatalogBase v1.1.1.0 executing on: RKASU-LAP
*/

print 'Script Name: C:\ProdTeamWorkRequirementDocs\PINS Policy\PINSPolicyFTP\4_BIProdETL01_SSISDB_PINSPolicyFTP_PINSPolicyFTP_Prod.environment.sql
Generated From Catalog Instance: BIETL01
Catalog Name: SSISDB
Folder Name: PINSPolicyFTP
Environment Name: PINSPolicyFTP_Prod
Generated By: TRG\rkasu
Generated Date: 2/22/2017 2:24:51 PM
Generated From: CatalogBase v1.1.1.0 executing on: RKASU-LAP'
print ''
print '------------------------------------------------------------'
print 'Deployed to Instance: ' + @@servername
print 'Deploy Date: ' + Convert(varchar,GetDate(), 101) + ' ' + Convert(varchar,GetDate(), 108)
print 'Deployed By: ' + original_login()
print '------------------------------------------------------------'
print ''

 -- Environment SSISDB\PINSPolicyFTP\PINSPolicyFTP_Prod
print 'Environment SSISDB\PINSPolicyFTP\PINSPolicyFTP_Prod'
If Not Exists(Select * 
           From SSISDB.[catalog].environments e 
           Join SSISDB.[catalog].folders f 
             On f.folder_id = e.folder_id 
           Where e.name = N'PINSPolicyFTP_Prod'
             And f.name = N'PINSPolicyFTP')

 begin
  print ' - Creating Environment SSISDB\PINSPolicyFTP\PINSPolicyFTP_Prod'

  Exec SSISDB.[catalog].create_environment 
      @environment_name=N'PINSPolicyFTP_Prod'
    , @folder_name=N'PINSPolicyFTP'
  print ' - Environment SSISDB\PINSPolicyFTP\PINSPolicyFTP_Prod created'
 end
else
 print ' - Environment SSISDB\PINSPolicyFTP\PINSPolicyFTP_Prod already exists.'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPArchiveFlag' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPArchiveFlag' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPArchiveFlag'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPArchiveFlag
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPArchiveFlag' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPArchiveFlag
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPArchiveFlag value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPDeleteRemoteFileFlag' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPDeleteRemoteFileFlag' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPDeleteRemoteFileFlag'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPDeleteRemoteFileFlag
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPDeleteRemoteFileFlag' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPDeleteRemoteFileFlag
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPDeleteRemoteFileFlag value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPFileMask' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPFileMask' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPFileMask'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPFileMask
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPFileMask' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPFileMask
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPFileMask_Cedent' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPFileMask_Cedent' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPFileMask_Cedent'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPFileMask_Cedent
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPFileMask_Cedent' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPFileMask_Cedent
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Cedent value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPFileMask_Insured' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPFileMask_Insured' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPFileMask_Insured'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPFileMask_Insured
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPFileMask_Insured' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPFileMask_Insured
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPFileMask_Insured value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPLocalArchiveFolder' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPLocalArchiveFolder' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPLocalArchiveFolder'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPLocalArchiveFolder
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPLocalArchiveFolder' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPLocalArchiveFolder
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalArchiveFolder value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPLocalFolder' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPLocalFolder' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPLocalFolder'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPLocalFolder
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPLocalFolder' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPLocalFolder
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPLocalFolder value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPPassword' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPPassword' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPPassword'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPPassword
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPPassword' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPPassword
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPPassword value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPRemoteFolder' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPRemoteFolder' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPRemoteFolder'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPRemoteFolder
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPRemoteFolder' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPRemoteFolder
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPRemoteFolder value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPServer' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPServer' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPServer'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPServer
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPServer' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPServer
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPServer value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'FTPUserID' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'FTPUserID' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'FTPUserID'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @FTPUserID
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'FTPUserID' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @FTPUserID
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\FTPUserID value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'Password' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'Password' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'Password'
    , @sensitive = 1
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @Password
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'Password' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @Password
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\Password value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'PolicyEmailRecipients' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'PolicyEmailRecipients' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'PolicyEmailRecipients'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @PolicyEmailRecipients
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'PolicyEmailRecipients' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @PolicyEmailRecipients
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\PolicyEmailRecipients value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'SendMailConnection' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'SendMailConnection' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'SendMailConnection'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @SendMailConnection
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'SendMailConnection' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @SendMailConnection
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\SendMailConnection value set'
print ''

-- Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName
print 'Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
	       Join SSISDB.[catalog].environments e 
			On e.environment_id = ev.environment_id 
		   Join SSISDB.[catalog].folders f 
			On f.folder_id = e.folder_id 
		   Where e.name = N'PINSPolicyFTP_Prod' 
			And ev.name = N'ServerName' 
			And f.name = N'PINSPolicyFTP') 
 begin
  print ' - Dropping Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'ServerName' 
  , @environment_name=N'PINSPolicyFTP_Prod' 
  , @folder_name=N'PINSPolicyFTP' 
  print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName dropped'
 end
print ' - Creating Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'ServerName'
    , @sensitive = 0
    , @environment_name = N'PINSPolicyFTP_Prod'
    , @folder_name = N'PINSPolicyFTP'
    , @value = @ServerName
    , @data_type = N'String'

print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName created'

-- Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName
print ' - Set Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'ServerName' 
    , @environment_name = N'PINSPolicyFTP_Prod' 
    , @folder_name = N'PINSPolicyFTP' 
    , @value = @ServerName
print ' - Environment Variable PINSPolicyFTP\PINSPolicyFTP_Prod\ServerName value set'
print ''

