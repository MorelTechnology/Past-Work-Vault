 -- JAMS_Logging_Env ENVIRONMENT VARIABLE VALUES --

-- Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework
Declare @Con_IAFramework_0 sql_variant = N'Data Source=BIDEVETL01;Initial Catalog=IAFramework;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;'

-- Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS
Declare @Con_JAMS_1 sql_variant = N'Data Source=BIETL01;Initial Catalog=JAMS;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;'

 ---------------------------------

/*
Script Name: H:\My SQL Code\Deployment Scripts\BIDEVETL01\JAMS_Logging\\4_BIDEVETL01_SSISDB_JAMS_Logging_JAMS_Logging_Env.environment.sql
Generated From Catalog Instance: BIDEVETL01
Catalog Name: SSISDB
Folder Name: JAMS_Logging
Environment Name: JAMS_Logging_Env
Generated By: TRG\jgabe
Generated Date: 5/7/2018 1:54:49 PM
Generated From: CatalogBase v2.0.2.0 executing on: JGABEL-LAP1
*/

print 'Script Name: H:\My SQL Code\Deployment Scripts\BIDEVETL01\JAMS_Logging\\4_BIDEVETL01_SSISDB_JAMS_Logging_JAMS_Logging_Env.environment.sql
Generated From Catalog Instance: BIDEVETL01
Catalog Name: SSISDB
Folder Name: JAMS_Logging
Environment Name: JAMS_Logging_Env
Generated By: TRG\jgabe
Generated Date: 5/7/2018 1:54:49 PM
Generated From: CatalogBase v2.0.2.0 executing on: JGABEL-LAP1'
print ''
print '------------------------------------------------------------'
print 'Deployed to Instance: ' + @@servername
print 'Deploy Date: ' + Convert(varchar,GetDate(), 101) + ' ' + Convert(varchar,GetDate(), 108)
print 'Deployed By: ' + original_login()
print '------------------------------------------------------------'
print ''
declare @ErrMsg varchar(100) 
print 'Check for folder: JAMS_Logging ' 
If Not Exists(Select name 
              From SSISDB.[catalog].folders 
              Where name = N'JAMS_Logging') 
 begin 
  set @ErrMsg = ' - JAMS_Logging does not exist.' 
  raisError(@ErrMsg, 16, 1) 
  return 
 end 
Else 
 begin 
  print ' - JAMS_Logging folder exists.' 
 end 
print '' 

 -- Environment SSISDB\JAMS_Logging\JAMS_Logging_Env
print 'Environment SSISDB\JAMS_Logging\JAMS_Logging_Env'
If Not Exists(Select * 
           From SSISDB.[catalog].environments e 
           Join SSISDB.[catalog].folders f 
             On f.folder_id = e.folder_id 
           Where e.name = N'JAMS_Logging_Env'
             And f.name = N'JAMS_Logging')

 begin
  print ' - Creating Environment SSISDB\JAMS_Logging\JAMS_Logging_Env'

  Exec SSISDB.[catalog].create_environment 
      @environment_name=N'JAMS_Logging_Env'
    , @folder_name=N'JAMS_Logging'
  print ' - Environment SSISDB\JAMS_Logging\JAMS_Logging_Env created'
 end
else
 print ' - Environment SSISDB\JAMS_Logging\JAMS_Logging_Env already exists.'
print ''

-- Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework
print 'Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
       Join SSISDB.[catalog].environments e 
On e.environment_id = ev.environment_id 
   Join SSISDB.[catalog].folders f 
On f.folder_id = e.folder_id 
   Where e.name = N'JAMS_Logging_Env' 
And ev.name = N'Con_IAFramework' 
And f.name = N'JAMS_Logging') 
 begin
  print ' - Dropping Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'Con_IAFramework' 
  , @environment_name=N'JAMS_Logging_Env' 
  , @folder_name=N'JAMS_Logging' 
  print ' - Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework dropped'
 end
print ' - Creating Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'Con_IAFramework'
    , @sensitive = 0
    , @environment_name = N'JAMS_Logging_Env'
    , @folder_name = N'JAMS_Logging'
    , @value = @Con_IAFramework_0
    , @data_type = N'String'

print ' - Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework created'

-- Set Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework
print ' - Set Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'Con_IAFramework' 
    , @environment_name = N'JAMS_Logging_Env' 
    , @folder_name = N'JAMS_Logging' 
    , @value = @Con_IAFramework_0
print ' - Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_IAFramework value set'
print ''

-- Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS
print 'Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS'
If Exists(Select * 
          From SSISDB.[catalog].environment_variables ev 
       Join SSISDB.[catalog].environments e 
On e.environment_id = ev.environment_id 
   Join SSISDB.[catalog].folders f 
On f.folder_id = e.folder_id 
   Where e.name = N'JAMS_Logging_Env' 
And ev.name = N'Con_JAMS' 
And f.name = N'JAMS_Logging') 
 begin
  print ' - Dropping Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS'
  Exec SSISDB.[catalog].delete_environment_variable 
    @variable_name=N'Con_JAMS' 
  , @environment_name=N'JAMS_Logging_Env' 
  , @folder_name=N'JAMS_Logging' 
  print ' - Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS dropped'
 end
print ' - Creating Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS'
Exec SSISDB.[catalog].create_environment_variable 
      @variable_name = N'Con_JAMS'
    , @sensitive = 0
    , @environment_name = N'JAMS_Logging_Env'
    , @folder_name = N'JAMS_Logging'
    , @value = @Con_JAMS_1
    , @data_type = N'String'

print ' - Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS created'

-- Set Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS
print ' - Set Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS value'
Exec SSISDB.[catalog].set_environment_variable_value 
      @variable_name = N'Con_JAMS' 
    , @environment_name = N'JAMS_Logging_Env' 
    , @folder_name = N'JAMS_Logging' 
    , @value = @Con_JAMS_1
print ' - Environment Variable JAMS_Logging\JAMS_Logging_Env\Con_JAMS value set'
print ''