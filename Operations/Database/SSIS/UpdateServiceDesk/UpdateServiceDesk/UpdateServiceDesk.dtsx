<?xml version="1.0"?><DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts" DTS:ExecutableType="SSIS.Package.2">
<DTS:Property DTS:Name="PackageFormatVersion">3</DTS:Property>
<DTS:Property DTS:Name="VersionComments"></DTS:Property>
<DTS:Property DTS:Name="CreatorName">TRG\smarc</DTS:Property>
<DTS:Property DTS:Name="CreatorComputerName">SMARC-LAP1</DTS:Property>
<DTS:Property DTS:Name="CreationDate" DTS:DataType="7">6/2/2015 10:01:23 AM</DTS:Property>
<DTS:Property DTS:Name="PackageType">5</DTS:Property>
<DTS:Property DTS:Name="ProtectionLevel">0</DTS:Property>
<DTS:Property DTS:Name="MaxConcurrentExecutables">-1</DTS:Property>
<DTS:Property DTS:Name="PackagePriorityClass">0</DTS:Property>
<DTS:Property DTS:Name="VersionMajor">1</DTS:Property>
<DTS:Property DTS:Name="VersionMinor">0</DTS:Property>
<DTS:Property DTS:Name="VersionBuild">135</DTS:Property>
<DTS:Property DTS:Name="VersionGUID">{EEF405EB-D8DB-4982-8E11-64A9B0B46076}</DTS:Property>
<DTS:Property DTS:Name="EnableConfig">-1</DTS:Property>
<DTS:Property DTS:Name="CheckpointFileName"></DTS:Property>
<DTS:Property DTS:Name="SaveCheckpoints">0</DTS:Property>
<DTS:Property DTS:Name="CheckpointUsage">0</DTS:Property>
<DTS:Property DTS:Name="SuppressConfigurationWarnings">0</DTS:Property>
<DTS:ConnectionManager>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">SQL2012R2.ServiceDesk</DTS:Property>
<DTS:Property DTS:Name="DTSID">{6871E289-D90D-48F6-AA5E-9CC9F61E83F7}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">OLEDB</DTS:Property><DTS:ObjectData><DTS:ConnectionManager>
<DTS:Property DTS:Name="Retain">0</DTS:Property><DTS:Password DTS:Name="Password" Sensitive="1"></DTS:Password>
<DTS:Property DTS:Name="ConnectionString">Data Source=SQLTEST2012R2;User ID=;Initial Catalog=ServiceDesk;Provider=SQLNCLI10.1;Integrated Security=SSPI;Application Name=SSIS-Package-{6871E289-D90D-48F6-AA5E-9CC9F61E83F7}SQL2012R2.ServiceDesk;</DTS:Property></DTS:ConnectionManager></DTS:ObjectData></DTS:ConnectionManager>
<DTS:Configuration>
<DTS:Property DTS:Name="ConfigurationType">1</DTS:Property>
<DTS:Property DTS:Name="ConfigurationString">C:\scott\UpdateServiceDesk\UpdateServiceDesk\UpdateServiceDesk.dtsConfig</DTS:Property>
<DTS:Property DTS:Name="ConfigurationVariable"></DTS:Property>
<DTS:Property DTS:Name="ObjectName">Configuration 1</DTS:Property>
<DTS:Property DTS:Name="DTSID">{756F2FA9-49EB-4B05-9249-0D4D97F2F1B8}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Configuration>
<DTS:Property DTS:Name="LastModifiedProductVersion">10.50.1600.1</DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">0</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">1033</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">2345</DTS:Property><DTS:VariableValue DTS:DataType="8">\\mansan02\share$\Production Support team\MailAttachments</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">AttachmentsPath</DTS:Property>
<DTS:Property DTS:Name="DTSID">{1BC8E8C5-AF40-4F14-A0DF-6D99A2EF7001}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">2345</DTS:Property><DTS:VariableValue DTS:DataType="8">Data Source=SQLTEST2012R2;Initial Catalog=ServiceDesk;Integrated Security=True</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">ConnectionString</DTS:Property>
<DTS:Property DTS:Name="DTSID">{33DAF8A2-DEF5-476F-91B1-B59D3612DA16}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">2345</DTS:Property><DTS:VariableValue DTS:DataType="8">Data Source=MANTESTBS01;Initial Catalog=FileAutomation;Integrated Security=True</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">ConnectionStringFiles</DTS:Property>
<DTS:Property DTS:Name="DTSID">{342B2564-96DC-4428-B6F8-03E3D400F8A3}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">6789</DTS:Property><DTS:VariableValue DTS:DataSubType="ManagedSerializable" DTS:DataType="13"><SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<SOAP-ENV:Body>
<xsd:anyType id="ref-1">
</xsd:anyType>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope></DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">ListOfValidTickets</DTS:Property>
<DTS:Property DTS:Name="DTSID">{495C5559-8854-4045-A73B-6452F07F56B5}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">2345</DTS:Property><DTS:VariableValue DTS:DataType="8">ee0eb78335d1e4ea02add34a18be2607</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">ManageEngineAuthToken</DTS:Property>
<DTS:Property DTS:Name="DTSID">{777FF68F-B60E-4BBF-832F-60093A14153B}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">6789</DTS:Property><DTS:VariableValue DTS:DataType="11">-1</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">NeedsToRun</DTS:Property>
<DTS:Property DTS:Name="DTSID">{D032EC4D-6430-4E20-91FC-FEFA9DDBACBA}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">2345</DTS:Property><DTS:VariableValue DTS:DataType="8">Scott_Test</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">ReportName</DTS:Property>
<DTS:Property DTS:Name="DTSID">{AE1D02B4-F6EF-47EC-9429-6E65B01AB7AA}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:Variable>
<DTS:Property DTS:Name="Expression"></DTS:Property>
<DTS:Property DTS:Name="EvaluateAsExpression">0</DTS:Property>
<DTS:Property DTS:Name="Namespace">User</DTS:Property>
<DTS:Property DTS:Name="ReadOnly">0</DTS:Property>
<DTS:Property DTS:Name="RaiseChangedEvent">0</DTS:Property>
<DTS:Property DTS:Name="IncludeInDebugDump">6789</DTS:Property><DTS:VariableValue DTS:DataType="3">200</DTS:VariableValue>
<DTS:Property DTS:Name="ObjectName">ShortRequestWait</DTS:Property>
<DTS:Property DTS:Name="DTSID">{06FFFB62-D295-4332-8216-67BE917CC712}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:Variable>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Determine if we need to run</DTS:Property>
<DTS:Property DTS:Name="DTSID">{EE3E6A38-1492-469F-BBC9-19559B44AE58}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_a9f43159fcfd4e979f7719e3dd4ba65a" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString" ReadWriteVariables="User::NeedsToRun"><ProjectItem Name="\scriptmain.cs">
<![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        //public static string connectionString;
        const string SQL = "select * from [ImportHistory] where [Date] >= CAST(GETDATE() AS date) and [Action]='COMPLETE'";
        string connectionString;

        public void Main()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();

            checkIfRunSuccessfullyToday();
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private void checkIfRunSuccessfullyToday()
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            using (SqlCommand command = new SqlCommand(SQL, connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.Read())
                        Dts.Variables["NeedsToRun"].Value = false;
                    else
                        Dts.Variables["NeedsToRun"].Value = true;
                }
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties.Settings.get_Default():ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties.Sett" +
    "ings")]

namespace ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><ProjectItem Name="\st_a9f43159fcfd4e979f7719e3dd4ba65a.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj</RootNamespace>
    <AssemblyName>ST_a9f43159fcfd4e979f7719e3dd4ba65a.csproj</AssemblyName>
    <ProjectGuid>{F2D61DBC-20B1-48A0-A3B7-4FC67FFA5913}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ScriptTask</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem><BinaryItem Name="\bin\release\st_a9f43159fcfd4e979f7719e3dd4ba65a.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEzPdVUAAAAAAAAAAOAAAiELAQgAABIAAAAIAAAAAAAAvjEA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQxAABXAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MQAAAAAAAEgAAAACAAUAgCIAAOQOAAABAAAAAAAAAMghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA0AAAoqEzADAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDgAACm8PAAAKcxAAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQq4gICKBMAAApvFAAA
CnKBAABwbxUAAApvFgAACm8XAAAKfQQAAAQCKAYAAAYCKBMAAAoWbxgAAAoqAAAAGzADAJQAAAAC
AAARAnsEAAAEcxkAAAoKcqMAAHAGcxoAAAoLBm8bAAAKB28cAAAKDAhvHQAACiwiAigTAAAKbxQA
AApyYAEAcG8VAAAKFowhAAABbx4AAAorIAIoEwAACm8UAAAKcmABAHBvFQAACheMIQAAAW8eAAAK
3goILAYIbx8AAArc3goHLAYHbx8AAArc3goGLAYGbx8AAArcKgEoAAACACUATHEACgAAAAACABgA
ZX0ACgAAAAACAAwAfYkACgAAAAAeAiggAAAKKhp+CAAABCoucwkAAAaACAAABCoeAigiAAAKKgC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHYyLjAuNTA3MjcAAAAABQBsAAAASAQAACN+AAC0
BAAAdAYAACNTdHJpbmdzAAAAACgLAAB4AQAAI1VTAKAMAAAQAAAAI0dVSUQAAACwDAAANAIAACNC
bG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACMAAAAFAAAACAAAAAoAAAABAAAAIgAA
AAMAAAAOAAAAAgAAAAIAAAADAAAABAAAAAEAAAAGAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDWAM8A
CgAlAfwABgBBAc8ADgBbAUYBBgCEAXMBBgC1AaABBgCVAoMCBgCsAoMCBgDJAoMCBgDoAoMCBgAB
A4MCBgAaA4MCBgA1A4MCBgBQA4MCBgBpA4MCBgCiA4IDBgDCA4IDBgDzA+ADBgAQBM8ABgAVBM8A
BgA5BIMCDgBlBE8EDgB+BE8EEgCgBJMECgCvBPwAFgAIBegEFgAgBegEGgB2BWAFGgCEBWAFGgCi
BY8FGgC0BWAFGgDQBY8FBgDiBc8ABgD0Bc8ABgAIBoIDAAAAAAEAAAAAAAEAAQAAABAAOQBDAAUA
AQABAAEAEAB5AIQACQADAAUAAwEAAK8AAAANAAUACAAAARAAvQBDABEACAAIABEAlAETABEAwQEX
AFGACwI5AAEADwI5AAYGQQL4AFaASQL7AFaAUQL7ABEAWQIJAVAgAAAAAIMY0QEbAAEAWCAAAAAA
kwjXAR8AAQCRIAAAAACTCOsBJAABAJggAAAAAJMI9wEpAAEAoCAAAAAAhgAgAhsAAgDcIAAAAACB
ACUCGwACAKQhAAAAAIYY0QEbAAIArCEAAAAAlghpAg0BAgC/IQAAAACGGNEBGwACALMhAAAAAJEY
Iwa4AQIAAAABAH0COQDRARcBQQDRARcBSQDRARcBUQDRARcBWQDRARcBYQDRARcBaQDRARcBcQDR
ARcBeQDRARcBgQDRARwBiQDRARsAkQDRARsACQDRARsAmQAnBCEBmQBCBCgBKQDRAS0BsQDRATkB
wQDRARcBEQDBBIIByQASBYcB0QApBYwB2QAyBZIBCQA8BZYByQBFBRwB4QDRARcB6QDRAZoB8QCv
BRsA6QDCBaEBAQHdBaYB2QDqBaoBEQEABhsAEQDRARsAGQHRARsAIQDRARsADgAMADwACAAYAP8A
CAAcAAQBKQCLAD8BLgATAOwBLgAbAOwBLgAjAOwBLgBTAAkCLgALALwBLgArALwBLgA7AOwBLgBb
ABICLgAzAPIBQwBjAAQBSQCLAD8BYwCTAEgBAQELAQQBNAGvAQIAAQAFAAMAAACEAS8AAAADAjQA
AAB1AhIBAgACAAMAAgADAAUAAQAEAAUAAgAIAAcABIAAAAEAAAAFFv5WAAAAAAAAhAAAAAIAAAAA
AAAAAAAAAAEAxgAAAAAACgAAAAAAAAAAAAAACgDdAAAAAAACAAAAAAAAAAAAAAABAM8AAAAAAAMA
BQAAAAAAAAAAAAEAkwQAAAAACgAAAAAAAAAAAAAACgDJBAAAAAACAAAAAAAAAAAAAAABAFQFAAAA
AAAAAAABAAAAKgYAAAQAAwAAAAA8TW9kdWxlPgBTVF9hOWY0MzE1OWZjZmQ0ZTk3OWY3NzE5ZTNk
ZDRiYTY1YS5jc3Byb2ouZGxsAFJlc291cmNlcwBTVF9hOWY0MzE1OWZjZmQ0ZTk3OWY3NzE5ZTNk
ZDRiYTY1YS5jc3Byb2ouUHJvcGVydGllcwBTY3JpcHRNYWluAFNUX2E5ZjQzMTU5ZmNmZDRlOTc5
Zjc3MTllM2RkNGJhNjVhLmNzcHJvagBTY3JpcHRSZXN1bHRzAFNldHRpbmdzAG1zY29ybGliAFN5
c3RlbQBPYmplY3QATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVu
dW0AU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAU3lzdGVtLlJl
c291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24A
Q3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBTUUwAY29ubmVjdGlvblN0cmluZwBNYWluAGNo
ZWNrSWZSdW5TdWNjZXNzZnVsbHlUb2RheQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdAB2YWx1ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0
aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0u
QWRkSW4AQWRkSW5BdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJp
YWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcA
c2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5l
Y3Rpb24AU3FsQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAE9wZW4AU3Fs
RGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAERiRGF0YVJlYWRlcgBSZWFkAEJvb2xlYW4Ac2V0X1Zh
bHVlAElEaXNwb3NhYmxlAERpc3Bvc2UAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNUX2E5ZjQzMTU5ZmNmZDRlOTc5Zjc3MTllM2RkNGJhNjVhLmNzcHJvai5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMAAH9TAFQAXwBhADkAZgA0ADMAMQA1ADkAZgBjAGYAZAA0AGUAOQA3
ADkAZgA3ADcAMQA5AGUAMwBkAGQANABiAGEANgA1AGEALgBjAHMAcAByAG8AagAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAIUMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0
AHIAaQBuAGcAAIC7cwBlAGwAZQBjAHQAIAAqACAAZgByAG8AbQAgAFsASQBtAHAAbwByAHQASABp
AHMAdABvAHIAeQBdACAAdwBoAGUAcgBlACAAWwBEAGEAdABlAF0AIAA+AD0AIABDAEEAUwBUACgA
RwBFAFQARABBAFQARQAoACkAIABBAFMAIABkAGEAdABlACkAIABhAG4AZAAgAFsAQQBjAHQAaQBv
AG4AXQA9ACcAQwBPAE0AUABMAEUAVABFACcAARVOAGUAZQBkAHMAVABvAFIAdQBuAAAAAOSJqYR+
8a5Hl9LIWclOYgoACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQES
GQQIABIVBAgAEhkCBg6AunMAZQBsAGUAYwB0ACAAKgAgAGYAcgBvAG0AIABbAEkAbQBwAG8AcgB0
AEgAaQBzAHQAbwByAHkAXQAgAHcAaABlAHIAZQAgAFsARABhAHQAZQBdACAAPgA9ACAAQwBBAFMA
VAAoAEcARQBUAEQAQQBUAEUAKAApACAAQQBTACAAZABhAHQAZQApACAAYQBuAGQAIABbAEEAYwB0
AGkAbwBuAF0APQAnAEMATwBNAFAATABFAFQARQAnAAIGCAMGERAEAAAAAAQBAAAAAwYSFAQAABIU
BAgAEhQEIAEBDgQgAQEIBgABEk0RUQQgABJVBiACAQ4SVQQHARIVBSABARFdCAEAAgAAAAAAOQEA
ClNjcmlwdE1haW4DAFQOB1ZlcnNpb24DMS4wVA4JUHVibGlzaGVyAFQOC0Rlc2NyaXB0aW9uAAQg
ABJlBCAAEmkFIAESbRwDIAAcAyAADgYgAgEOEnEEIAASfQMgAAIEIAEBHAgHAxJxEnUSfQMAAAEv
AQAqU1RfYTlmNDMxNTlmY2ZkNGU5NzlmNzcxOWUzZGQ0YmE2NWEuY3Nwcm9qAAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEAAACMMQAAAAAAAAAAAACuMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDEAAAAAAAAAAAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgQAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAP5WBRYAAAEA/lYFFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAw
ADAAMAA0AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBhADkAZgA0ADMAMQA1ADkAZgBjAGYAZAA0AGUAOQA3ADkAZgA3ADcAMQA5AGUAMwBkAGQANABi
AGEANgA1AGEALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADUANgAzADcALgAyADIAMgA3ADAAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABO
AGEAbQBlAAAAUwBUAF8AYQA5AGYANAAzADEANQA5AGYAYwBmAGQANABlADkANwA5AGYANwA3ADEA
OQBlADMAZABkADQAYgBhADYANQBhAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABl
AGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAA
MQA1AAAAiAAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGEAOQBm
ADQAMwAxADUAOQBmAGMAZgBkADQAZQA5ADcAOQBmADcANwAxADkAZQAzAGQAZAA0AGIAYQA2ADUA
YQAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYQA5AGYANAAzADEANQA5AGYAYwBmAGQANABlADkANwA5AGYANwA3ADEAOQBlADMA
ZABkADQAYgBhADYANQBhAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA2ADMANwAuADIAMgAyADcAMAAAAAAASAAPAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA2ADMANwAuADIAMgAyADcAMAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="STOCK:SEQUENCE">
<DTS:Property DTS:Name="LockName"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">0</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">0</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Read tickets from Spreadsheet in mail attachments and ME API</DTS:Property>
<DTS:Property DTS:Name="DTSID">{7DBD7941-84B2-45BB-8BC1-DE165D472125}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_cf2adbef09234f1886229fc814dafa08" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::AttachmentsPath,User::ConnectionString,User::ConnectionStringFiles,User::ManageEngineAuthToken,User::ReportName,User::ShortRequestWait" ReadWriteVariables=""><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_cf2adbef09234f1886229fc814dafa08.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_cf2adbef09234f1886229fc814dafa08.csproj")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Threading;

using System.Data.SqlClient;
using System.Linq;
using System.Net;
using System.Text;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;


namespace ST_cf2adbef09234f1886229fc814dafa08.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        #region constants
        const int numHeaderRows = 5;
        const int numColsInCSV = 79;
        static int msBetweenAPIRequests = 1000;
        static string reportName = "";
        static string filePath = "";
        static string authToken = "";
        static string connectionStringData = "";
        static string connectionStringFile = "";
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
        #endregion

        #region Data
        static DataTable requests = new DataTable();
        #endregion

        #region Data Contract class for Long form of Request
        [DataContract]
        internal class RequestLongForm
        {
#pragma warning disable 0649

            [DataMember]
            internal string WORKORDERID;

            [DataMember]
            internal string REQUESTER;

            [DataMember]
            internal string REQUESTEREMAIL;

            [DataMember]
            internal string CREATEDBY;

            [DataMember]
            internal string CREATEDTIME;

            [DataMember]
            internal string DUEBYTIME;

            [DataMember]
            internal string RESPONDEDTIME;

            [DataMember]
            internal string COMPLETEDTIME;

            [DataMember]
            internal string SHORTDESCRIPTION;

            [DataMember]
            internal string TIMESPENTONREQ;

            [DataMember]
            internal string SUBJECT;

            [DataMember]
            internal string REQUESTTEMPLATE;

            [DataMember]
            internal string TEMPLATEID;

            [DataMember]
            internal string SLA;

            [DataMember]
            internal string ASSET;

            [DataMember]
            internal string DEPARTMENT;

            [DataMember]
            internal string SITE;

            [DataMember]
            internal string CATEGORY;

            [DataMember]
            internal string SUBCATEGORY;

            [DataMember]
            internal string ITEM;

            [DataMember]
            internal string TECHNICIAN;

            [DataMember]
            internal string STATUS;

            [DataMember]
            internal string PRIORITY;

            [DataMember]
            internal string REQUESTTYPE;

            [DataMember]
            internal string HASATTACHMENTS;

            [DataMember]
            internal string HASNOTES;

            [DataMember]
            internal string HASCONVERSATION;

            [DataMember]
            internal string GROUP;

            [DataMember]
            internal string UDF_CHAR1;

            [DataMember]
            internal string UDF_CHAR2;

            [DataMember]
            internal string UDF_CHAR3;

            [DataMember]
            internal string UDF_CHAR4;

            [DataMember]
            internal string UDF_CHAR5;

            [DataMember]
            internal string UDF_CHAR6;

            [DataMember]
            internal string UDF_CHAR7;

            [DataMember]
            internal string UDF_CHAR8;

            [DataMember]
            internal string UDF_CHAR9;

            [DataMember]
            internal string UDF_CHAR10;

            [DataMember]
            internal string UDF_CHAR11;

            [DataMember]
            internal string UDF_CHAR12;

            [DataMember]
            internal string UDF_CHAR13;

            [DataMember]
            internal string UDF_CHAR14;

            [DataMember]
            internal string UDF_CHAR15;

            [DataMember]
            internal string UDF_CHAR16;

            [DataMember]
            internal string UDF_CHAR17;

            [DataMember]
            internal string UDF_CHAR18;

            [DataMember]
            internal string UDF_CHAR19;

            [DataMember]
            internal string UDF_CHAR20;

            [DataMember]
            internal string UDF_CHAR21;

            [DataMember]
            internal string UDF_CHAR22;

            [DataMember]
            internal string UDF_CHAR23;

            [DataMember]
            internal string UDF_CHAR24;

            [DataMember]
            internal string UDF_DATE1;

            [DataMember]
            internal string UDF_DATE2;

            [DataMember]
            internal string UDF_DATE3;

            [DataMember]
            internal string UDF_DATE4;

            [DataMember]
            internal string LONG_REQUESTID;

#pragma warning restore 0649
        }
        #endregion

        #region Map of Spreadsheet (CSV) columns to Database columns
        class map
        {
            public string column = "";
            public string meField = "";
            public string dbField = "";
        }

        static List<map> mymap = new List<map>()
        {
            new map() { column="A", meField="RequestID", dbField="WorkOrderID" },
            new map() { column="B", meField="Request Mode", dbField="" },                           // NOT MAPPED  (email or web)
            new map() { column="C", meField="Group", dbField="ServiceGroup" },
            new map() { column="D", meField="Requester", dbField="Requester" },
            new map() { column="E", meField="Department", dbField="Department" },
            new map() { column="F", meField="Category", dbField="Category" },
            new map() { column="G", meField="Sub Category", dbField="Subcategory" },
            new map() { column="H", meField="Subject", dbField="Subject" },
            new map() { column="I", meField="Item", dbField="Item" },
            new map() { column="J", meField="Created By", dbField="CreatedBy" },
            new map() { column="K", meField="Urgency", dbField="" },                                // NOT MAPPED
            new map() { column="L", meField="Impact", dbField="" },                                 // NOT MAPPED
            new map() { column="M", meField="Request Type", dbField="RequestType" },
            new map() { column="N", meField="Technician", dbField="Technician" },
            new map() { column="O", meField="Site", dbField="Site" },
            new map() { column="P", meField="Region", dbField="" },                                 // NOT MAPPED
            new map() { column="Q", meField="Service Category", dbField="" },
            new map() { column="R", meField="Template", dbField="RequestTemplate" },
            new map() { column="S", meField="Approval Status", dbField="ApprovalStatus" },          // === ADDED ===
            new map() { column="T", meField="Priority", dbField="Priority" },
            new map() { column="U", meField="Level", dbField="" },                                  // NOT MAPPED
            new map() { column="V", meField="Workstation", dbField="Asset" },       // <<<<<<<
            new map() { column="W", meField="Workstation Manufacturer", dbField="" },               // NOT MAPPED
            new map() { column="X", meField="Workstation Model", dbField="" },                      // NOT MAPPED
            new map() { column="Y", meField="Workstation Service Tag", dbField="" },                // NOT MAPPED
            new map() { column="Z", meField="Workstation BIOS Version", dbField="" },               // NOT MAPPED
            new map() { column="AA", meField="Workstation BIOS Date", dbField="" },                 // NOT MAPPED
            new map() { column="AB", meField="Workstation Logged User", dbField="" },               // NOT MAPPED
            new map() { column="AC", meField="Request Status", dbField="Status" },
            new map() { column="AD", meField="Pending Status", dbField="" },                        // NOT MAPPED
            new map() { column="AE", meField="Created Time", dbField="CreatedTime" },
            new map() { column="AF", meField="Responded Date", dbField="RespondedTime" },
            new map() { column="AG", meField="Dueby Time", dbField="DueByTime" },
            new map() { column="AH", meField="Completed Time", dbField="CompletedTime" },
            new map() { column="AI", meField="Time Elapsed", dbField="" },                          // NOT MAPPED
            new map() { column="AJ", meField="Assigned Time", dbField="" },                         // NOT MAPPED
            new map() { column="AK", meField="Overdue Status", dbField="IsOverdue" },              
            new map() { column="AL", meField="Resolution", dbField="ResolutionText" },              // === ADDED ===
            new map() { column="AM", meField="Asset", dbField="Asset" },                // <<<<<<
            new map() { column="AN", meField="Asset Acquisition Date", dbField="" },                // NOT MAPPED
            new map() { column="AO", meField="Asset Warranty Expiry", dbField="" },                 // NOT MAPPED
            new map() { column="AP", meField="Asset Expiry Date", dbField="" },                     // NOT MAPPED
            new map() { column="AQ", meField="Asset Tag", dbField="" },                             // NOT MAPPED
            new map() { column="AR", meField="Asset Serial No", dbField="" },                       // NOT MAPPED
            new map() { column="AS", meField="Asset Bar Code", dbField="" },                        // NOT MAPPED
            new map() { column="AT", meField="Resolved Time", dbField="" },                         // NOT MAPPED
            new map() { column="AU", meField="Last Updated Time", dbField="LastUpdated" },          // === ADDED ===
            new map() { column="AV", meField="Database Name", dbField="UDF_CHAR5" },
            new map() { column="AW", meField="Phone Number", dbField="" },                          // NOT MAPPED
            new map() { column="AX", meField="User name", dbField="" },                             // NOT MAPPED
            new map() { column="AY", meField="Due Date", dbField="UDF_DATE4" },
            new map() { column="AZ", meField="Requested Completion Date", dbField="UDF_DATE1" },
            new map() { column="BA", meField="Manager", dbField="UDF_CHAR2" },
            new map() { column="BB", meField="Hiring Agency", dbField="UDF_CHAR12" },
            new map() { column="BC", meField="Usage", dbField="" },                                 // NOT MAPPED
            new map() { column="BD", meField="End Date", dbField="UDF_DATE3" },
            new map() { column="BE", meField="Title", dbField="UDF_CHAR15" },
            new map() { column="BF", meField="Table", dbField="UDF_CHAR11" },
            new map() { column="BG", meField="Associate Name", dbField="UDF_CHAR22" },
            new map() { column="BH", meField="under the Apache License, Version 2.0", dbField="" }, // NOT MAPPED
            new map() { column="BI", meField="Start Date", dbField="UDF_DATE2" },
            new map() { column="BJ", meField="Preferred Name for Email Address", dbField="UDF_CHAR23" },
            new map() { column="BK", meField="Department", dbField="" },                            // NOT MAPPED
            new map() { column="BL", meField="Tech Priority", dbField="" },                         // NOT MAPPED
            new map() { column="BM", meField="ADDL Applications Affected", dbField="UDF_CHAR3" },
            new map() { column="BN", meField="Change Type", dbField="" },                           // NOT MAPPED
            new map() { column="BO", meField="Release/Hot Fix Date", dbField="" },                  // NOT MAPPED
            new map() { column="BP", meField="Affiliated Tickets", dbField="UDF_CHAR13" },
            new map() { column="BQ", meField="Security Permission Model", dbField="UDF_CHAR1" },
            new map() { column="BR", meField="Business Analyst Assigned", dbField="UDF_CHAR9" },
            new map() { column="BS", meField="Developer Assigned", dbField="UDF_CHAR8" },
            new map() { column="BT", meField="Requestor Filter", dbField="UDF_CHAR4" },
            new map() { column="BU", meField="Release", dbField="UDF_CHAR10" },
            new map() { column="BV", meField="Original Targeted Release Date", dbField="UDF_CHAR16" },
            new map() { column="BW", meField="Release to Prod Date", dbField="UDF_CHAR19" },
            new map() { column="BX", meField="Grouping", dbField="UDF_CHAR14" },
            new map() { column="BY", meField="Case name", dbField="" },                             // NOT MAPPED
            new map() { column="BZ", meField="Response DueBy Time", dbField="" },                   // NOT MAPPED
            new map() { column="CA", meField="First Response Overdue Status", dbField="" }          // NOT MAPPED
        };

        ////// Missing from the spreadsheet //////
        // [RequesterEmail]
        // [ShortDescription]
        // [SLA]?
        // [TimeSpentOnReqInMinutes]???
        // [TemplateID]      
        #endregion

        #region Main logic - Process File
        public void Main()
        {
            connectionStringData = Dts.Variables["ConnectionString"].Value.ToString();
            connectionStringFile = Dts.Variables["ConnectionStringFiles"].Value.ToString();
            msBetweenAPIRequests = (int)Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();
            filePath = Dts.Variables["AttachmentsPath"].Value.ToString();
            reportName = Dts.Variables["ReportName"].Value.ToString();

            ////// Get all requests //////
            requests = getData("select * from Request", connectionStringData);
            requests.Columns.Add("InCSV", typeof(System.Int32));
            foreach (DataRow dr in requests.Rows)
                dr["InCSV"] = 0;

            ////// Get latest file to process //////
            // OLD DataTable files = getData("SELECT TOP 1 [SavedFileName] FROM [FileAutomation].[dbo].[ReceivedFile] where ReceivedFileName like '%" + reportName + "%' order by ReceivedFileID desc", connectionStringFile);
            DataTable files = getData("SELECT [SavedFileName]  FROM [FileAutomation].[dbo].[ReceivedFile] where ReceivedFileName like '%" + reportName + "%" + DateTime.Now.ToString("MMM dd") + "%' order by ReceivedFileID desc", connectionStringFile);

            ////// Process CSV file //////
            foreach (DataRow drFile in files.Rows)
                processFile(Path.Combine(filePath, drFile[0].ToString()));

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        static void processFile(string path)
        {
            DateTime startDate=DateTime.MinValue;
            DateTime endDate=DateTime.MinValue;

            WriteLog("0", "Processing file: " + path);

            ////// Read in the CSV file //////
            using (StreamReader sr = File.OpenText(path))
            {
                ////// Throw away header rows //////
                for (int i = 0; i < numHeaderRows; i++)
                    sr.ReadLine();

                ////// Read in column headers //////
                string headers = sr.ReadLine();

                ////// Handle reports with no data ///////
                if (headers.ToUpper().IndexOf("NO DATA AVAILABLE") >= 0)
                {
                    WriteLog("0", "warning processFile: file has no data: " + path);
                    return;
                }

                ////// Read in each line //////
                string s = "";
                while ((s = sr.ReadLine()) != null)
                {
                    // If we have an odd number of ", add the subsequent lines, handles split lines
                    while (s.Count(x => x == '"') % 2 == 1)
                        s += sr.ReadLine();

                    ////// Split into individual columns, log if incorect //////
                    var rd = splitCSVRow(s);
                    if (rd.Count() != numColsInCSV)
                    {
                        WriteLog("0", "processFile: CSV row does not have " + numColsInCSV.ToString() + " columns" + Sanitize(s));
                    }

                    ////// Get Work Order ID and find the ticket in the existing database, if there is one //////
                    else
                    {
                        ////// Determine the start and end date of this report //////
                        if (startDate == DateTime.MinValue)
                        {
                            DateTime firstDate;
                            if (DateTime.TryParse(getColData(rd, "CreatedTime"), out firstDate) == false)
                                WriteLog("0", "processFile: CreatedTime cannot be parsed. File: " + path + " Value: " + Sanitize(getColData(rd, "CreatedTime")));
                            else
                            {
                                ////// Start date is Jan 1 or Jul 1 //////
                                startDate = new DateTime(firstDate.Year, (firstDate.Month <= 6) ? 1 : 7, 1);

                                ////// End date is June 30 or Dec 31 //////
                                endDate = new DateTime(firstDate.Year, (firstDate.Month <= 6) ? 6 : 12, (firstDate.Month <= 6) ? 30 : 31, 23, 59, 59);
                            }
                        }

                        string WorkOrderID = getColData(rd, "WorkOrderID");
                        DataRow dr = findTicket(WorkOrderID);

                        ////// If we can't find it in the database, insert it //////
                        if (dr == null)
                            insertCSVTicket(rd, dr);

                        ////// If we do find it in the database, update it //////
                        else
                            updateCSVTicket(rd, dr);
                    }
                }

                ////// Remove tickets (set to deleted) that are in the database but not the spreadsheet //////
                foreach (DataRow drfound in requests.Rows)
                {
                    if ((Convert.ToInt32(drfound["InCSV"].ToString()) == 0) && (Convert.ToInt32(drfound["Deleted"].ToString()) == 0) &&
                        (Convert.ToDateTime(drfound["CreatedTime"].ToString()) >=startDate) && (Convert.ToDateTime(drfound["CreatedTime"].ToString()) <= endDate))
                        removeTicket(drfound["WorkOrderID"].ToString());
                }

                ////// Any ticket that has not been loaded by the SD API since being updated or inserted by the CSV file needs to be updated //////
                ////// Note that any ticket read in by a previous run of this job, that has not been updated will also be updated            //////
                requests = getData("select * from Request", connectionStringData);
                requests.Columns.Add("InCSV", typeof(System.Int32));
                foreach (DataRow dr in requests.Rows)
                    dr["InCSV"] = 0;

                foreach (DataRow drfound in requests.Rows)
                {
                    if ((drfound["HasFullInfo"].ToString().ToUpper() == "FALSE") && (drfound["Deleted"].ToString().ToUpper() == "0") &&
                        (Convert.ToDateTime(drfound["CreatedTime"].ToString()) >= startDate) && (Convert.ToDateTime(drfound["CreatedTime"].ToString()) <= endDate))
                    {
                        ////// Read full details from ManageEngine //////
                        Thread.Sleep(msBetweenAPIRequests);
                        readLongFormRequest(drfound["WorkOrderID"].ToString());
                        WriteLog(drfound["WorkOrderID"].ToString(), "Long API");

                        ////// Read full history from ManageEngine //////
                        Thread.Sleep(msBetweenAPIRequests);
                        readHistory(drfound["WorkOrderID"].ToString());
                    }
                }


            }

            WriteLog("0", "Processing complete: " + path);

        }
        #endregion

        #region INSERT and UPDATE tickets from CSV
        private static void insertCSVTicket(string[] rd, DataRow dr)
        {
            insertNewTicket(
                            getColData(rd, "WorkOrderID"),
                            getColData(rd, "ServiceGroup"),
                            getColData(rd, "Requester"),
                            getColData(rd, "Department"),
                            getColData(rd, "Category"),
                            getColData(rd, "Subcategory"),
                            getColData(rd, "Subject"),
                            getColData(rd, "Item"),
                            getColData(rd, "CreatedBy"),
                            getColData(rd, "RequestType"),
                            getColData(rd, "Technician"),
                            getColData(rd, "Site"),
                            getColData(rd, "RequestTemplate"),
                            getColData(rd, "ApprovalStatus"),
                            getColData(rd, "Priority"),
                            getColData(rd, "Asset"),
                            getColData(rd, "Status"),
                            getColData(rd, "CreatedTime"),
                            getColData(rd, "RespondedTime"),
                            getColData(rd, "DueByTime"),
                            getColData(rd, "CompletedTime"),
                            getColData(rd, "ResolutionText"),
                            getColData(rd, "LastUpdated"),
                            getColData(rd, "UDF_CHAR5"),
                            getColData(rd, "UDF_DATE4"),
                            getColData(rd, "UDF_DATE1"),
                            getColData(rd, "UDF_CHAR2"),
                            getColData(rd, "UDF_CHAR12"),
                            getColData(rd, "UDF_DATE3"),
                            getColData(rd, "UDF_CHAR15"),
                            getColData(rd, "UDF_CHAR11"),
                            getColData(rd, "UDF_CHAR22"),
                            getColData(rd, "UDF_DATE2"),
                            getColData(rd, "UDF_CHAR23"),
                            getColData(rd, "UDF_CHAR3"),
                            getColData(rd, "UDF_CHAR13"),
                            getColData(rd, "UDF_CHAR1"),
                            getColData(rd, "UDF_CHAR9"),
                            getColData(rd, "UDF_CHAR8"),
                            getColData(rd, "UDF_CHAR4"),
                            getColData(rd, "UDF_CHAR10"),
                            getColData(rd, "UDF_CHAR16"),
                            getColData(rd, "UDF_CHAR19"),
                            getColData(rd, "UDF_CHAR14"),
                            getColData(rd, "IsOverdue"));
            WriteLog(getColData(rd, "WorkOrderID"), "NEW");
        }


        private static void updateCSVTicket(string[] rd, DataRow dr)
        {
            DateTime spreadsheetLastUpdatedDate = DateTime.Today;
            DateTime.TryParse(getColData(rd, "LastUpdated"), out spreadsheetLastUpdatedDate);

            DateTime databaseLastUpdatedDate = Convert.ToDateTime(dr["LastUpdated"].ToString());
            dr["InCSV"] = 1;

            if ((spreadsheetLastUpdatedDate > databaseLastUpdatedDate) || (dataIsDifferent(rd, dr)))
            {
                updateTicket(getColData(rd, "WorkOrderID"), getColData(rd, "ServiceGroup"), getColData(rd, "Requester"), getColData(rd, "Department"), getColData(rd, "Category"), getColData(rd, "Subcategory"), getColData(rd, "Subject"), getColData(rd, "Item"), getColData(rd, "CreatedBy"), getColData(rd, "RequestType"), getColData(rd, "Technician"), getColData(rd, "Site"), getColData(rd, "RequestTemplate"), getColData(rd, "ApprovalStatus"),
                            getColData(rd, "Priority"), getColData(rd, "Asset"), getColData(rd, "Status"), getColData(rd, "CreatedTime"), getColData(rd, "RespondedTime"), getColData(rd, "DueByTime"), getColData(rd, "CompletedTime"), getColData(rd, "ResolutionText"), getColData(rd, "LastUpdated"), getColData(rd, "UDF_CHAR5"), getColData(rd, "UDF_DATE4"), getColData(rd, "UDF_DATE1"), getColData(rd, "UDF_CHAR2"), getColData(rd, "UDF_CHAR12"),
                            getColData(rd, "UDF_DATE3"), getColData(rd, "UDF_CHAR15"), getColData(rd, "UDF_CHAR11"), getColData(rd, "UDF_CHAR22"), getColData(rd, "UDF_DATE2"), getColData(rd, "UDF_CHAR23"), getColData(rd, "UDF_CHAR3"), getColData(rd, "UDF_CHAR13"), getColData(rd, "UDF_CHAR1"), getColData(rd, "UDF_CHAR9"), getColData(rd, "UDF_CHAR8"), getColData(rd, "UDF_CHAR4"), getColData(rd, "UDF_CHAR10"), getColData(rd, "UDF_CHAR16"), getColData(rd, "UDF_CHAR19"), getColData(rd, "UDF_CHAR14"), getColData(rd, "IsOverdue"));

                WriteLog(getColData(rd, "WorkOrderID"), "Update from CSV");
            }
        }

        private static bool dataIsDifferent(string[] rd, DataRow drExisting)
        {
            string changes = "";

            compareText(rd, drExisting, "ServiceGroup", "", ref changes);
            compareText(rd, drExisting, "Requester", "", ref changes);
            compareText(rd, drExisting, "Department", "", ref changes);
            compareText(rd, drExisting, "Category", "", ref changes);
            compareText(rd, drExisting, "Subcategory", "", ref changes);
            compareText(rd, drExisting, "Subject", "", ref changes);
            compareText(rd, drExisting, "Item", "", ref changes);
            compareText(rd, drExisting, "CreatedBy", "", ref changes);
            compareText(rd, drExisting, "RequestType", "", ref changes);
            compareText(rd, drExisting, "Technician", "", ref changes);
            compareText(rd, drExisting, "Site", "", ref changes);
            compareText(rd, drExisting, "RequestTemplate", "", ref changes);
            compareText(rd, drExisting, "ApprovalStatus", "", ref changes);
            compareText(rd, drExisting, "Priority", "", ref changes);
            // compareText(rd, drExisting, "Asset", "", ref changes);
            compareText(rd, drExisting, "Status", "", ref changes);
            compareDate(rd, drExisting, "CreatedTime", "", ref changes);
            compareDate(rd, drExisting, "RespondedTime", "", ref changes);
            compareDate(rd, drExisting, "DueByTime", "", ref changes);
            compareDate(rd, drExisting, "CompletedTime", "", ref changes);
            compareText(rd, drExisting, "ResolutionText", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR5", "", ref changes);
            compareDate(rd, drExisting, "UDF_DATE4", "", ref changes);
            compareDate(rd, drExisting, "UDF_DATE1", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR2", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR12", "", ref changes);
            compareDate(rd, drExisting, "UDF_DATE3", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR15", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR11", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR22", "", ref changes);
            compareDate(rd, drExisting, "UDF_DATE2", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR23", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR3", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR13", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR1", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR9", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR8", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR4", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR10", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR16", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR19", "", ref changes);
            compareText(rd, drExisting, "UDF_CHAR14", "", ref changes);
            compareText(rd, drExisting, "IsOverdue", "", ref changes);

            if (changes != "")
            {
                WriteLog(drExisting["WorkOrderID"].ToString(), "CHANGES: " + changes);
                return true;
            }
            return false;
        }

        private static void compareText(string[] rd, DataRow drExisting, string ssColName, string dbColName, ref string changes)
        {
            string ssText = Sanitize(getColData(rd, ssColName), true);
            string dbText = drExisting[dbColName == "" ? ssColName : dbColName].ToString();

            // True and False match in any case
            if ((ssText.ToUpper() == "TRUE") || (ssText.ToUpper() == "FALSE"))
                ssText = ssText.ToUpper();

            if ((dbText.ToUpper() == "TRUE") || (dbText.ToUpper() == "FALSE"))
                dbText = dbText.ToUpper();

            // Unicode broken vertical bar
            // http://www.fileformat.info/info/unicode/char/a6/index.htm
            ssText = ssText.Replace("\u00A6", "|");
            dbText = dbText.Replace("\u00A6", "|");

            // Tabs and spaces
            ssText = ssText.Replace("\t", " ");
            dbText = dbText.Replace("\t", " ");

            // Ideographic Space
            // http://www.fileformat.info/info/unicode/char/3000/index.htm
            ssText = ssText.Replace("\u3000", " ");
            dbText = dbText.Replace("\u3000", " ");

            // Unicode Character 'BOX DRAWINGS LIGHT VERTICAL' (U+2502)
            // http://www.fileformat.info/info/unicode/char/2502/index.htm
            ssText = ssText.Replace("\u2502", "|");
            dbText = dbText.Replace("\u2502", "|");

            if ((ssColName == "UDF_CHAR16") || (ssColName == "UDF_CHAR19"))
            {
                ssText = ssText.TrimStart(new char[] { '0' });
                dbText = dbText.TrimStart(new char[] { '0' });
            }

            // Ignore case changes
            ssText = ssText.ToUpper();
            dbText = dbText.ToUpper();

            if (ssText != dbText)
            {
                //int len = Math.Min(ssText.Length, dbText.Length);
                //for (int i = 0; i < len; i++)
                //{
                //    if (ssText[i] != dbText[i])
                //    {
                //        int aaaaa = 99;
                //    }
                //}

                changes += ((changes != "") ? ", " : "") + "Change to " + ssColName;
            }
        }

        private static void compareDate(string[] rd, DataRow drExisting, string ssColName, string dbColName, ref string changes)
        {
            DateTime ssDate = DateTime.MinValue;
            DateTime dbDate = DateTime.MinValue;

            DateTime.TryParse(getColData(rd, ssColName), out ssDate);
            DateTime.TryParse(drExisting[dbColName == "" ? ssColName : dbColName].ToString(), out dbDate);

            if ((ssDate.Year > 1900) && (dbDate.Year > 1900) && (ssDate.Date != dbDate.Date))
                changes += ((changes != "") ? ", " : "") +  "Change to " + ssColName;
        }

        #endregion

        #region INSERT, UPDATE and REMOVE tickets in database
        private static void insertNewTicket(string WorkOrderID, string ServiceGroup, string Requester, string Department, string Category, string Subcategory, string Subject, string Item,
                                            string CreatedBy, string RequestType, string Technician, string Site, string RequestTemplate, string ApprovalStatus, string Priority, string Asset, string Status, string CreatedTime,
                                            string RespondedTime, string DueByTime, string CompletedTime, string ResolutionText, string LastUpdated, string UDF_CHAR5, string UDF_DATE4, string UDF_DATE1, string UDF_CHAR2, string UDF_CHAR12,
                                            string UDF_DATE3, string UDF_CHAR15, string UDF_CHAR11, string UDF_CHAR22, string UDF_DATE2, string UDF_CHAR23, string UDF_CHAR3, string UDF_CHAR13, string UDF_CHAR1, string UDF_CHAR9,
                                            string UDF_CHAR8, string UDF_CHAR4, string UDF_CHAR10, string UDF_CHAR16, string UDF_CHAR19, string UDF_CHAR14, string IsOverdue)
        {
            string sql = "insert into Request(";
            sql += "WorkOrderID,";
            sql += "ServiceGroup,";
            sql += "Requester,";
            sql += "Department,";
            sql += "Category,";
            sql += "Subcategory,";
            sql += "Subject,";
            sql += "Item,";
            sql += "CreatedBy,";
            sql += "RequestType,";
            sql += "Technician,";
            sql += "Site,";
            sql += "RequestTemplate,";
            sql += "ApprovalStatus,";
            sql += "Priority,";
            sql += "Asset,";
            sql += "Status,";
            sql += "CreatedTime,";
            sql += "RespondedTime,";
            sql += "DueByTime,";
            sql += "CompletedTime,";
            sql += "ResolutionText,";
            sql += "LastUpdated,";
            sql += "UDF_CHAR5,";
            sql += "UDF_DATE4,";
            sql += "UDF_DATE1,";
            sql += "UDF_CHAR2,";
            sql += "UDF_CHAR12,";
            sql += "UDF_DATE3,";
            sql += "UDF_CHAR15,";
            sql += "UDF_CHAR11,";
            sql += "UDF_CHAR22,";
            sql += "UDF_DATE2,";
            sql += "UDF_CHAR23,";
            sql += "UDF_CHAR3,";
            sql += "UDF_CHAR13,";
            sql += "UDF_CHAR1,";
            sql += "UDF_CHAR9,";
            sql += "UDF_CHAR8,";
            sql += "UDF_CHAR4,";
            sql += "UDF_CHAR10,";
            sql += "UDF_CHAR16,";
            sql += "UDF_CHAR19,";
            sql += "UDF_CHAR14,";
            sql += "IsOverdue,";
            sql += "HasFullInfo,";
            sql += "Deleted";
            sql += ") VALUES (";

            sql += WorkOrderID + ",";

            sql += "'" + Sanitize(ServiceGroup) + "',";
            sql += "'" + Sanitize(Requester) + "',";
            sql += "'" + Sanitize(Department) + "',";
            sql += "'" + Sanitize(Category) + "',";
            sql += "'" + Sanitize(Subcategory) + "',";
            sql += "'" + Sanitize(Subject) + "',";
            sql += "'" + Sanitize(Item) + "',";
            sql += "'" + Sanitize(CreatedBy) + "',";
            sql += "'" + Sanitize(RequestType) + "',";
            sql += "'" + Sanitize(Technician) + "',";
            sql += "'" + Sanitize(Site) + "',";
            sql += "'" + Sanitize(RequestTemplate) + "',";
            sql += "'" + Sanitize(ApprovalStatus) + "',";
            sql += "'" + Sanitize(Priority) + "',";
            sql += "'" + Sanitize(Asset) + "',";
            sql += "'" + Sanitize(Status) + "',";
            sql += "'" + Sanitize(CreatedTime) + "',";
            sql += "'" + Sanitize(RespondedTime) + "',";
            sql += "'" + Sanitize(DueByTime) + "',";
            sql += "'" + Sanitize(CompletedTime) + "',";
            sql += "'" + Sanitize(ResolutionText) + "',";
            sql += "'" + Sanitize(LastUpdated) + "',";
            sql += "'" + Sanitize(UDF_CHAR5) + "',";
            sql += "'" + Sanitize(UDF_DATE4) + "',";
            sql += "'" + Sanitize(UDF_DATE1) + "',";
            sql += "'" + Sanitize(UDF_CHAR2) + "',";
            sql += "'" + Sanitize(UDF_CHAR12) + "',";
            sql += "'" + Sanitize(UDF_DATE3) + "',";
            sql += "'" + Sanitize(UDF_CHAR15) + "',";
            sql += "'" + Sanitize(UDF_CHAR11) + "',";
            sql += "'" + Sanitize(UDF_CHAR22) + "',";
            sql += "'" + Sanitize(UDF_DATE2) + "',";
            sql += "'" + Sanitize(UDF_CHAR23) + "',";
            sql += "'" + Sanitize(UDF_CHAR3) + "',";
            sql += "'" + Sanitize(UDF_CHAR13) + "',";
            sql += "'" + Sanitize(UDF_CHAR1) + "',";
            sql += "'" + Sanitize(UDF_CHAR9) + "',";
            sql += "'" + Sanitize(UDF_CHAR8) + "',";
            sql += "'" + Sanitize(UDF_CHAR4) + "',";
            sql += "'" + Sanitize(UDF_CHAR10) + "',";
            sql += "'" + Sanitize(UDF_CHAR16) + "',";
            sql += "'" + Sanitize(UDF_CHAR19) + "',";
            sql += "'" + Sanitize(UDF_CHAR14) + "',";
            sql += ((IsOverdue.ToLower() == "true") ? "1" : "0") + ",";
            sql += "0,0)";

            executeSQL(sql, connectionStringData);
            WriteLog(WorkOrderID, "CSV INSERT");
        }


        private static void updateTicket(string WorkOrderID, string ServiceGroup, string Requester, string Department, string Category, string Subcategory, string Subject, string Item,
                                            string CreatedBy, string RequestType, string Technician, string Site, string RequestTemplate, string ApprovalStatus, string Priority, string Asset, string Status, string CreatedTime,
                                            string RespondedTime, string DueByTime, string CompletedTime, string ResolutionText, string LastUpdated, string UDF_CHAR5, string UDF_DATE4, string UDF_DATE1, string UDF_CHAR2, string UDF_CHAR12,
                                            string UDF_DATE3, string UDF_CHAR15, string UDF_CHAR11, string UDF_CHAR22, string UDF_DATE2, string UDF_CHAR23, string UDF_CHAR3, string UDF_CHAR13, string UDF_CHAR1, string UDF_CHAR9,
                                            string UDF_CHAR8, string UDF_CHAR4, string UDF_CHAR10, string UDF_CHAR16, string UDF_CHAR19, string UDF_CHAR14, string IsOverdue)
        {
            string sql = "update Request ";
            sql += "set ServiceGroup ='" + Sanitize(ServiceGroup) + "', ";
            sql += "Requester ='" + Sanitize(Requester) + "', ";
            sql += "Department ='" + Sanitize(Department) + "', ";
            sql += "Category ='" + Sanitize(Category) + "', ";
            sql += "Subcategory ='" + Sanitize(Subcategory) + "', ";
            sql += "Subject ='" + Sanitize(Subject) + "', ";
            sql += "Item ='" + Sanitize(Item) + "', ";
            sql += "CreatedBy ='" + Sanitize(CreatedBy) + "', ";
            sql += "RequestType ='" + Sanitize(RequestType) + "', ";
            sql += "Technician ='" + Sanitize(Technician) + "', ";
            sql += "Site ='" + Sanitize(Site) + "', ";
            sql += "RequestTemplate ='" + Sanitize(RequestTemplate) + "', ";
            sql += "ApprovalStatus ='" + Sanitize(ApprovalStatus) + "', ";
            sql += "Priority ='" + Sanitize(Priority) + "', ";
            sql += "Asset ='" + Sanitize(Asset) + "', ";
            sql += "Status ='" + Sanitize(Status) + "', ";
            sql += "CreatedTime ='" + Sanitize(CreatedTime) + "', ";
            sql += "RespondedTime ='" + Sanitize(RespondedTime) + "', ";
            sql += "DueByTime ='" + Sanitize(DueByTime) + "', ";
            sql += "CompletedTime ='" + Sanitize(CompletedTime) + "', ";
            sql += "ResolutionText ='" + Sanitize(ResolutionText) + "', ";
            sql += "LastUpdated ='" + Sanitize(LastUpdated) + "', ";
            sql += "UDF_CHAR5 ='" + Sanitize(UDF_CHAR5) + "', ";
            sql += "UDF_DATE4 ='" + Sanitize(UDF_DATE4) + "', ";
            sql += "UDF_DATE1 ='" + Sanitize(UDF_DATE1) + "', ";
            sql += "UDF_CHAR2 ='" + Sanitize(UDF_CHAR2) + "', ";
            sql += "UDF_CHAR12 ='" + Sanitize(UDF_CHAR12) + "', ";
            sql += "UDF_DATE3 ='" + Sanitize(UDF_DATE3) + "', ";
            sql += "UDF_CHAR15 ='" + Sanitize(UDF_CHAR15) + "', ";
            sql += "UDF_CHAR11 ='" + Sanitize(UDF_CHAR11) + "', ";
            sql += "UDF_CHAR22 ='" + Sanitize(UDF_CHAR22) + "', ";
            sql += "UDF_DATE2 ='" + Sanitize(UDF_DATE2) + "', ";
            sql += "UDF_CHAR23 ='" + Sanitize(UDF_CHAR23) + "', ";
            sql += "UDF_CHAR3 ='" + Sanitize(UDF_CHAR3) + "', ";
            sql += "UDF_CHAR13 ='" + Sanitize(UDF_CHAR13) + "', ";
            sql += "UDF_CHAR1 ='" + Sanitize(UDF_CHAR1) + "', ";
            sql += "UDF_CHAR9 ='" + Sanitize(UDF_CHAR9) + "', ";
            sql += "UDF_CHAR8 ='" + Sanitize(UDF_CHAR8) + "', ";
            sql += "UDF_CHAR4 ='" + Sanitize(UDF_CHAR4) + "', ";
            sql += "UDF_CHAR10 ='" + Sanitize(UDF_CHAR10) + "', ";
            sql += "UDF_CHAR16 ='" + Sanitize(UDF_CHAR16) + "', ";
            sql += "UDF_CHAR19 ='" + Sanitize(UDF_CHAR19) + "', ";
            sql += "IsOverdue =" + ((IsOverdue.ToLower() == "true") ? "1" : "0") + ", ";
            sql += "HasFullInfo = 0, ";
            sql += "Deleted = 0, ";
            sql += "UDF_CHAR14 ='" + Sanitize(UDF_CHAR14) + "' ";
            sql += "where WorkOrderID=" + WorkOrderID;

            executeSQL(sql, connectionStringData);
        }

        private static void removeTicket(string WorkOrderID)
        {
            string sql = "update Request set [Deleted]=1 ";
            sql += "where WorkOrderID=" + WorkOrderID;
            executeSQL(sql, connectionStringData);

            WriteLog(WorkOrderID, "Removed");
        }
        #endregion

        #region UPDATE from API
        private static void updateLongRequestToDatabase(RequestLongForm r)
        {
            //string completeTime = (r.COMPLETEDTIME.Length < 10) ? "null" : ("'" + (UnixEpoch.AddMilliseconds(Convert.ToDouble(r.COMPLETEDTIME))).ToShortTimeString() + "'");
            //string respondedTime = (r.RESPONDEDTIME.Length < 10) ? "null" : ("'" + (UnixEpoch.AddMilliseconds(Convert.ToDouble(r.RESPONDEDTIME))).ToShortTimeString() +"'");
            //string dueByTime = (r.DUEBYTIME.Length < 10) ? "null" : "'" + (UnixEpoch.AddMilliseconds(Convert.ToDouble(r.DUEBYTIME))).ToShortTimeString() + "'";

            // singular
            string sql = "update Request set ";

            sql += "[RequesterEmail]='" + Sanitize(r.REQUESTEREMAIL) + "',";
            sql += "[CreatedTime]=" + UnixTimeinMStoSQLTime(r.CREATEDTIME) + ",";
            sql += "[DueByTime]=" + UnixTimeinMStoSQLTime(r.DUEBYTIME) + ",";
            sql += "[RespondedTime]=" + UnixTimeinMStoSQLTime(r.RESPONDEDTIME) + ",";
            sql += "[CompletedTime]=" + UnixTimeinMStoSQLTime(r.COMPLETEDTIME) + ",";
            sql += "[ShortDescription]='" + Sanitize(r.SHORTDESCRIPTION) + "',";
            sql += "[TimeSpentOnReqInMinutes]=" + ConvertHrsMnsStringToMinutes(r.TIMESPENTONREQ) + ",";
            sql += "[RequestTemplate]='" + r.REQUESTTEMPLATE + "',";
            sql += "[TemplateID]='" + r.TEMPLATEID + "',";
            sql += "[SLA]='" + r.SLA + "',";
            //sql += "[NotificationStatus]='" + r.Not + "',";
            sql += "[Asset]='" + Sanitize(r.ASSET) + "',";
            sql += "[HasAttachments]=" + ((r.HASATTACHMENTS.ToLower() == "true") ? "1" : "0") + ",";
            sql += "[HasNotes]=" + ((r.HASNOTES.ToLower() == "true") ? "1" : "0") + ",";
            sql += "[HasConversation]=" + ((r.HASCONVERSATION.ToLower() == "true") ? "1" : "0") + ",";
            sql += "[UDF_DATE1]=" + UnixTimeinMStoSQLTime(r.UDF_DATE1) + ",";
            sql += "[UDF_DATE2]=" + UnixTimeinMStoSQLTime(r.UDF_DATE2) + ",";
            sql += "[UDF_DATE3]=" + UnixTimeinMStoSQLTime(r.UDF_DATE3) + ",";
            sql += "[UDF_DATE4]=" + UnixTimeinMStoSQLTime(r.UDF_DATE4) + ",";
            sql += "[LongRequestID]='" + r.LONG_REQUESTID + "', ";
            sql += "[HasFullInfo]=1 ";
            sql += "WHERE WorkOrderID=" + r.WORKORDERID.ToString();

            executeSQL(sql, connectionStringData);
            WriteLog(r.WORKORDERID, "UPDATE FULL");
        }
        #endregion

        #region Database routines
        private static void executeSQL(string sql, string connectionString)
        {
            try
            {
                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandText = sql;
                        command.ExecuteNonQuery();
                    }
                }
            }
            catch (Exception ex)
            {
                WriteLog("0", "SQL Exception: " + ex.ToString());
            }

        }

        private static DataTable getData(string sql, string connectionString)
        {
            using (SqlDataAdapter dataAdapter = new SqlDataAdapter(sql, connectionString))
            {
                DataTable dataTable = new DataTable();
                dataAdapter.Fill(dataTable);
                return dataTable;
            }
        }

        // This version of .net does not support default parameters, so.......
        private static string Sanitize(string s)
        {
            return Sanitize(s, false);
        }

        private static string Sanitize(string s, bool partial)
        {
            if (s == null)
                return "";

            s = s.Replace("&rsquo;", "'");
            s = s.Replace("&rdquo;", "\"");
            s = s.Replace("&#92", "\\");
            s = s.Replace("&gt", ">");
            s = s.Replace("&lt", "<");

            if (!partial)
            {
                s = s.Replace("'", "''");
                s = s.Replace("\"\"\"", "");
            }
            return s;
        }

        #endregion

        #region Finding, Parsing and Logging helper routines
        private static DataRow findTicket(string workOrderID)
        {
            foreach (DataRow dr in requests.Rows)
                if (dr["WorkOrderID"].ToString() == workOrderID)
                    return dr;
            return null;
        }
        static int colExcelColnameToOffset(string colname)
        {
            return (colname.Length == 1) ? (colname[0] - 'A') : ((colname[0] - 'A' + 1) * 26 + colname[1] - 'A');
        }

        private static string getColData(string[] rd, string colname)
        {
            foreach (map m in mymap)
                if (m.dbField == colname)
                {
                    string val = rd[colExcelColnameToOffset(m.column)];
                    return ((val == "-") ? "" : val);
                }
            return "";
        }

        private static string[] splitCSVRow(string row)
        {
            using (Microsoft.VisualBasic.FileIO.TextFieldParser tfp = new Microsoft.VisualBasic.FileIO.TextFieldParser(new MemoryStream(Encoding.UTF8.GetBytes(row ?? ""))))
            {
                tfp.Delimiters = new string[] { "," };
                tfp.HasFieldsEnclosedInQuotes = true;
                string[] output = tfp.ReadFields();
                return output;
            }
        }

        static void WriteLog(string workorderid, string action)
        {
            executeSQL("insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), " + workorderid + ", '" + action + "', '')", connectionStringData);
        }
        #endregion

        #region ManageEngine API
        private static void readLongFormRequest(string s)
        {
            string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_REQUEST");
            int first = json.IndexOf("\"Details\":");
            int last = json.LastIndexOf('}');

            ////// Fast fail on end of list or failure //////
            if (first < 0)
                return;

            first += 10;
            json = "[" + json.Substring(first, last - first + 1) + "]";
            json = json.Replace("}}}]", "}]");
            ////// ServiceDesk's JSON is not so .net compatible, not that .net's json serializer can't do it, it just sucks at it //////
            byte[] byteArray = Encoding.ASCII.GetBytes(json);
            MemoryStream stream = new MemoryStream(byteArray);
            stream.Position = 0;
            DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(RequestLongForm[]));
            RequestLongForm[] req = (RequestLongForm[])serializer.ReadObject(stream);

            updateLongRequestToDatabase(req[0]);
        }

        private static void readHistory(string s)
        {
            try
            {
                string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_HISTORY");
                updateSingleFieldToDatabase(s, "History", json);
            }
            catch (Exception ex)
            {
                WriteLog("0", "Exception in readHistory: url=" + Sanitize(s + Environment.NewLine + ex.ToString()));
            }
        }

        private static void updateSingleFieldToDatabase(string id, string field, string json)
        {
            string sql = "update Request set ";

            sql += "[" + field + "]='" + Sanitize(json) + "' ";
            sql += "WHERE WorkOrderID=" + id;
            executeSQL(sql, connectionStringData);
            WriteLog(id, "UPDATE " + field.ToUpper());
        }


        static string GetData(string url, string Parameters)
        {
            try
            {
                WebRequest request = WebRequest.Create(url + Parameters);
                request.Method = "POST";
                string postData = "";
                byte[] byteArray = Encoding.UTF8.GetBytes(postData);
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = byteArray.Length;
                Stream dataStream = request.GetRequestStream();
                dataStream.Write(byteArray, 0, byteArray.Length);
                dataStream.Close();
                WebResponse response = request.GetResponse();
                Console.WriteLine(((HttpWebResponse)response).StatusDescription);
                dataStream = response.GetResponseStream();
                StreamReader reader = new StreamReader(dataStream);
                string responseFromServer = reader.ReadToEnd();
                reader.Close();
                dataStream.Close();
                response.Close();
                return responseFromServer;
            }
            catch (Exception ex)
            {
                WriteLog("0", "Exception in GetData: url=" + url + Parameters + Environment.NewLine + ex.ToString());
                return "";
            }
        }
        #endregion

        #region Unix Time with milliseconds Pacific Time Zone to a SQL date/time in Eastern Time
        private static int ConvertHrsMnsStringToMinutes(string weirdTimeString)
        {
            int hrsTag = weirdTimeString.IndexOf("hrs");
            if (hrsTag <= 0)
                return 0;

            int hours = Convert.ToInt32(weirdTimeString.Substring(0, hrsTag));
            int minTag = weirdTimeString.IndexOf("min");
            int min = Convert.ToInt32(weirdTimeString.Substring(hrsTag + 4, minTag - (hrsTag + 4)));
            int minutes = hours * 60 + min;
            return minutes;
        }

        private static string UnixTimeinMStoSQLTime(string unixtime)
        {
            if (unixtime == null)
                return "null";

            if (unixtime.ToLower() == "null")
                return "null";

            if (unixtime == "")
                return "null";

            DateTime ourTime = (UnixEpoch.AddMilliseconds(Convert.ToDouble(unixtime)));


            ourTime = ourTime.AddHours(-5);
            if (isThisTimeInDST(ourTime))
                ourTime = ourTime.AddHours(+1);

            string ourTimeString = "'" + ourTime.ToShortDateString() + " " + ourTime.ToShortTimeString() + "'";
            return ourTimeString;
        }

        private static bool isThisTimeInDST(DateTime day)
        {
            // Good to move this to a table!
            if (day >= new DateTime(2013, 3, 10, 2, 0, 0) && day <= new DateTime(2013, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2014, 3, 9, 2, 0, 0) && day <= new DateTime(2014, 11, 2, 2, 0, 0))
                return true;

            if (day >= new DateTime(2015, 3, 8, 2, 0, 0) && day <= new DateTime(2015, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2016, 3, 13, 2, 0, 0) && day <= new DateTime(2016, 11, 6, 2, 0, 0))
                return true;

            if (day >= new DateTime(2017, 3, 12, 2, 0, 0) && day <= new DateTime(2017, 11, 5, 2, 0, 0))
                return true;

            if (day >= new DateTime(2018, 3, 11, 2, 0, 0) && day <= new DateTime(2018, 11, 4, 2, 0, 0))
                return true;

            if (day >= new DateTime(2019, 3, 10, 2, 0, 0) && day <= new DateTime(2019, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2020, 3, 8, 2, 0, 0) && day <= new DateTime(2020, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2021, 3, 14, 2, 0, 0) && day <= new DateTime(2021, 11, 7, 2, 0, 0))
                return true;

            return false;

        }
        #endregion

        #region old code
        //string ServiceGroup = getColData(rd, "ServiceGroup");
        //string Requester = getColData(rd, "Requester");
        //string Department = getColData(rd, "Department");
        //string Category = getColData(rd, "Category");
        //string Subcategory = getColData(rd, "Subcategory");
        //string Subject = getColData(rd, "Subject");
        //string Item = getColData(rd, "Item");
        //string CreatedBy = getColData(rd, "CreatedBy");
        //string RequestType = getColData(rd, "RequestType");
        //string Technician = getColData(rd, "Technician");
        //string Site = getColData(rd, "Site");
        //string RequestTemplate = getColData(rd, "RequestTemplate");
        //string ApprovalStatus = getColData(rd, "ApprovalStatus");
        //string Priority = getColData(rd, "Priority");
        //string Asset = getColData(rd, "Asset");
        //string Status = getColData(rd, "Status");
        //string CreatedTime = getColData(rd, "CreatedTime");
        //string RespondedTime = getColData(rd, "RespondedTime");
        //string DueByTime = getColData(rd, "DueByTime");
        //string CompletedTime = getColData(rd, "CompletedTime");
        //string ResolutionText = getColData(rd, "ResolutionText");
        //string LastUpdated = getColData(rd, "LastUpdated");
        //string UDF_CHAR5 = getColData(rd, "UDF_CHAR5");
        //string UDF_DATE4 = getColData(rd, "UDF_DATE4");
        //string UDF_DATE1 = getColData(rd, "UDF_DATE1");
        //string UDF_CHAR2 = getColData(rd, "UDF_CHAR2");
        //string UDF_CHAR12 = getColData(rd, "UDF_CHAR12");
        //string UDF_DATE3 = getColData(rd, "UDF_DATE3");
        //string UDF_CHAR15 = getColData(rd, "UDF_CHAR15");
        //string UDF_CHAR11 = getColData(rd, "UDF_CHAR11");
        //string UDF_CHAR22 = getColData(rd, "UDF_CHAR22");
        //string UDF_DATE2 = getColData(rd, "UDF_DATE2");
        //string UDF_CHAR23 = getColData(rd, "UDF_CHAR23");
        //string UDF_CHAR3 = getColData(rd, "UDF_CHAR3");
        //string UDF_CHAR13 = getColData(rd, "UDF_CHAR13");
        //string UDF_CHAR1 = getColData(rd, "UDF_CHAR1");
        //string UDF_CHAR9 = getColData(rd, "UDF_CHAR9");
        //string UDF_CHAR8 = getColData(rd, "UDF_CHAR8");
        //string UDF_CHAR4 = getColData(rd, "UDF_CHAR4");
        //string UDF_CHAR10 = getColData(rd, "UDF_CHAR10");
        //string UDF_CHAR16 = getColData(rd, "UDF_CHAR16");
        //string UDF_CHAR19 = getColData(rd, "UDF_CHAR19");
        //string UDF_CHAR14 = getColData(rd, "UDF_CHAR14");
        //string IsOverdue = getColData(rd, "IsOverdue");
        #endregion







    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties.Settings.get_Default():ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties.Sett" +
    "ings")]

namespace ST_cf2adbef09234f1886229fc814dafa08.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\st_cf2adbef09234f1886229fc814dafa08.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_cf2adbef09234f1886229fc814dafa08.csproj</RootNamespace>
    <AssemblyName>ST_cf2adbef09234f1886229fc814dafa08.csproj</AssemblyName>
    <ProjectGuid>{54C59138-336E-4A09-BFA2-7316455842C9}</ProjectGuid>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="Microsoft.VisualBasic" />
    <Reference Include="System" />
    <Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.ServiceModel.Web">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ScriptTask</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem><BinaryItem Name="\bin\release\st_cf2adbef09234f1886229fc814dafa08.csproj.dll">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
EgAABgJyWAYAcCgSAAAGAnJsBgBwKBIAAAYCcoIGAHAoEgAABgJymAYAcCgSAAAGAnKuBgBwKBIA
AAYCcsIGAHAoEgAABgJy2AYAcCgSAAAGAnLsBgBwKBIAAAYCcgIHAHAoEgAABgJyFgcAcCgSAAAG
AnIqBwBwKBIAAAYCcj4HAHAoEgAABgJyUgcAcCgSAAAGAnJoBwBwKBIAAAYCcn4HAHAoEgAABgJy
lAcAcCgSAAAGAnKqBwBwKBIAAAYoCAAABgJyqAMAcCgSAAAGcr4HAHAoFAAABioAABMwLgBfAgAA
AwAAESg6AAAKCgJy2gUAcCgSAAAGEgAoLgAACiYDctoFAHBvMwAACm8RAAAKKDUAAAoLA3L/AABw
F4waAAABbxgAAAoGByg7AAAKLQwCAygFAAAGOQkCAAACcqgDAHAoEgAABgJyMgQAcCgSAAAGAnJM
BABwKBIAAAYCcmAEAHAoEgAABgJydgQAcCgSAAAGAnKIBABwKBIAAAYCcqAEAHAoEgAABgJysAQA
cCgSAAAGAnK6BABwKBIAAAYCcs4EAHAoEgAABgJy5gQAcCgSAAAGAnL8BABwKBIAAAYCcgYFAHAo
EgAABgJyJgUAcCgSAAAGAnJEBQBwKBIAAAYCclYFAHAoEgAABgJyYgUAcCgSAAAGAnIaAwBwKBIA
AAYCcnAFAHAoEgAABgJyjAUAcCgSAAAGAnKgBQBwKBIAAAYCcrwFAHAoEgAABgJy2gUAcCgSAAAG
AnLyBQBwKBIAAAYCcgYGAHAoEgAABgJyGgYAcCgSAAAGAnIuBgBwKBIAAAYCckIGAHAoEgAABgJy
WAYAcCgSAAAGAnJsBgBwKBIAAAYCcoIGAHAoEgAABgJymAYAcCgSAAAGAnKuBgBwKBIAAAYCcsIG
AHAoEgAABgJy2AYAcCgSAAAGAnLsBgBwKBIAAAYCcgIHAHAoEgAABgJyFgcAcCgSAAAGAnIqBwBw
KBIAAAYCcj4HAHAoEgAABgJyUgcAcCgSAAAGAnJoBwBwKBIAAAYCcn4HAHAoEgAABgJylAcAcCgS
AAAGAnKqBwBwKBIAAAYoCQAABgJyqAMAcCgSAAAGcsYHAHAoFAAABioAEzAFAFUDAAAEAAARcr4C
AHAKAgNyMgQAcHK+AgBwEgAoBgAABgIDckwEAHByvgIAcBIAKAYAAAYCA3JgBABwcr4CAHASACgG
AAAGAgNydgQAcHK+AgBwEgAoBgAABgIDcogEAHByvgIAcBIAKAYAAAYCA3KgBABwcr4CAHASACgG
AAAGAgNysAQAcHK+AgBwEgAoBgAABgIDcroEAHByvgIAcBIAKAYAAAYCA3LOBABwcr4CAHASACgG
AAAGAgNy5gQAcHK+AgBwEgAoBgAABgIDcvwEAHByvgIAcBIAKAYAAAYCA3IGBQBwcr4CAHASACgG
AAAGAgNyJgUAcHK+AgBwEgAoBgAABgIDckQFAHByvgIAcBIAKAYAAAYCA3JiBQBwcr4CAHASACgG
AAAGAgNyGgMAcHK+AgBwEgAoBwAABgIDcnAFAHByvgIAcBIAKAcAAAYCA3KMBQBwcr4CAHASACgH
AAAGAgNyoAUAcHK+AgBwEgAoBwAABgIDcrwFAHByvgIAcBIAKAYAAAYCA3LyBQBwcr4CAHASACgG
AAAGAgNyBgYAcHK+AgBwEgAoBwAABgIDchoGAHByvgIAcBIAKAcAAAYCA3IuBgBwcr4CAHASACgG
AAAGAgNyQgYAcHK+AgBwEgAoBgAABgIDclgGAHByvgIAcBIAKAcAAAYCA3JsBgBwcr4CAHASACgG
AAAGAgNyggYAcHK+AgBwEgAoBgAABgIDcpgGAHByvgIAcBIAKAYAAAYCA3KuBgBwcr4CAHASACgH
AAAGAgNywgYAcHK+AgBwEgAoBgAABgIDctgGAHByvgIAcBIAKAYAAAYCA3LsBgBwcr4CAHASACgG
AAAGAgNyAgcAcHK+AgBwEgAoBgAABgIDchYHAHByvgIAcBIAKAYAAAYCA3IqBwBwcr4CAHASACgG
AAAGAgNyPgcAcHK+AgBwEgAoBgAABgIDclIHAHByvgIAcBIAKAYAAAYCA3JoBwBwcr4CAHASACgG
AAAGAgNyfgcAcHK+AgBwEgAoBgAABgIDcpQHAHByvgIAcBIAKAYAAAYCA3KqBwBwcr4CAHASACgG
AAAGBnK+AgBwKDwAAAosIgNyqAMAcG8zAAAKbxEAAApy5gcAcAYoIwAACigUAAAGFyoWKgAAABMw
BQCOAQAABQAAEQIEKBIAAAYXKA8AAAYKAwVyvgIAcCg4AAAKLQMFKwEEbzMAAApvEQAACgsGbyYA
AApy+gcAcCg4AAAKLRIGbyYAAApy6AMAcCg4AAAKLAcGbyYAAAoKB28mAAAKcvoHAHAoOAAACi0S
B28mAAAKcugDAHAoOAAACiwHB28mAAAKCwZyBAgAcHIICABwbz0AAAoKB3IECABwcggIAHBvPQAA
CgsGcgwIAHByEAgAcG89AAAKCgdyDAgAcHIQCABwbz0AAAoLBnIUCABwchAIAHBvPQAACgoHchQI
AHByEAgAcG89AAAKCwZyGAgAcHIICABwbz0AAAoKB3IYCABwcggIAHBvPQAACgsEcmgHAHAoOAAA
Ci0NBHJ+BwBwKDgAAAosKAYXjS4AAAEMCBYfMJ0Ibz4AAAoKBxeNLgAAAQ0JFh8wnQlvPgAACgsG
byYAAAoKB28mAAAKCwYHKDwAAAosKw4EJVAOBFByvgIAcCg8AAAKLQdyvgIAcCsFchwIAHByIggA
cAQoLAAAClEqAAATMAUAnAAAAAMAABF+IgAACgp+IgAACgsCBCgSAAAGEgAoLgAACiYDBXK+AgBw
KDgAAAotAwUrAQRvMwAACm8RAAAKEgEoLgAACiYSACgvAAAKIGwHAAAxThIBKC8AAAogbAcAADFA
EgAoPwAAChIBKD8AAAooQAAACiwrDgQlUA4EUHK+AgBwKDwAAAotB3K+AgBwKwVyHAgAcHIiCABw
BCgsAAAKUSoTMAQApgYAAAQAABFyOAgAcAoGcmIIAHAoIwAACgoGcnwIAHAoIwAACgoGcpgIAHAo
IwAACgoGcq4IAHAoIwAACgoGcsYIAHAoIwAACgoGctoIAHAoIwAACgoGcvQIAHAoIwAACgoGcgYJ
AHAoIwAACgoGchIJAHAoIwAACgoGcigJAHAoIwAACgoGckIJAHAoIwAACgoGcloJAHAoIwAACgoG
cmYJAHAoIwAACgoGcogJAHAoIwAACgoGcqgJAHAoIwAACgoGcrwJAHAoIwAACgoGcsoJAHAoIwAA
CgoGctoJAHAoIwAACgoGcvQJAHAoIwAACgoGchIKAHAoIwAACgoGcigKAHAoIwAACgoGckYKAHAo
IwAACgoGcmYKAHAoIwAACgoGcoAKAHAoIwAACgoGcpYKAHAoIwAACgoGcqwKAHAoIwAACgoGcsIK
AHAoIwAACgoGctgKAHAoIwAACgoGcvAKAHAoIwAACgoGcgYLAHAoIwAACgoGch4LAHAoIwAACgoG
cjYLAHAoIwAACgoGck4LAHAoIwAACgoGcmQLAHAoIwAACgoGcnwLAHAoIwAACgoGcpILAHAoIwAA
CgoGcqoLAHAoIwAACgoGcsALAHAoIwAACgoGctYLAHAoIwAACgoGcuwLAHAoIwAACgoGcgIMAHAo
IwAACgoGchoMAHAoIwAACgoGcjIMAHAoIwAACgoGckoMAHAoIwAACgoGcmIMAHAoIwAACgoGcngM
AHAoIwAACgoGcsADAHAoIwAACgoGcpIMAHAoIwAACgoGAnKoDABwKEEAAAoKBnKsDABwAygOAAAG
crAMAHAoLAAACgoGcqwMAHAEKA4AAAZysAwAcCgsAAAKCgZyrAwAcAUoDgAABnKwDABwKCwAAAoK
BnKsDABwDgQoDgAABnKwDABwKCwAAAoKBnKsDABwDgUoDgAABnKwDABwKCwAAAoKBnKsDABwDgYo
DgAABnKwDABwKCwAAAoKBnKsDABwDgcoDgAABnKwDABwKCwAAAoKBnKsDABwDggoDgAABnKwDABw
KCwAAAoKBnKsDABwDgkoDgAABnKwDABwKCwAAAoKBnKsDABwDgooDgAABnKwDABwKCwAAAoKBnKs
DABwDgsoDgAABnKwDABwKCwAAAoKBnKsDABwDgwoDgAABnKwDABwKCwAAAoKBnKsDABwDg0oDgAA
BnKwDABwKCwAAAoKBnKsDABwDg4oDgAABnKwDABwKCwAAAoKBnKsDABwDg8oDgAABnKwDABwKCwA
AAoKBnKsDABwDhAoDgAABnKwDABwKCwAAAoKBnKsDABwDhEoDgAABnKwDABwKCwAAAoKBnKsDABw
DhIoDgAABnKwDABwKCwAAAoKBnKsDABwDhMoDgAABnKwDABwKCwAAAoKBnKsDABwDhQoDgAABnKw
DABwKCwAAAoKBnKsDABwDhUoDgAABnKwDABwKCwAAAoKBnKsDABwDhYoDgAABnKwDABwKCwAAAoK
BnKsDABwDhcoDgAABnKwDABwKCwAAAoKBnKsDABwDhgoDgAABnKwDABwKCwAAAoKBnKsDABwDhko
DgAABnKwDABwKCwAAAoKBnKsDABwDhooDgAABnKwDABwKCwAAAoKBnKsDABwDhsoDgAABnKwDABw
KCwAAAoKBnKsDABwDhwoDgAABnKwDABwKCwAAAoKBnKsDABwDh0oDgAABnKwDABwKCwAAAoKBnKs
DABwDh4oDgAABnKwDABwKCwAAAoKBnKsDABwDh8oDgAABnKwDABwKCwAAAoKBnKsDABwDiAoDgAA
BnKwDABwKCwAAAoKBnKsDABwDiEoDgAABnKwDABwKCwAAAoKBnKsDABwDiIoDgAABnKwDABwKCwA
AAoKBnKsDABwDiMoDgAABnKwDABwKCwAAAoKBnKsDABwDiQoDgAABnKwDABwKCwAAAoKBnKsDABw
DiUoDgAABnKwDABwKCwAAAoKBnKsDABwDiYoDgAABnKwDABwKCwAAAoKBnKsDABwDicoDgAABnKw
DABwKCwAAAoKBnKsDABwDigoDgAABnKwDABwKCwAAAoKBnKsDABwDikoDgAABnKwDABwKCwAAAoK
BnKsDABwDiooDgAABnKwDABwKCwAAAoKBnKsDABwDisoDgAABnKwDABwKCwAAAoKBg4sb0IAAApy
tgwAcCg4AAAKLQdyIgIAcCsFcsAMAHByqAwAcChBAAAKCgZyxAwAcCgjAAAKCgZ+BwAABCgMAAAG
AnLODABwKBQAAAYqAAATMAQAbAQAAAQAABFy5AwAcAoGcgQNAHADKA4AAAZyLA0AcCgsAAAKCgZy
NA0AcAQoDgAABnIsDQBwKCwAAAoKBnJODQBwBSgOAAAGciwNAHAoLAAACgoGcmoNAHAOBCgOAAAG
ciwNAHAoLAAACgoGcoINAHAOBSgOAAAGciwNAHAoLAAACgoGcqANAHAOBigOAAAGciwNAHAoLAAA
CgoGcrYNAHAOBygOAAAGciwNAHAoLAAACgoGcsYNAHAOCCgOAAAGciwNAHAoLAAACgoGcuANAHAO
CSgOAAAGciwNAHAoLAAACgoGcv4NAHAOCigOAAAGciwNAHAoLAAACgoGchoOAHAOCygOAAAGciwN
AHAoLAAACgoGcioOAHAODCgOAAAGciwNAHAoLAAACgoGclAOAHAODSgOAAAGciwNAHAoLAAACgoG
cnQOAHAODigOAAAGciwNAHAoLAAACgoGcowOAHAODygOAAAGciwNAHAoLAAACgoGcp4OAHAOECgO
AAAGciwNAHAoLAAACgoGcrIOAHAOESgOAAAGciwNAHAoLAAACgoGctAOAHAOEigOAAAGciwNAHAo
LAAACgoGcvIOAHAOEygOAAAGciwNAHAoLAAACgoGcgwPAHAOFCgOAAAGciwNAHAoLAAACgoGci4P
AHAOFSgOAAAGciwNAHAoLAAACgoGclIPAHAOFigOAAAGciwNAHAoLAAACgoGcnAPAHAOFygOAAAG
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
b2QAAAoJb2UAAAoGb2YAAAoTBBEEdEAAAAFvZwAACihoAAAKEQRvaQAACg0Jc2oAAAoTBREFb2sA
AAoTBhEFb2wAAAoJb2UAAAoRBG9tAAAKEQYTCN5LEwdyIgIAcBuNIwAAARMJEQkWcpkYAHCiEQkX
AqIRCRgDohEJGSheAAAKohEJGhEHbxEAAAqiEQkoHQAACigUAAAGcr4CAHATCN4AEQgqAAAAARAA
AAAAAACjowBLMwAAARMwBQBLAAAAEQAAEQJyzxgAcG8nAAAKCgYWMAIWKgIWBm9ZAAAKKDQAAAoL
AnLXGABwbycAAAoMAgYaWAgGGlhZb1kAAAooNAAACg0HHzxaCVgTBBEEKgATMAMArgAAABIAABEC
LQZy3xgAcCoCb0IAAApy3xgAcCg4AAAKLAZy3xgAcCoCcr4CAHAoOAAACiwGct8YAHAqfgkAAAQM
EgICKG4AAAoobwAACgoSACMAAAAAAAAUwChwAAAKCgYoGwAABiwREgAjAAAAAAAA8D8ocAAACgob
jSMAAAENCRZyrAwAcKIJFxIAKHEAAAqiCRhyEAgAcKIJGRIAKHIAAAqiCRpyrAwAcKIJKB0AAAoL
ByoAAAMwCADCAQAAAAAAAAIg3QcAABkfChgWFnMyAAAKKDYAAAosGgIg3QcAAB8LGRgWFnMyAAAK
KDcAAAosAhcqAiDeBwAAGR8JGBYWczIAAAooNgAACiwaAiDeBwAAHwsYGBYWczIAAAooNwAACiwC
FyoCIN8HAAAZHhgWFnMyAAAKKDYAAAosGgIg3wcAAB8LFxgWFnMyAAAKKDcAAAosAhcqAiDgBwAA
GR8NGBYWczIAAAooNgAACiwaAiDgBwAAHwscGBYWczIAAAooNwAACiwCFyoCIOEHAAAZHwwYFhZz
MgAACig2AAAKLBoCIOEHAAAfCxsYFhZzMgAACig3AAAKLAIXKgIg4gcAABkfCxgWFnMyAAAKKDYA
AAosGgIg4gcAAB8LGhgWFnMyAAAKKDcAAAosAhcqAiDjBwAAGR8KGBYWczIAAAooNgAACiwaAiDj
BwAAHwsZGBYWczIAAAooNwAACiwCFyoCIOQHAAAZHhgWFnMyAAAKKDYAAAosGgIg5AcAAB8LFxgW
FnMyAAAKKDcAAAosAhcqAiDlBwAAGR8OGBYWczIAAAooNgAACiwaAiDlBwAAHwsdGBYWczIAAAoo
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
WSEAcH1KAAAEEUZyFgcAcH1LAAAEEUZvdQAACgZzIAAABhNHEUdyjSEAcH1JAAAEEUdykyEAcH1K
AAAEEUdyKgcAcH1LAAAEEUdvdQAACgZzIAAABhNIEUhyuSEAcH1JAAAEEUhyvyEAcH1KAAAEEUhy
PgcAcH1LAAAEEUhvdQAACgZzIAAABhNJEUly4SEAcH1JAAAEEUly5yEAcH1KAAAEEUlyUgcAcH1L
AAAEEUlvdQAACgZzIAAABhNKEUpy9yEAcH1JAAAEEUpy/SEAcH1KAAAEEUpyaAcAcH1LAAAEEUpv
dQAACgZzIAAABhNLEUtyOyIAcH1JAAAEEUtyQSIAcH1KAAAEEUtyfgcAcH1LAAAEEUtvdQAACgZz
IAAABhNMEUxyayIAcH1JAAAEEUxycSIAcH1KAAAEEUxylAcAcH1LAAAEEUxvdQAACgZzIAAABhNN
EU1ygyIAcH1JAAAEEU1yiSIAcH1KAAAEEU1yvgIAcH1LAAAEEU1vdQAACgZzIAAABhNOEU5ynSIA
cH1JAAAEEU5yoyIAcH1KAAAEEU5yvgIAcH1LAAAEEU5vdQAACgZzIAAABhNPEU9yyyIAcH1JAAAE
EU9y0SIAcH1KAAAEEU9yvgIAcH1LAAAEEU9vdQAACgaACwAABCoeAih2AAAKKh4CKHkAAAoqogJy
vgIAcH1JAAAEAnK+AgBwfUoAAAQCcr4CAHB9SwAABAIoeQAACioafkwAAAQqLnMiAAAGgEwAAAQq
HgIoegAACioeAih5AAAKKgAAEzADAC0AAAAUAAARfk0AAAQtIHINIwBw0AcAAAIoEwAACm98AAAK
c30AAAoKBoBNAAAEfk0AAAQqGn5OAAAEKh4CgE4AAAQqAAAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQAB
AAAAAAAMAAAAdjIuMC41MDcyNwAAAAAFAGwAAADMDwAAI34AADgQAAB4EgAAI1N0cmluZ3MAAAAA
sCIAAJAjAAAjVVMAQEYAABAAAAAjR1VJRAAAAFBGAABcBQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJ
CwAAAPoBMwAWAAABAAAASAAAAAcAAABOAAAAJwAAAIcAAAB+AAAABAAAAEoAAAAUAAAAAgAAAAMA
AAAEAAAABAAAAAEAAAAKAAAAAQAAAAMAAAACAAAAAAAKAAEAAAAAAAYAIgH5AAoATgFHAQoAUwFH
AQ4AbwFaAQoA/wFHARIAHgISAgoATAIxAhIAagISAgoAswaiBgoA5AbPBgoABgn0CAoAHQn0CAoA
Ogn0CAoAWQn0CAoAcgn0CAoAiwn0CAoApgn0CAoAwQn0CAoA2gn0CAoAEwrzCQoAMwrzCRYAXgpR
CgYAbQr5ABoAxgqmChoA3gqmCgoAAwtHARIACQsSAgoAKgtHAQoALwtHARIAUwsSAhIAYgsSAhIA
fQsSAgoAqwuYCwoA4wtHAQoA9wtHAQoAFwwNDB4AUwxHAQoAgQzzCQoApQwNDAoAqgwNDAoAwAwN
DB4A8AzkDAoA+wwxAgoANw1HAQoAjA17DQoAyA1HARIA/g3oDRIAHw4MDhIAMQ7oDRIASg4MDgoA
dA5HARIAfg7oDRIAjQ4MDh8AtQ4AAAoAzA7ADgoA5w4NDCIAJw8KDwoANw8NDCYA3Q+7DyoAFRD4
DwoANBBHAQ4AVxBMEA4AsxBMEA4AyxBMEAoA8RBHAQoAbBFHASoAeRH4DyoAjxH4DwoAthGjEQoA
0xH0CA4A/xHpEQ4AGBLpEQAAAAABAAAAAAABAAEAAQAQADkARAAFAAEAAQADAQAAbwAAAAkADQAf
AAUAEAB9AAAADQAQAB8AAwAQAI0AAAANAEkAIAAAARAAkQCaABEATAAhAAAAEADQAJoADQBNACQA
UYCHARMAUYCVARMAEQCiARMAEQC3ASAAEQDCASAAEQDLASAAEQDVASAAEQDqASAAMQAIAiMAEQAo
AicAEQBTAisAEQBaDMgBBgbsAxMAVoD0A9IAVoD8A9IAAwAEBCAAAwAQBCAAAwAaBCAAAwApBCAA
AwAzBCAAAwA/BCAAAwBJBCAAAwBXBCAAAwBlBCAAAwB2BCAAAwCFBCAAAwCNBCAAAwCdBCAAAwCo
BCAAAwCsBCAAAwCyBCAAAwC9BCAAAwDCBCAAAwDLBCAAAwDXBCAAAwDcBCAAAwDnBCAAAwDuBCAA
AwD3BCAAAwADBSAAAwASBSAAAwAbBSAAAwArBSAAAwAxBSAAAwA7BSAAAwBFBSAAAwBPBSAAAwBZ
BSAAAwBjBSAAAwBtBSAAAwB3BSAAAwCBBSAAAwCLBSAAAwCWBSAAAwChBSAAAwCsBSAAAwC3BSAA
AwDCBSAAAwDNBSAAAwDYBSAAAwDjBSAAAwDuBSAAAwD5BSAAAwAEBiAAAwAPBiAAAwAaBiAAAwAl
BiAAAwAwBiAAAwA6BiAAAwBEBiAAAwBOBiAAAwBYBiAABgBnBiAABgBuBiAABgB2BiAAEQB+BuAA
EQDDBu4AEQDwBvIAUCAAAAAAhgBZAjMAAQCUIgAAAACRAF4CNwABAHQnAAAAAJEAcgI8AAIAjCkA
AAAAkQCCAjwABAD4KwAAAACRAJICRAAGAFwvAAAAAJEAogJMAAgA+DAAAAAAkQCuAkwADQCgMQAA
AACRALoCWAASAFQ4AAAAAJEAygJYAD8AzDwAAAAAkQDXAjcAbAAEPQAAAACRAOQCiQBtALg/AAAA
AJEAAAOPAG4ASEAAAAAAkQALA5UAcACMQAAAAACRABMDnAByAJhAAAAAAJEAEwOhAHMAMEEAAAAA
kQAcA6cAdQCoQQAAAACRACcDrQB2ANhBAAAAAJEAPwOyAHcAYEIAAAAAkQBKA7kAeQDQQgAAAACR
AFYDjwB6ABRDAAAAAJEAXwM3AHwA3EMAAAAAkQBzAzcAfQBcRAAAAACRAH8DvwB+ANhEAAAAAJEA
mwPGAIEA6EUAAAAAkQCjA60AgwBARgAAAACRAMADnACEAPxGAAAAAJEA1gPMAIUA7lgAAAAAhhjm
AzMAhgCMIgAAAACRADMMwwGGAMxIAAAAAJEYZREDBIcA9lgAAAAAhhjmAzMAhwD+WAAAAACGGOYD
MwCHACdZAAAAAJYIjgbkAIcAOlkAAAAAhhjmAzMAhwAuWQAAAACRGGURAwSHAEJZAAAAAIMY5gMz
AIcATFkAAAAAkwgAB/YAhwCFWQAAAACTCBQH+wCHAIxZAAAAAJMIIAcAAYcAAAABADQHAAABADkH
AAACADwHAAABADkHAAACADwHAAABADkHAAACAD8HAAABADkHAAACAD8HAAADAEoHAAAEAFQHAAAF
AF4HAAABADkHAAACAD8HAAADAEoHAAAEAFQHAAAFAF4HAAABAGYHAAACAHIHAAADAH8HAAAEAIkH
AAAFAJQHAAAGAJ0HAAAHAKkHAAAIALEHAAAJALYHAAAKAMAHAAALAMwHAAAMANcHAAANANwHAAAO
AOwHAAAPAPsHAAAQAAQIAAARAAoIAAASABEIAAATAB0IAAAUACsIAAAVADUIAAAWAEMIAAAXAFII
AAAYAFkFAAAZAE4GAAAaADAGAAAbADsFAAAcAKEFAAAdAEQGAAAeAMIFAAAfAJYFAAAgAA8GAAAh
ADoGAAAiABoGAAAjAEUFAAAkAKwFAAAlADEFAAAmAIEFAAAnAHcFAAAoAE8FAAApAIsFAAAqAM0F
AAArAO4FAAAsALcFAAAtAF4IAAABAGYHAAACAHIHAAADAH8HAAAEAIkHAAAFAJQHAAAGAJ0HAAAH
AKkHAAAIALEHAAAJALYHAAAKAMAHAAALAMwHAAAMANcHAAANANwHAAAOAOwHAAAPAPsHAAAQAAQI
AAARAAoIAAASABEIAAATAB0IAAAUACsIAAAVADUIAAAWAEMIAAAXAFIIAAAYAFkFAAAZAE4GAAAa
ADAGAAAbADsFAAAcAKEFAAAdAEQGAAAeAMIFAAAfAJYFAAAgAA8GAAAhADoGAAAiABoGAAAjAEUF
AAAkAKwFAAAlADEFAAAmAIEFAAAnAHcFAAAoAE8FAAApAIsFAAAqAM0FAAArAO4FAAAsALcFAAAt
AF4IAAABAGYHAAABAGgIAAABAGoIAAACAG4IAAABAGoIAAACAG4IAAABAH8IAAABAH8IAAACAIEI
AAABAIkIAAABAJUIAAABADkHAAACAJUIAAABAJ0IAAABAKEIAAACAK0IAAABAH8IAAABAH8IAAAB
ALQIAAACALcIAAADAL0IAAABAMIIAAACAMYIAAABANEIAAABAOEIAAABAOoIAAABAEUMAAABAO4I
WQDmAxABYQDmAxABaQDmAxABcQDmAxABeQDmAxABgQDmAxABiQDmAxABkQDmAxABmQDmAxABoQDm
AxUBqQDmAzMAsQDmAxABCQB/ClQBuQDQClkBwQDnCl4ByQDwCmQBGQD6CmgBMQAeC2wB4QBBC3EB
2QBeC3gBMQB0C4ABAQG3C4UBCQHFC2QBQQDRC4sBCQHaC5EBEQHvCzMAKQD+C5UBKQD6CpoBGQEG
DJ8BQQDnCqUBIQEcDMYAuQAkDBUBMQHmAzMAKQCcDCMAGQEGDMYAOQG3DNEBSQHLDGgBGQHUDGgB
GQHcDNgBDADmA+UBUQEJDesBUQEJDQMC0QD6CmgBGQEGDBMCKQAPDRsCKQAbDSMCKQAkDSsCKQAt
DSsCKQDmAy8CKQDmAzYCQQDnCkACYQE/Da0AYQFHDUUCKQBSDRsCKQBoDRsCGQEPDUsCaQGTDVEC
KQCZDZUBKQCjDRsCGQGyDUsCGQHADY4CGQHNDZQCKQDXDaMCKQCyDRsCGQEGDKgCGQHgDWgBGQEG
DK8CeQHmAxABgQEsDjMAeQE8DrwCkQFUDhABkQFkDisCoQHmA84CMQDmAzMAqQGbDtQCGQGgDisC
GQGrDvECFAC3C/0CHADFCw8DHADaC5EBuQHVDiIDuQHeDigDwQHmAy4DyQHmAz0DyQE+D0QDyQFN
D0oDyQFrD08DGQF2D2UDGQGCD2oDuQGMDyID0QGWD3AD2QHmA4ID4QEpEIgD6QFAEKAD8QFiELID
8QFpEBAB8QF0EBAB8QGEEHAD8QGWELkD0QGnEL8D0QGtEDMA8QG/EMcDAQLbEGgBCQL5EDcA+QED
EbkDQQHmAz0DSQEVEWgBSQGtEDMA+QGtEDMAYQEfEe4DKQAoEfMDKQA4EfMDKQBBEWgBKQBTEWgB
KQDmAwcEFADmAzMAFABeCxQECQDmAzMAGQLmAzMAIQLmAzMAGQDmAzMAIQDmAzMAKQLmAzMA4QDc
EcIESQDmA8gEOQLmA9UECAAEABYACAAIABsACAA4ANYACAA8ANsALgAjABUFLgArAOUELgAzABsF
LgATABUFLgA7ABUFLgBTADIFLgBbADsFLgAbABUFLgALAOUEQwBjABoBSQDzA9wEaQDzA9wEgwC7
A9sA4wDbA9sAgQELAdsAAQLDA9sAIQLDA9sAQQLDA9sAYQLDA9sAgQLDA9sAoQLDA9sAwQLDA9sA
4QLDA9sAAQPDA9sAIQPDA9sAQQPDA9sAYQPDA9sAgQPDA9sAoAMLAdsAoQPDA9sAwQPDA9sA4QPD
A9sAAQTDA9sAIQTDA9sAQQTDA9sAYQTDA9sAgQTDA9sAoQTDA9sAwQTDA9sA4QTDA9sAAQXDA9sA
IQXDA9sAQQXDA9sAYQXDA9sAgQXDA9sAoQXDA9sAwQXDA9sA4QXDA9sAAQbDA9sAIQbDA9sAQQbD
A9sAYQbDA9sAgQbDA9sAoQbDA9sAwQbDA9sA4QbDA9sAAQfDA9sAIQfDA9sAQQfDA9sAYQfDA9sA
gQfDA9sAoQfDA9sAwQfDA9sA4QfDA9sAAQjDA9sAIQjDA9sAQQjDA9sAYQjDA9sAgQjDA9sAoQjD
A9sAwQjDA9sA4QjDA9sAAQnDA9sAgQkLAdsAqgFWAoMCigKaArUCwgLaAuQCFANUA2ADjwOkA6sD
zQPmA/kDGgTQBAYAAQAHAAIAAACaBukAAACzBgYBAAAsBwsBAgAhAAMAAgAlAAUAAgAmAAcAAQAn
AAcA3QH2AgcDdQMEgAAAAQAAAE0YiGwAAAAAAABEAAAACgAAAAAAAAAAAAAAAQDaAAAAAAACAAAA
AAAAAAAAAAAKAD4BAAAAAAIAAAAAAAAAAAAAAAoARwEAAAAAAgAAAAAAAAAAAAAACgASAgAAAAAD
AAUAAAAAAAAAAAAKAFEKAAAAAAoAAAAAAAAAAAAAAAEAhwoAAAAAAwAFAAAAAAAAAAAACgBHDAAA
AAAIAAAAAAAAAAAAAAA0A/QOAAAAAAMABQAAAAAAAAAAAHkDow8AAAAAAwAAAAAAAAAAAAAACgD4
DwAAAAAAAAAAAQAAAC0SAAADAAIABAACAAUAAgBTAP8BVQAPAgAAAAAAPE1vZHVsZT4AU1RfY2Yy
YWRiZWYwOTIzNGYxODg2MjI5ZmM4MTRkYWZhMDguY3Nwcm9qLmRsbABTY3JpcHRNYWluAFNUX2Nm
MmFkYmVmMDkyMzRmMTg4NjIyOWZjODE0ZGFmYTA4LmNzcHJvagBTY3JpcHRSZXN1bHRzAFJlcXVl
c3RMb25nRm9ybQBtYXAAU2V0dGluZ3MAU1RfY2YyYWRiZWYwOTIzNGYxODg2MjI5ZmM4MTRkYWZh
MDguY3Nwcm9qLlByb3BlcnRpZXMAUmVzb3VyY2VzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBtc2NvcmxpYgBTeXN0ZW0ARW51bQBPYmplY3QAU3lzdGVtLkNvbmZp
Z3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbnVtSGVhZGVyUm93cwBudW1Db2xzSW5D
U1YAbXNCZXR3ZWVuQVBJUmVxdWVzdHMAcmVwb3J0TmFtZQBmaWxlUGF0aABhdXRoVG9rZW4AY29u
bmVjdGlvblN0cmluZ0RhdGEAY29ubmVjdGlvblN0cmluZ0ZpbGUARGF0ZVRpbWUAVW5peEVwb2No
AFN5c3RlbS5EYXRhAERhdGFUYWJsZQByZXF1ZXN0cwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJp
YwBMaXN0YDEAbXltYXAATWFpbgBwcm9jZXNzRmlsZQBEYXRhUm93AGluc2VydENTVlRpY2tldAB1
cGRhdGVDU1ZUaWNrZXQAZGF0YUlzRGlmZmVyZW50AGNvbXBhcmVUZXh0AGNvbXBhcmVEYXRlAGlu
c2VydE5ld1RpY2tldAB1cGRhdGVUaWNrZXQAcmVtb3ZlVGlja2V0AHVwZGF0ZUxvbmdSZXF1ZXN0
VG9EYXRhYmFzZQBleGVjdXRlU1FMAGdldERhdGEAU2FuaXRpemUAZmluZFRpY2tldABjb2xFeGNl
bENvbG5hbWVUb09mZnNldABnZXRDb2xEYXRhAHNwbGl0Q1NWUm93AFdyaXRlTG9nAHJlYWRMb25n
Rm9ybVJlcXVlc3QAcmVhZEhpc3RvcnkAdXBkYXRlU2luZ2xlRmllbGRUb0RhdGFiYXNlAEdldERh
dGEAQ29udmVydEhyc01uc1N0cmluZ1RvTWludXRlcwBVbml4VGltZWluTVN0b1NRTFRpbWUAaXNU
aGlzVGltZUluRFNUAC5jdG9yAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAFdPUktPUkRFUklEAFJF
UVVFU1RFUgBSRVFVRVNURVJFTUFJTABDUkVBVEVEQlkAQ1JFQVRFRFRJTUUARFVFQllUSU1FAFJF
U1BPTkRFRFRJTUUAQ09NUExFVEVEVElNRQBTSE9SVERFU0NSSVBUSU9OAFRJTUVTUEVOVE9OUkVR
AFNVQkpFQ1QAUkVRVUVTVFRFTVBMQVRFAFRFTVBMQVRFSUQAU0xBAEFTU0VUAERFUEFSVE1FTlQA
U0lURQBDQVRFR09SWQBTVUJDQVRFR09SWQBJVEVNAFRFQ0hOSUNJQU4AU1RBVFVTAFBSSU9SSVRZ
AFJFUVVFU1RUWVBFAEhBU0FUVEFDSE1FTlRTAEhBU05PVEVTAEhBU0NPTlZFUlNBVElPTgBHUk9V
UABVREZfQ0hBUjEAVURGX0NIQVIyAFVERl9DSEFSMwBVREZfQ0hBUjQAVURGX0NIQVI1AFVERl9D
SEFSNgBVREZfQ0hBUjcAVURGX0NIQVI4AFVERl9DSEFSOQBVREZfQ0hBUjEwAFVERl9DSEFSMTEA
VURGX0NIQVIxMgBVREZfQ0hBUjEzAFVERl9DSEFSMTQAVURGX0NIQVIxNQBVREZfQ0hBUjE2AFVE
Rl9DSEFSMTcAVURGX0NIQVIxOABVREZfQ0hBUjE5AFVERl9DSEFSMjAAVURGX0NIQVIyMQBVREZf
Q0hBUjIyAFVERl9DSEFSMjMAVURGX0NIQVIyNABVREZfREFURTEAVURGX0RBVEUyAFVERl9EQVRF
MwBVREZfREFURTQATE9OR19SRVFVRVNUSUQAY29sdW1uAG1lRmllbGQAZGJGaWVsZABkZWZhdWx0
SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAHBhdGgAcmQAZHIAZHJFeGlzdGluZwBzc0NvbE5hbWUAZGJDb2xOYW1lAGNoYW5nZXMAV29y
a09yZGVySUQAU2VydmljZUdyb3VwAFJlcXVlc3RlcgBEZXBhcnRtZW50AENhdGVnb3J5AFN1YmNh
dGVnb3J5AFN1YmplY3QASXRlbQBDcmVhdGVkQnkAUmVxdWVzdFR5cGUAVGVjaG5pY2lhbgBTaXRl
AFJlcXVlc3RUZW1wbGF0ZQBBcHByb3ZhbFN0YXR1cwBQcmlvcml0eQBBc3NldABTdGF0dXMAQ3Jl
YXRlZFRpbWUAUmVzcG9uZGVkVGltZQBEdWVCeVRpbWUAQ29tcGxldGVkVGltZQBSZXNvbHV0aW9u
VGV4dABMYXN0VXBkYXRlZABJc092ZXJkdWUAcgBzcWwAY29ubmVjdGlvblN0cmluZwBzAHBhcnRp
YWwAd29ya09yZGVySUQAY29sbmFtZQByb3cAd29ya29yZGVyaWQAYWN0aW9uAGlkAGZpZWxkAGpz
b24AdXJsAFBhcmFtZXRlcnMAd2VpcmRUaW1lU3RyaW5nAHVuaXh0aW1lAGRheQB2YWx1ZQBTeXN0
ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFz
c2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAU3lzdGVtLkFkZEluAEFkZEluQXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVl
AFRvU3RyaW5nAEludDMyAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAFR5cGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARGF0YUNvbHVtbgBBZGQARGF0YVJvd0Nv
bGxlY3Rpb24AZ2V0X1Jvd3MASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAU3lzdGVtLkNvbGxl
Y3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAc2V0X0l0ZW0ATW92
ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBTdHJpbmcAZ2V0X05vdwBDb25jYXQAU3lzdGVtLklP
AFBhdGgAQ29tYmluZQBzZXRfVGFza1Jlc3VsdAA8cHJvY2Vzc0ZpbGU+Yl9fMAB4AFN5c3RlbS5D
b3JlAEZ1bmNgMgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRlMQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBNaW5WYWx1ZQBGaWxlAFN0cmVhbVJlYWRlcgBPcGVuVGV4dABU
ZXh0UmVhZGVyAFJlYWRMaW5lAFRvVXBwZXIASW5kZXhPZgBTeXN0ZW0uTGlucQBFbnVtZXJhYmxl
AElFbnVtZXJhYmxlYDEAQ291bnQAb3BfRXF1YWxpdHkAVHJ5UGFyc2UAZ2V0X1llYXIAZ2V0X01v
bnRoAENvbnZlcnQAVG9JbnQzMgBUb0RhdGVUaW1lAG9wX0dyZWF0ZXJUaGFuT3JFcXVhbABvcF9M
ZXNzVGhhbk9yRXF1YWwAU3lzdGVtLlRocmVhZGluZwBUaHJlYWQAU2xlZXAAZ2V0X1RvZGF5AG9w
X0dyZWF0ZXJUaGFuAG9wX0luZXF1YWxpdHkAUmVwbGFjZQBDaGFyAFRyaW1TdGFydABnZXRfRGF0
ZQBUb0xvd2VyAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRh
LkNvbW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBTcWxDb21tYW5kAENyZWF0ZUNvbW1hbmQARGJDb21t
YW5kAHNldF9Db21tYW5kVGV4dABFeGVjdXRlTm9uUXVlcnkARXhjZXB0aW9uAFNxbERhdGFBZGFw
dGVyAERiRGF0YUFkYXB0ZXIARmlsbABnZXRfTGVuZ3RoAGdldF9DaGFycwBFbnVtZXJhdG9yAFN5
c3RlbS5UZXh0AEVuY29kaW5nAGdldF9VVEY4AEdldEJ5dGVzAE1lbW9yeVN0cmVhbQBNaWNyb3Nv
ZnQuVmlzdWFsQmFzaWMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkZpbGVJTwBUZXh0RmllbGRQYXJz
ZXIAU3RyZWFtAHNldF9EZWxpbWl0ZXJzAHNldF9IYXNGaWVsZHNFbmNsb3NlZEluUXVvdGVzAFJl
YWRGaWVsZHMATGFzdEluZGV4T2YAU3Vic3RyaW5nAGdldF9BU0NJSQBzZXRfUG9zaXRpb24AU3lz
dGVtLlNlcnZpY2VNb2RlbC5XZWIAU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbi5Kc29uAERh
dGFDb250cmFjdEpzb25TZXJpYWxpemVyAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24AWG1s
T2JqZWN0U2VyaWFsaXplcgBSZWFkT2JqZWN0AEVudmlyb25tZW50AGdldF9OZXdMaW5lAFN5c3Rl
bS5OZXQAV2ViUmVxdWVzdABDcmVhdGUAc2V0X01ldGhvZABzZXRfQ29udGVudFR5cGUAc2V0X0Nv
bnRlbnRMZW5ndGgAR2V0UmVxdWVzdFN0cmVhbQBXcml0ZQBDbG9zZQBXZWJSZXNwb25zZQBHZXRS
ZXNwb25zZQBIdHRwV2ViUmVzcG9uc2UAZ2V0X1N0YXR1c0Rlc2NyaXB0aW9uAENvbnNvbGUAV3Jp
dGVMaW5lAEdldFJlc3BvbnNlU3RyZWFtAFJlYWRUb0VuZABUb0RvdWJsZQBBZGRNaWxsaXNlY29u
ZHMAQWRkSG91cnMAVG9TaG9ydERhdGVTdHJpbmcAVG9TaG9ydFRpbWVTdHJpbmcALmNjdG9yAERh
dGVUaW1lS2luZABEYXRhQ29udHJhY3RBdHRyaWJ1dGUARGF0YU1lbWJlckF0dHJpYnV0ZQBTeXN0
ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBTVF9jZjJhZGJlZjA5MjM0ZjE4ODYyMjlmYzgxNGRhZmEwOC5j
c3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAIUMAbwBuAG4AZQBjAHQAaQBv
AG4AUwB0AHIAaQBuAGcAACtDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAEYAaQBsAGUA
cwAAIVMAaABvAHIAdABSAGUAcQB1AGUAcwB0AFcAYQBpAHQAACtNAGEAbgBhAGcAZQBFAG4AZwBp
AG4AZQBBAHUAdABoAFQAbwBrAGUAbgAAH0EAdAB0AGEAYwBoAG0AZQBuAHQAcwBQAGEAdABoAAAV
UgBlAHAAbwByAHQATgBhAG0AZQAAK3MAZQBsAGUAYwB0ACAAKgAgAGYAcgBvAG0AIABSAGUAcQB1
AGUAcwB0AAALSQBuAEMAUwBWAACAw1MARQBMAEUAQwBUACAAWwBTAGEAdgBlAGQARgBpAGwAZQBO
AGEAbQBlAF0AIAAgAEYAUgBPAE0AIABbAEYAaQBsAGUAQQB1AHQAbwBtAGEAdABpAG8AbgBdAC4A
WwBkAGIAbwBdAC4AWwBSAGUAYwBlAGkAdgBlAGQARgBpAGwAZQBdACAAdwBoAGUAcgBlACAAUgBl
AGMAZQBpAHYAZQBkAEYAaQBsAGUATgBhAG0AZQAgAGwAaQBrAGUAIAAnACUAAQMlAAANTQBNAE0A
IABkAGQAAD8lACcAIABvAHIAZABlAHIAIABiAHkAIABSAGUAYwBlAGkAdgBlAGQARgBpAGwAZQBJ
AEQAIABkAGUAcwBjAAEDMAAAI1AAcgBvAGMAZQBzAHMAaQBuAGcAIABmAGkAbABlADoAIAAAI04A
TwAgAEQAQQBUAEEAIABBAFYAQQBJAEwAQQBCAEwARQAAT3cAYQByAG4AaQBuAGcAIABwAHIAbwBj
AGUAcwBzAEYAaQBsAGUAOgAgAGYAaQBsAGUAIABoAGEAcwAgAG4AbwAgAGQAYQB0AGEAOgAgAAAB
AEdwAHIAbwBjAGUAcwBzAEYAaQBsAGUAOgAgAEMAUwBWACAAcgBvAHcAIABkAG8AZQBzACAAbgBv
AHQAIABoAGEAdgBlACAAABEgAGMAbwBsAHUAbQBuAHMAABdDAHIAZQBhAHQAZQBkAFQAaQBtAGUA
AGNwAHIAbwBjAGUAcwBzAEYAaQBsAGUAOgAgAEMAcgBlAGEAdABlAGQAVABpAG0AZQAgAGMAYQBu
AG4AbwB0ACAAYgBlACAAcABhAHIAcwBlAGQALgAgAEYAaQBsAGUAOgAgAAARIABWAGEAbAB1AGUA
OgAgAAAXVwBvAHIAawBPAHIAZABlAHIASQBEAAAPRABlAGwAZQB0AGUAZAAAF0gAYQBzAEYAdQBs
AGwASQBuAGYAbwAAC0YAQQBMAFMARQAAEUwAbwBuAGcAIABBAFAASQAAK1AAcgBvAGMAZQBzAHMA
aQBuAGcAIABjAG8AbQBwAGwAZQB0AGUAOgAgAAAZUwBlAHIAdgBpAGMAZQBHAHIAbwB1AHAAABNS
AGUAcQB1AGUAcwB0AGUAcgAAFUQAZQBwAGEAcgB0AG0AZQBuAHQAABFDAGEAdABlAGcAbwByAHkA
ABdTAHUAYgBjAGEAdABlAGcAbwByAHkAAA9TAHUAYgBqAGUAYwB0AAAJSQB0AGUAbQAAE0MAcgBl
AGEAdABlAGQAQgB5AAAXUgBlAHEAdQBlAHMAdABUAHkAcABlAAAVVABlAGMAaABuAGkAYwBpAGEA
bgAACVMAaQB0AGUAAB9SAGUAcQB1AGUAcwB0AFQAZQBtAHAAbABhAHQAZQAAHUEAcABwAHIAbwB2
AGEAbABTAHQAYQB0AHUAcwAAEVAAcgBpAG8AcgBpAHQAeQAAC0EAcwBzAGUAdAAADVMAdABhAHQA
dQBzAAAbUgBlAHMAcABvAG4AZABlAGQAVABpAG0AZQAAE0QAdQBlAEIAeQBUAGkAbQBlAAAbQwBv
AG0AcABsAGUAdABlAGQAVABpAG0AZQAAHVIAZQBzAG8AbAB1AHQAaQBvAG4AVABlAHgAdAAAF0wA
YQBzAHQAVQBwAGQAYQB0AGUAZAAAE1UARABGAF8AQwBIAEEAUgA1AAATVQBEAEYAXwBEAEEAVABF
ADQAABNVAEQARgBfAEQAQQBUAEUAMQAAE1UARABGAF8AQwBIAEEAUgAyAAAVVQBEAEYAXwBDAEgA
QQBSADEAMgAAE1UARABGAF8ARABBAFQARQAzAAAVVQBEAEYAXwBDAEgAQQBSADEANQAAFVUARABG
AF8AQwBIAEEAUgAxADEAABVVAEQARgBfAEMASABBAFIAMgAyAAATVQBEAEYAXwBEAEEAVABFADIA
ABVVAEQARgBfAEMASABBAFIAMgAzAAATVQBEAEYAXwBDAEgAQQBSADMAABVVAEQARgBfAEMASABB
AFIAMQAzAAATVQBEAEYAXwBDAEgAQQBSADEAABNVAEQARgBfAEMASABBAFIAOQAAE1UARABGAF8A
QwBIAEEAUgA4AAATVQBEAEYAXwBDAEgAQQBSADQAABVVAEQARgBfAEMASABBAFIAMQAwAAAVVQBE
AEYAXwBDAEgAQQBSADEANgAAFVUARABGAF8AQwBIAEEAUgAxADkAABVVAEQARgBfAEMASABBAFIA
MQA0AAATSQBzAE8AdgBlAHIAZAB1AGUAAAdOAEUAVwAAH1UAcABkAGEAdABlACAAZgByAG8AbQAg
AEMAUwBWAAATQwBIAEEATgBHAEUAUwA6ACAAAAlUAFIAVQBFAAADpgABA3wAAAMJAAADIAAAAwAw
AQMCJQEFLAAgAAAVQwBoAGEAbgBnAGUAIAB0AG8AIAAAKWkAbgBzAGUAcgB0ACAAaQBuAHQAbwAg
AFIAZQBxAHUAZQBzAHQAKAAAGVcAbwByAGsATwByAGQAZQByAEkARAAsAAAbUwBlAHIAdgBpAGMA
ZQBHAHIAbwB1AHAALAAAFVIAZQBxAHUAZQBzAHQAZQByACwAABdEAGUAcABhAHIAdABtAGUAbgB0
ACwAABNDAGEAdABlAGcAbwByAHkALAAAGVMAdQBiAGMAYQB0AGUAZwBvAHIAeQAsAAARUwB1AGIA
agBlAGMAdAAsAAALSQB0AGUAbQAsAAAVQwByAGUAYQB0AGUAZABCAHkALAAAGVIAZQBxAHUAZQBz
AHQAVAB5AHAAZQAsAAAXVABlAGMAaABuAGkAYwBpAGEAbgAsAAALUwBpAHQAZQAsAAAhUgBlAHEA
dQBlAHMAdABUAGUAbQBwAGwAYQB0AGUALAAAH0EAcABwAHIAbwB2AGEAbABTAHQAYQB0AHUAcwAs
AAATUAByAGkAbwByAGkAdAB5ACwAAA1BAHMAcwBlAHQALAAAD1MAdABhAHQAdQBzACwAABlDAHIA
ZQBhAHQAZQBkAFQAaQBtAGUALAAAHVIAZQBzAHAAbwBuAGQAZQBkAFQAaQBtAGUALAAAFUQAdQBl
AEIAeQBUAGkAbQBlACwAAB1DAG8AbQBwAGwAZQB0AGUAZABUAGkAbQBlACwAAB9SAGUAcwBvAGwA
dQB0AGkAbwBuAFQAZQB4AHQALAAAGUwAYQBzAHQAVQBwAGQAYQB0AGUAZAAsAAAVVQBEAEYAXwBD
AEgAQQBSADUALAAAFVUARABGAF8ARABBAFQARQA0ACwAABVVAEQARgBfAEQAQQBUAEUAMQAsAAAV
VQBEAEYAXwBDAEgAQQBSADIALAAAF1UARABGAF8AQwBIAEEAUgAxADIALAAAFVUARABGAF8ARABB
AFQARQAzACwAABdVAEQARgBfAEMASABBAFIAMQA1ACwAABdVAEQARgBfAEMASABBAFIAMQAxACwA
ABdVAEQARgBfAEMASABBAFIAMgAyACwAABVVAEQARgBfAEQAQQBUAEUAMgAsAAAXVQBEAEYAXwBD
AEgAQQBSADIAMwAsAAAVVQBEAEYAXwBDAEgAQQBSADMALAAAF1UARABGAF8AQwBIAEEAUgAxADMA
LAAAFVUARABGAF8AQwBIAEEAUgAxACwAABVVAEQARgBfAEMASABBAFIAOQAsAAAVVQBEAEYAXwBD
AEgAQQBSADgALAAAFVUARABGAF8AQwBIAEEAUgA0ACwAABdVAEQARgBfAEMASABBAFIAMQAwACwA
ABdVAEQARgBfAEMASABBAFIAMQA2ACwAABdVAEQARgBfAEMASABBAFIAMQA5ACwAABdVAEQARgBf
AEMASABBAFIAMQA0ACwAABVJAHMATwB2AGUAcgBkAHUAZQAsAAAZSABhAHMARgB1AGwAbABJAG4A
ZgBvACwAABUpACAAVgBBAEwAVQBFAFMAIAAoAAADLAAAAycAAQUnACwAAQl0AHIAdQBlAAADMQAA
CTAALAAwACkAABVDAFMAVgAgAEkATgBTAEUAUgBUAAAfdQBwAGQAYQB0AGUAIABSAGUAcQB1AGUA
cwB0ACAAACdzAGUAdAAgAFMAZQByAHYAaQBjAGUARwByAG8AdQBwACAAPQAnAAEHJwAsACAAARlS
AGUAcQB1AGUAcwB0AGUAcgAgAD0AJwABG0QAZQBwAGEAcgB0AG0AZQBuAHQAIAA9ACcAARdDAGEA
dABlAGcAbwByAHkAIAA9ACcAAR1TAHUAYgBjAGEAdABlAGcAbwByAHkAIAA9ACcAARVTAHUAYgBq
AGUAYwB0ACAAPQAnAAEPSQB0AGUAbQAgAD0AJwABGUMAcgBlAGEAdABlAGQAQgB5ACAAPQAnAAEd
UgBlAHEAdQBlAHMAdABUAHkAcABlACAAPQAnAAEbVABlAGMAaABuAGkAYwBpAGEAbgAgAD0AJwAB
D1MAaQB0AGUAIAA9ACcAASVSAGUAcQB1AGUAcwB0AFQAZQBtAHAAbABhAHQAZQAgAD0AJwABI0EA
cABwAHIAbwB2AGEAbABTAHQAYQB0AHUAcwAgAD0AJwABF1AAcgBpAG8AcgBpAHQAeQAgAD0AJwAB
EUEAcwBzAGUAdAAgAD0AJwABE1MAdABhAHQAdQBzACAAPQAnAAEdQwByAGUAYQB0AGUAZABUAGkA
bQBlACAAPQAnAAEhUgBlAHMAcABvAG4AZABlAGQAVABpAG0AZQAgAD0AJwABGUQAdQBlAEIAeQBU
AGkAbQBlACAAPQAnAAEhQwBvAG0AcABsAGUAdABlAGQAVABpAG0AZQAgAD0AJwABI1IAZQBzAG8A
bAB1AHQAaQBvAG4AVABlAHgAdAAgAD0AJwABHUwAYQBzAHQAVQBwAGQAYQB0AGUAZAAgAD0AJwAB
GVUARABGAF8AQwBIAEEAUgA1ACAAPQAnAAEZVQBEAEYAXwBEAEEAVABFADQAIAA9ACcAARlVAEQA
RgBfAEQAQQBUAEUAMQAgAD0AJwABGVUARABGAF8AQwBIAEEAUgAyACAAPQAnAAEbVQBEAEYAXwBD
AEgAQQBSADEAMgAgAD0AJwABGVUARABGAF8ARABBAFQARQAzACAAPQAnAAEbVQBEAEYAXwBDAEgA
QQBSADEANQAgAD0AJwABG1UARABGAF8AQwBIAEEAUgAxADEAIAA9ACcAARtVAEQARgBfAEMASABB
AFIAMgAyACAAPQAnAAEZVQBEAEYAXwBEAEEAVABFADIAIAA9ACcAARtVAEQARgBfAEMASABBAFIA
MgAzACAAPQAnAAEZVQBEAEYAXwBDAEgAQQBSADMAIAA9ACcAARtVAEQARgBfAEMASABBAFIAMQAz
ACAAPQAnAAEZVQBEAEYAXwBDAEgAQQBSADEAIAA9ACcAARlVAEQARgBfAEMASABBAFIAOQAgAD0A
JwABGVUARABGAF8AQwBIAEEAUgA4ACAAPQAnAAEZVQBEAEYAXwBDAEgAQQBSADQAIAA9ACcAARtV
AEQARgBfAEMASABBAFIAMQAwACAAPQAnAAEbVQBEAEYAXwBDAEgAQQBSADEANgAgAD0AJwABG1UA
RABGAF8AQwBIAEEAUgAxADkAIAA9ACcAARdJAHMATwB2AGUAcgBkAHUAZQAgAD0AACNIAGEAcwBG
AHUAbABsAEkAbgBmAG8AIAA9ACAAMAAsACAAABtEAGUAbABlAHQAZQBkACAAPQAgADAALAAgAAAb
VQBEAEYAXwBDAEgAQQBSADEANAAgAD0AJwABBScAIAABJXcAaABlAHIAZQAgAFcAbwByAGsATwBy
AGQAZQByAEkARAA9AAA/dQBwAGQAYQB0AGUAIABSAGUAcQB1AGUAcwB0ACAAcwBlAHQAIABbAEQA
ZQBsAGUAdABlAGQAXQA9ADEAIAAAD1IAZQBtAG8AdgBlAGQAACd1AHAAZABhAHQAZQAgAFIAZQBx
AHUAZQBzAHQAIABzAGUAdAAgAAAlWwBSAGUAcQB1AGUAcwB0AGUAcgBFAG0AYQBpAGwAXQA9ACcA
AR1bAEMAcgBlAGEAdABlAGQAVABpAG0AZQBdAD0AABlbAEQAdQBlAEIAeQBUAGkAbQBlAF0APQAA
IVsAUgBlAHMAcABvAG4AZABlAGQAVABpAG0AZQBdAD0AACFbAEMAbwBtAHAAbABlAHQAZQBkAFQA
aQBtAGUAXQA9AAApWwBTAGgAbwByAHQARABlAHMAYwByAGkAcAB0AGkAbwBuAF0APQAnAAE1WwBU
AGkAbQBlAFMAcABlAG4AdABPAG4AUgBlAHEASQBuAE0AaQBuAHUAdABlAHMAXQA9AAAnWwBSAGUA
cQB1AGUAcwB0AFQAZQBtAHAAbABhAHQAZQBdAD0AJwABHVsAVABlAG0AcABsAGEAdABlAEkARABd
AD0AJwABD1sAUwBMAEEAXQA9ACcAARNbAEEAcwBzAGUAdABdAD0AJwABI1sASABhAHMAQQB0AHQA
YQBjAGgAbQBlAG4AdABzAF0APQAAF1sASABhAHMATgBvAHQAZQBzAF0APQAAJVsASABhAHMAQwBv
AG4AdgBlAHIAcwBhAHQAaQBvAG4AXQA9AAAZWwBVAEQARgBfAEQAQQBUAEUAMQBdAD0AABlbAFUA
RABGAF8ARABBAFQARQAyAF0APQAAGVsAVQBEAEYAXwBEAEEAVABFADMAXQA9AAAZWwBVAEQARgBf
AEQAQQBUAEUANABdAD0AACNbAEwAbwBuAGcAUgBlAHEAdQBlAHMAdABJAEQAXQA9ACcAASFbAEgA
YQBzAEYAdQBsAGwASQBuAGYAbwBdAD0AMQAgAAAlVwBIAEUAUgBFACAAVwBvAHIAawBPAHIAZABl
AHIASQBEAD0AABdVAFAARABBAFQARQAgAEYAVQBMAEwAAB9TAFEATAAgAEUAeABjAGUAcAB0AGkA
bwBuADoAIAAADyYAcgBzAHEAdQBvADsAAA8mAHIAZABxAHUAbwA7AAADIgAACSYAIwA5ADIAAANc
AAAHJgBnAHQAAAM+AAAHJgBsAHQAAAM8AAAFJwAnAAEHIgAiACIAAAMtAAGAs2kAbgBzAGUAcgB0
ACAAaQBuAHQAbwAgAEkAbQBwAG8AcgB0AEgAaQBzAHQAbwByAHkAIAAoAFsARABhAHQAZQBdACwA
IABbAFcAbwByAGsATwByAGQAZQByAEkARABdACwAIABbAEEAYwB0AGkAbwBuAF0ALAAgAFsAQwBv
AG0AbQBlAG4AdABdACkAIABWAEEATABVAEUAUwAoAEcARQBUAEQAQQBUAEUAKAApACwAIAAABywA
IAAnAAENJwAsACAAJwAnACkAAW1oAHQAdABwAHMAOgAvAC8AcwBkAHAAbwBuAGQAZQBtAGEAbgBk
AC4AbQBhAG4AYQBnAGUAZQBuAGcAaQBuAGUALgBjAG8AbQAvAGEAcABpAC8AagBzAG8AbgAvAHIA
ZQBxAHUAZQBzAHQALwAANT8AcwBjAG8AcABlAD0AcwBkAHAAbwBkAGEAcABpACYAYQB1AHQAaAB0
AG8AawBlAG4APQAANyYATwBQAEUAUgBBAFQASQBPAE4AXwBOAEEATQBFAD0ARwBFAFQAXwBSAEUA
UQBVAEUAUwBUAAAVIgBEAGUAdABhAGkAbABzACIAOgAAA1sAAANdAAAJfQB9AH0AXQAABX0AXQAA
NyYATwBQAEUAUgBBAFQASQBPAE4AXwBOAEEATQBFAD0ARwBFAFQAXwBIAEkAUwBUAE8AUgBZAAAP
SABpAHMAdABvAHIAeQAAPUUAeABjAGUAcAB0AGkAbwBuACAAaQBuACAAcgBlAGEAZABIAGkAcwB0
AG8AcgB5ADoAIAB1AHIAbAA9AAAHXQA9ACcAAQ9VAFAARABBAFQARQAgAAAJUABPAFMAVAAAQ2EA
cABwAGwAaQBjAGEAdABpAG8AbgAvAHgALQB3AHcAdwAtAGYAbwByAG0ALQB1AHIAbABlAG4AYwBv
AGQAZQBkAAE1RQB4AGMAZQBwAHQAaQBvAG4AIABpAG4AIABHAGUAdABEAGEAdABhADoAIAB1AHIA
bAA9AAAHaAByAHMAAAdtAGkAbgAACW4AdQBsAGwAAANBAAATUgBlAHEAdQBlAHMAdABJAEQAAANC
AAAZUgBlAHEAdQBlAHMAdAAgAE0AbwBkAGUAAANDAAALRwByAG8AdQBwAAADRAAAA0UAAANGAAAD
RwAAGVMAdQBiACAAQwBhAHQAZQBnAG8AcgB5AAADSAAAA0kAAANKAAAVQwByAGUAYQB0AGUAZAAg
AEIAeQAAA0sAAA9VAHIAZwBlAG4AYwB5AAADTAAADUkAbQBwAGEAYwB0AAADTQAAGVIAZQBxAHUA
ZQBzAHQAIABUAHkAcABlAAADTgAAA08AAANQAAANUgBlAGcAaQBvAG4AAANRAAAhUwBlAHIAdgBp
AGMAZQAgAEMAYQB0AGUAZwBvAHIAeQAAA1IAABFUAGUAbQBwAGwAYQB0AGUAAANTAAAfQQBwAHAA
cgBvAHYAYQBsACAAUwB0AGEAdAB1AHMAAANUAAADVQAAC0wAZQB2AGUAbAAAA1YAABdXAG8AcgBr
AHMAdABhAHQAaQBvAG4AAANXAAAxVwBvAHIAawBzAHQAYQB0AGkAbwBuACAATQBhAG4AdQBmAGEA
YwB0AHUAcgBlAHIAAANYAAAjVwBvAHIAawBzAHQAYQB0AGkAbwBuACAATQBvAGQAZQBsAAADWQAA
L1cAbwByAGsAcwB0AGEAdABpAG8AbgAgAFMAZQByAHYAaQBjAGUAIABUAGEAZwAAA1oAADFXAG8A
cgBrAHMAdABhAHQAaQBvAG4AIABCAEkATwBTACAAVgBlAHIAcwBpAG8AbgAABUEAQQAAK1cAbwBy
AGsAcwB0AGEAdABpAG8AbgAgAEIASQBPAFMAIABEAGEAdABlAAAFQQBCAAAvVwBvAHIAawBzAHQA
YQB0AGkAbwBuACAATABvAGcAZwBlAGQAIABVAHMAZQByAAAFQQBDAAAdUgBlAHEAdQBlAHMAdAAg
AFMAdABhAHQAdQBzAAAFQQBEAAAdUABlAG4AZABpAG4AZwAgAFMAdABhAHQAdQBzAAAFQQBFAAAZ
QwByAGUAYQB0AGUAZAAgAFQAaQBtAGUAAAVBAEYAAB1SAGUAcwBwAG8AbgBkAGUAZAAgAEQAYQB0
AGUAAAVBAEcAABVEAHUAZQBiAHkAIABUAGkAbQBlAAAFQQBIAAAdQwBvAG0AcABsAGUAdABlAGQA
IABUAGkAbQBlAAAFQQBJAAAZVABpAG0AZQAgAEUAbABhAHAAcwBlAGQAAAVBAEoAABtBAHMAcwBp
AGcAbgBlAGQAIABUAGkAbQBlAAAFQQBLAAAdTwB2AGUAcgBkAHUAZQAgAFMAdABhAHQAdQBzAAAF
QQBMAAAVUgBlAHMAbwBsAHUAdABpAG8AbgAABUEATQAABUEATgAALUEAcwBzAGUAdAAgAEEAYwBx
AHUAaQBzAGkAdABpAG8AbgAgAEQAYQB0AGUAAAVBAE8AACtBAHMAcwBlAHQAIABXAGEAcgByAGEA
bgB0AHkAIABFAHgAcABpAHIAeQAABUEAUAAAI0EAcwBzAGUAdAAgAEUAeABwAGkAcgB5ACAARABh
AHQAZQAABUEAUQAAE0EAcwBzAGUAdAAgAFQAYQBnAAAFQQBSAAAfQQBzAHMAZQB0ACAAUwBlAHIA
aQBhAGwAIABOAG8AAAVBAFMAAB1BAHMAcwBlAHQAIABCAGEAcgAgAEMAbwBkAGUAAAVBAFQAABtS
AGUAcwBvAGwAdgBlAGQAIABUAGkAbQBlAAAFQQBVAAAjTABhAHMAdAAgAFUAcABkAGEAdABlAGQA
IABUAGkAbQBlAAAFQQBWAAAbRABhAHQAYQBiAGEAcwBlACAATgBhAG0AZQAABUEAVwAAGVAAaABv
AG4AZQAgAE4AdQBtAGIAZQByAAAFQQBYAAATVQBzAGUAcgAgAG4AYQBtAGUAAAVBAFkAABFEAHUA
ZQAgAEQAYQB0AGUAAAVBAFoAADNSAGUAcQB1AGUAcwB0AGUAZAAgAEMAbwBtAHAAbABlAHQAaQBv
AG4AIABEAGEAdABlAAAFQgBBAAAPTQBhAG4AYQBnAGUAcgAABUIAQgAAG0gAaQByAGkAbgBnACAA
QQBnAGUAbgBjAHkAAAVCAEMAAAtVAHMAYQBnAGUAAAVCAEQAABFFAG4AZAAgAEQAYQB0AGUAAAVC
AEUAAAtUAGkAdABsAGUAAAVCAEYAAAtUAGEAYgBsAGUAAAVCAEcAAB1BAHMAcwBvAGMAaQBhAHQA
ZQAgAE4AYQBtAGUAAAVCAEgAAEt1AG4AZABlAHIAIAB0AGgAZQAgAEEAcABhAGMAaABlACAATABp
AGMAZQBuAHMAZQAsACAAVgBlAHIAcwBpAG8AbgAgADIALgAwAAAFQgBJAAAVUwB0AGEAcgB0ACAA
RABhAHQAZQAABUIASgAAQVAAcgBlAGYAZQByAHIAZQBkACAATgBhAG0AZQAgAGYAbwByACAARQBt
AGEAaQBsACAAQQBkAGQAcgBlAHMAcwAABUIASwAABUIATAAAG1QAZQBjAGgAIABQAHIAaQBvAHIA
aQB0AHkAAAVCAE0AADVBAEQARABMACAAQQBwAHAAbABpAGMAYQB0AGkAbwBuAHMAIABBAGYAZgBl
AGMAdABlAGQAAAVCAE4AABdDAGgAYQBuAGcAZQAgAFQAeQBwAGUAAAVCAE8AAClSAGUAbABlAGEA
cwBlAC8ASABvAHQAIABGAGkAeAAgAEQAYQB0AGUAAAVCAFAAACVBAGYAZgBpAGwAaQBhAHQAZQBk
ACAAVABpAGMAawBlAHQAcwAABUIAUQAAM1MAZQBjAHUAcgBpAHQAeQAgAFAAZQByAG0AaQBzAHMA
aQBvAG4AIABNAG8AZABlAGwAAAVCAFIAADNCAHUAcwBpAG4AZQBzAHMAIABBAG4AYQBsAHkAcwB0
ACAAQQBzAHMAaQBnAG4AZQBkAAAFQgBTAAAlRABlAHYAZQBsAG8AcABlAHIAIABBAHMAcwBpAGcA
bgBlAGQAAAVCAFQAACFSAGUAcQB1AGUAcwB0AG8AcgAgAEYAaQBsAHQAZQByAAAFQgBVAAAPUgBl
AGwAZQBhAHMAZQAABUIAVgAAPU8AcgBpAGcAaQBuAGEAbAAgAFQAYQByAGcAZQB0AGUAZAAgAFIA
ZQBsAGUAYQBzAGUAIABEAGEAdABlAAAFQgBXAAApUgBlAGwAZQBhAHMAZQAgAHQAbwAgAFAAcgBv
AGQAIABEAGEAdABlAAAFQgBYAAARRwByAG8AdQBwAGkAbgBnAAAFQgBZAAATQwBhAHMAZQAgAG4A
YQBtAGUAAAVCAFoAACdSAGUAcwBwAG8AbgBzAGUAIABEAHUAZQBCAHkAIABUAGkAbQBlAAAFQwBB
AAA7RgBpAHIAcwB0ACAAUgBlAHMAcABvAG4AcwBlACAATwB2AGUAcgBkAHUAZQAgAFMAdABhAHQA
dQBzAAB/UwBUAF8AYwBmADIAYQBkAGIAZQBmADAAOQAyADMANABmADEAOAA4ADYAMgAyADkAZgBj
ADgAMQA0AGQAYQBmAGEAMAA4AC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAAAFErIGP9P8RLpo7sEyloHK4ACImEXc2AgMyRCLd6XFYZNOCJ
AgYIBAUAAAAETwAAAAIGDgMGERUDBhIZBwYVEh0BEhQDIAABBAABAQ4HAAIBHQ4SIQcAAgIdDhIh
CwAFAR0OEiEODhAOMAAtAQ4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
Dg4ODgUAAQESEAUAAgEODgYAAhIZDg4EAAEODgUAAg4OAgUAARIhDgQAAQgOBgACDh0ODgUAAR0O
DgYAAwEODg4FAAIODg4FAAECERUDBhEMBAAAAAAEAQAAAAMGEhgEAAASGAQIABIYAwYSJQMGEikE
AAASJQQAABIpBQABARIpBAgAEiUECAASKQQgAQEOBCABAQg5AQAKU2NyaXB0TWFpbgMAVA4HVmVy
c2lvbgMxLjBUDglQdWJsaXNoZXIAVA4LRGVzY3JpcHRpb24ABCAAEl0EIAASYQUgARJlHAMgABwD
IAAOBCAAEm0GAAEScRF1ByACEnkOEnEEIAASfQUgABKAhQUgAgEOHAMgAAIEAAARFQQgAQ4OBQAB
Dh0OBCABHAgYBwkSIRIZEiESgIUSgIkdDhEVEoCFEoCJBAABAgMIBhUSgJUCAwIGAAESgKEOBCAB
CA4HFRKAlQIDAgUgAgEcGBMQAQIIFRKArQEeABUSgJUCHgACAwoBAwsQAQEIFRKArQEeAAMKAQ4H
AAQODg4ODgcAAgIRFREVBwACAg4QERUDIAAIBiADAQgICAkgBgEICAgICAgEIAEcDgUAAREVDgUA
AgIODgQAAQEILAcUERURFRKAoQgODh0OERUOEiESIRIhEiEIEoCFEoCJEoCFEoCJEoCFEoCJBgcC
ERURFQMHAQ4FIAIODg4FIAEOHQMIBwQODh0DHQMEIAARFQYAAw4ODg4FAAEOHRwGBwMOHB0cBSAA
EoDFCwcDEoC9EoDFEoDNBSACAQ4OBSABCBIZCQcDEoDREhkSGQwHBBIhEiESgIUSgIkEIAEDCAYV
Eh0BEhQJIAAVEYDZARMABxURgNkBEhQEIAATAA0HBBIUDg4VEYDZARIUBQAAEoDdBSABHQUOBSAB
AR0FCLA/X38R1Qo6BiABARKA6QUgAQEdDgQgAQECBCAAHQ4LBwQSgOUdDh0OHQ4EBwEdDgQgAQgD
BSACDggIBCABAQoDHRIQCDG/OFatNk41BSABARJxBiABHBKA6RAHBw4ICB0FEoDhEoDtHRIQAwAA
DgYHAg4SgM0GBwMODh0OBgABEoD5DgUgABKA6QcgAwEdBQgIBSAAEoD9GAcKEoD5Dh0FEoDpEoD9
EoChDhKAzQ4dDgcHBQgICAgIBAABDQ4FIAERFQ0JBwQRFQ4RFR0OAwAAAQwgBwEICAgICAgRgQkF
IAEBEwCApgdQFRIdARIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIU
EhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQS
FBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIUEhQSFBIU
EhQFIAASgRkHIAIBDhKBGQQHARIlBiABARGBIQgBAAIAAAAAAC8BACpTVF9jZjJhZGJlZjA5MjM0
ZjE4ODYyMjlmYzgxNGRhZmEwOC5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAA
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAJKYAAAAAAAAAAAAAPqYA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCmAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWMAAAPADAAAAAAAAAAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCIbE0YAAABAIhsTRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAAMAAw
ADAANABiADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
YwBmADIAYQBkAGIAZQBmADAAOQAyADMANABmADEAOAA4ADYAMgAyADkAZgBjADgAMQA0AGQAYQBm
AGEAMAA4AC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAA
MQAuADAALgA2ADIAMgAxAC4AMgA3ADcAOAA0AAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwATgBh
AG0AZQAAAFMAVABfAGMAZgAyAGEAZABiAGUAZgAwADkAMgAzADQAZgAxADgAOAA2ADIAMgA5AGYA
YwA4ADEANABkAGEAZgBhADAAOAAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwAZQBn
AGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEA
NgAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBjAGYAMgBh
AGQAYgBlAGYAMAA5ADIAMwA0AGYAMQA4ADgANgAyADIAOQBmAGMAOAAxADQAZABhAGYAYQAwADgA
LgBjAHMAcAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGMAZgAyAGEAZABiAGUAZgAwADkAMgAzADQAZgAxADgAOAA2ADIAMgA5AGYAYwA4ADEA
NABkAGEAZgBhADAAOAAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMgAyADEALgAyADcANwA4ADQAAAAAAEgADwABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMgAyADEALgAyADcANwA4ADQAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAwAAABQNgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Get latest tickets in Short Form (OLD)</DTS:Property>
<DTS:Property DTS:Name="DTSID">{92E3F204-FCCC-4DCC-AE36-C128A921128F}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_baf00a5a7a6647309eef174755a090b8" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString,User::ManageEngineAuthToken,User::ShortRequestWait" ReadWriteVariables="User::ListOfValidTickets"><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.IO;
using System.Text;
using System.Net;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;

namespace ST_baf00a5a7a6647309eef174755a090b8.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        #region Data
        public class request
        {
            public string workorderid { get; set; }
            public string complete { get; set; }
            public string status { get; set; }
            public string subject { get; set; }
            public string priority { get; set; }
            public string requester { get; set; }
            public string NotificationStatus { get; set; }
            public string Technician { get; set; }
            public DateTime duebytime { get; set; }
            public string LongRequestID { get; set; }
        }

        [DataContract]
        internal class RequestShortForm
        {
            [DataMember]
            internal string SUBJECT;

            [DataMember]
            internal string CREATEDTIME;

            [DataMember]
            internal string CREATEDBY;

            [DataMember]
            internal string ISOVERDUE;

            [DataMember]
            internal string PRIORITY;

            [DataMember]
            internal string REQUESTER;

            [DataMember]
            internal string DUEBYTIME;

            [DataMember]
            internal string WORKORDERID;

            [DataMember]
            internal string NOTIFICATIONSTATUS;

            [DataMember]
            internal string STATUS;

            [DataMember]
            internal string TECHNICIAN;

            [DataMember]
            internal string LONG_REQUESTID;
        };
        
        public static List<request> requests = new List<request>();
        public static string connectionString;
        private static string authToken;
        public static int shortRequestWait;
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
        public static List<string> tickets = new List<string>();
        #endregion

        public void Main()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            shortRequestWait = (int) Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();

            readNewShortFormRequests();
            Dts.Variables["ListOfValidTickets"].Value = tickets;
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private static void readNewShortFormRequests()
        {
            requests = new List<request>();

            // obsolete List<string> ids = new List<string>();
            using (SqlConnection connection = new SqlConnection(connectionString))
            // singular using (SqlCommand command = new SqlCommand("select * from Requests", connection))
            using (SqlCommand command = new SqlCommand("select * from Request", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string workorderid = reader["WorkOrderID"].ToString();
                        string complete = reader["HasFullInfo"].ToString();
                        string status = reader["Status"].ToString();
                        string subject = reader["Subject"].ToString();
                        string priority = reader["Priority"].ToString();
                        string NotificationStatus = reader["NotificationStatus"].ToString();
                        string Technician = reader["Technician"].ToString();
                        string requester = reader["Requester"].ToString();
                        string longrequestid = reader["LongRequestID"].ToString();
                        DateTime duebytime = Convert.ToDateTime(reader["DueByTime"].ToString());
                        //                        DateTime completed = Convert.ToDateTime(reader["CompletedTime"].ToString());
                        requests.Add(new request() { workorderid = workorderid, complete = complete, status = status, subject = subject, priority = priority, NotificationStatus = NotificationStatus, Technician = Technician, duebytime = duebytime, requester = requester, LongRequestID = longrequestid });

                        // ids.Add(reader["WorkOrderID"].ToString());
                    }
                }
            }

            int start = 0;
            int max = 100;
            while (readRequests(start, max))
            {
                start += max;
                System.Threading.Thread.Sleep(shortRequestWait);
            }
        }

        private static bool readRequests(int startAt, int max)
        {
            string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request", "?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_REQUESTS&INPUT_DATA=%7Boperation%3A%7BDetails%3A%7BFILTERBY%3AAll_Requests%2CFROM%3A" + startAt.ToString() + "%2CLIMIT%3A" + max.ToString() + "%7D%7D%7D");
            int first = json.IndexOf('[');
            int last = json.LastIndexOf(']');

            ////// Fast fail on end of list or failure //////
            if (first < 0)
                return false;

            if (json.IndexOf("\"totalRows\":0}") > 0)
                return false;

            // {"operation":{"name":"GET_REQUESTS","result":{"status":"Success","message":"Request Details fetched successfully"},"Details":[],"totalRows":0}}

            json = json.Substring(first, last - first + 1);

            ////// ServiceDesk's JSON is not so .net compatible, not that .net's json serializer can't do it, it just sucks at it //////
            json = json.Replace("\"NOTIFICATION STATUS\"", "\"NOTIFICATIONSTATUS\"");
            byte[] byteArray = Encoding.ASCII.GetBytes(json);
            MemoryStream stream = new MemoryStream(byteArray);
            stream.Position = 0;
            DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(RequestShortForm[]));
            RequestShortForm[] reqArray = (RequestShortForm[])serializer.ReadObject(stream);

            ////// Write them out //////
            foreach (RequestShortForm r in reqArray)
            {
                tickets.Add(r.WORKORDERID);
                bool found = false;
                foreach (request rq in requests)
                {
                    if (rq.workorderid == r.WORKORDERID)
                    {
                        found = true;
                        // see if different
                        if ((rq.priority != r.PRIORITY) ||
                            (rq.status != r.STATUS) ||
                            (rq.subject != r.SUBJECT) ||
                            (rq.requester != r.REQUESTER) ||
                            (rq.Technician != r.TECHNICIAN) ||
                            (rq.LongRequestID != r.LONG_REQUESTID) ||
                            (rq.NotificationStatus != r.NOTIFICATIONSTATUS))
                        //if  (rq.LongRequestID != r.LONG_REQUESTID)
                            updateShortRequestToDatabase(r);
                    }
                }

                if (!found)
                    writeShortRequestToDatabase(r);
            }

            return true;
        }


        private static void updateShortRequestToDatabase(RequestShortForm r)
        {
            try
            {
                // singular
                string sql = "update Request set ";

                // sql += "[Item]='" + Sanitize(r.ITEM) + "',";

                sql += "[Priority]='" + r.PRIORITY + "',";
                sql += "[Status]='" + r.STATUS + "',";
                sql += "[Subject]='" + Sanitize(r.SUBJECT) + "',";
                sql += "[Requester]='" + Sanitize(r.REQUESTER) + "',";
                sql += "[Technician]='" + r.TECHNICIAN + "',";
                sql += "[LongRequestID]='" + r.LONG_REQUESTID + "', ";
                sql += "[NotificationStatus]='" + r.NOTIFICATIONSTATUS + "',";
                sql += "[HasFullInfo]=0 ";

                sql += "WHERE WorkOrderID=" + r.WORKORDERID.ToString();

                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandText = sql;
                        command.ExecuteNonQuery();
                    }
                }

                //WriteLog(r.WORKORDERID, "UPDATE LONGID");
                WriteLog(r.WORKORDERID, "SHORT UPDATE");
            }
            catch (Exception ex)
            {
                System.Diagnostics.Trace.WriteLine("Exception updating " + r.WORKORDERID + System.Environment.NewLine + ex.ToString());
            }
        }

        private static void writeShortRequestToDatabase(RequestShortForm r)
        {
            try
            {
                // singular
                string sql = "insert into Request(";
                sql += "Subject,";
                sql += "CreatedTime,";
                sql += "CreatedBy,";
                sql += "IsOverdue,";
                sql += "Priority,";
                sql += "Requester,";
                sql += "DueByTime,";
                sql += "WorkOrderID,";
                sql += "NotificationStatus,";
                sql += "Status,";
                sql += "Technician,";
                sql += "LongRequestID";
                sql += ") VALUES (";
                sql += "'" + Sanitize(r.SUBJECT) + "',";
                sql += UnixTimeinMStoSQLTime(r.CREATEDTIME) + ",";
                sql += "'" + Sanitize(r.CREATEDBY) + "',";
                sql += ((r.ISOVERDUE.ToLower() == "true") ? "1" : "0") + ",";
                sql += "'" + r.PRIORITY + "',";
                sql += "'" + Sanitize(r.REQUESTER) + "',";
                sql += UnixTimeinMStoSQLTime(r.DUEBYTIME) + ",";
                sql += r.WORKORDERID + ",";
                sql += "'" + r.NOTIFICATIONSTATUS + "',";
                sql += "'" + r.STATUS + "',";
                sql += "'" + r.TECHNICIAN + "',";
                sql += "'" + r.LONG_REQUESTID + "')";

                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandText = sql;
                        //command.CommandText = "insert into Requests(WorkOrderID, Requester) VALUES('333', 'Scott Marcus')";
                        command.ExecuteNonQuery();
                    }
                }
                WriteLog(r.WORKORDERID, "SHORT INSERT");
            }
            catch (Exception ex)
            {
                System.Diagnostics.Trace.WriteLine("Exception inserting " + r.WORKORDERID + System.Environment.NewLine + ex.ToString());
            }

        }

        static void WriteLog(string workorderid, string action)
        {
            string sql = "insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), " + workorderid + ", '" + action + "', '')";
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

        static string GetData(string url, string Parameters)
        {
            try
            {
                WebRequest request = WebRequest.Create(url + Parameters);
                request.Method = "POST";
                string postData = "";
                byte[] byteArray = Encoding.UTF8.GetBytes(postData);
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = byteArray.Length;
                Stream dataStream = request.GetRequestStream();
                dataStream.Write(byteArray, 0, byteArray.Length);
                dataStream.Close();
                WebResponse response = request.GetResponse();
                Console.WriteLine(((HttpWebResponse)response).StatusDescription);
                dataStream = response.GetResponseStream();
                StreamReader reader = new StreamReader(dataStream);
                string responseFromServer = reader.ReadToEnd();
                reader.Close();
                dataStream.Close();
                response.Close();
                return responseFromServer;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.InnerException.ToString());
                return "";
            }
        }

        private static string Sanitize(string s)
        {
            if (s == null)
                return "";
            s = s.Replace("'", "''");
            s = s.Replace("\"\"\"", "");
            return s;
        }

        #region Unix Time with milliseconds Pacific Time Zone to a SQL date/time in Eastern Time
        private static string UnixTimeinMStoSQLTime(string unixtime)
        {
            if (unixtime == null)
                return "null";

            if (unixtime.ToLower() == "null")
                return "null";

            if (unixtime == "")
                return "null";

            DateTime ourTime = (UnixEpoch.AddMilliseconds(Convert.ToDouble(unixtime)));


            ourTime = ourTime.AddHours(-5);
            if (isThisTimeInDST(ourTime))
                ourTime = ourTime.AddHours(+1);

            string ourTimeString = "'" + ourTime.ToShortDateString() + " " + ourTime.ToShortTimeString() + "'";
            return ourTimeString;
        }

        private static bool isThisTimeInDST(DateTime day)
        {
            // Good to move this to a table!
            if (day >= new DateTime(2013, 3, 10, 2, 0, 0) && day <= new DateTime(2013, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2014, 3, 9, 2, 0, 0) && day <= new DateTime(2014, 11, 2, 2, 0, 0))
                return true;

            if (day >= new DateTime(2015, 3, 8, 2, 0, 0) && day <= new DateTime(2015, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2016, 3, 13, 2, 0, 0) && day <= new DateTime(2016, 11, 6, 2, 0, 0))
                return true;

            if (day >= new DateTime(2017, 3, 12, 2, 0, 0) && day <= new DateTime(2017, 11, 5, 2, 0, 0))
                return true;

            if (day >= new DateTime(2018, 3, 11, 2, 0, 0) && day <= new DateTime(2018, 11, 4, 2, 0, 0))
                return true;

            if (day >= new DateTime(2019, 3, 10, 2, 0, 0) && day <= new DateTime(2019, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2020, 3, 8, 2, 0, 0) && day <= new DateTime(2020, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2021, 3, 14, 2, 0, 0) && day <= new DateTime(2021, 11, 7, 2, 0, 0))
                return true;

            return false;

        }
        #endregion

    }
}]]></ProjectItem><ProjectItem Name="\st_baf00a5a7a6647309eef174755a090b8.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_baf00a5a7a6647309eef174755a090b8.csproj</RootNamespace>
    <AssemblyName>ST_baf00a5a7a6647309eef174755a090b8.csproj</AssemblyName>
    <ProjectGuid>{8ED750F6-A9F7-4242-A8F3-A828C677A424}</ProjectGuid>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.ServiceModel.Web">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ScriptTask</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties.Settings.get_Default():ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties.Sett" +
    "ings")]

namespace ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_baf00a5a7a6647309eef174755a090b8.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_baf00a5a7a6647309eef174755a090b8.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_baf00a5a7a6647309eef174755a090b8.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><BinaryItem Name="\bin\release\st_baf00a5a7a6647309eef174755a090b8.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMOpd1gAAAAAAAAAAOAAAiELAQgAADgAAAAIAAAAAAAADlYA
AAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALxVAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFDYAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
VQAAAAAAAEgAAAACAAUAuC8AAAQmAAABAAAAAAAAAAAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA0AAAoqEzADAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDgAACm8PAAAKcxAAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqAzACAJ0AAAAAAAAA
AigTAAAKbxQAAApygQAAcG8VAAAKbxYAAApvFwAACoAEAAAEAigTAAAKbxQAAApyowAAcG8VAAAK
bxYAAAqlHgAAAYAGAAAEAigTAAAKbxQAAApyxQAAcG8VAAAKbxYAAApvFwAACoAFAAAEKAYAAAYC
KBMAAApvFAAACnLxAABwbxUAAAp+CAAABG8YAAAKAigTAAAKFm8ZAAAKKgAAABswAwCsAQAAAgAA
EXMaAAAKgAMAAAR+BAAABHMbAAAKCnIXAQBwBnMcAAAKCwZvHQAACgdvHgAACgw4JAEAAAhyQwEA
cG8fAAAKbxcAAAoNCHJbAQBwbx8AAApvFwAAChMECHJzAQBwbx8AAApvFwAAChMFCHKBAQBwbx8A
AApvFwAAChMGCHKRAQBwbx8AAApvFwAAChMHCHKjAQBwbx8AAApvFwAAChMICHLJAQBwbx8AAApv
FwAAChMJCHLfAQBwbx8AAApvFwAAChMKCHLzAQBwbx8AAApvFwAAChMLCHIPAgBwbx8AAApvFwAA
CiggAAAKEwx+AwAABHMlAAAGEw0RDQlvEgAABhENEQRvFAAABhENEQVvFgAABhENEQZvGAAABhEN
EQdvGgAABhENEQhvHgAABhENEQlvIAAABhENEQxvIgAABhENEQpvHAAABhENEQtvJAAABhENbyEA
AAoIbyIAAAo60f7//94KCCwGCG8jAAAK3N4KBywGB28jAAAK3N4KBiwGBm8jAAAK3BYTDh9kEw8r
EREOEQ9YEw5+BgAABCgkAAAKEQ4RDygHAAAGLeQqQUwAAAIAAAAuAAAANgEAAGQBAAAKAAAAAAAA
AAIAAAAhAAAATwEAAHABAAAKAAAAAAAAAAIAAAAVAAAAZwEAAHwBAAAKAAAAAAAAABswBAARAgAA
AwAAEXIjAgBwHY0nAAABEwoRChZyjwIAcKIRChd+BQAABKIRChhyxQIAcKIRChkPACglAAAKohEK
GnKYAwBwohEKGw8BKCUAAAqiEQoccrADAHCiEQooJgAACigLAAAGCgYfW28nAAAKCwYfXW8oAAAK
DAcWLwIWKgZyxAMAcG8pAAAKFjECFioGBwgHWRdYbyoAAAoKBnLiAwBwcg4EAHBvKwAACgooLAAA
CgZvLQAACg0Jcy4AAAoTBBEEFmpvLwAACtACAAAbKA4AAApzMAAAChMFEQURBG8xAAAKdAIAABsT
BhEGEwsWEww4FwEAABELEQyaEwd+CAAABBEHex0AAARvMgAAChYTCH4DAAAEbzMAAAoTDTi+AAAA
Eg0oNAAAChMJEQlvEQAABhEHex0AAAQoNQAACjmdAAAAFxMIEQlvGQAABhEHexoAAAQoNgAACi1+
EQlvFQAABhEHex8AAAQoNgAACi1pEQlvFwAABhEHexYAAAQoNgAACi1UEQlvGwAABhEHexsAAAQo
NgAACi0/EQlvHwAABhEHeyAAAAQoNgAACi0qEQlvIwAABhEHeyEAAAQoNgAACi0VEQlvHQAABhEH
ex4AAAQoNgAACiwHEQcoCAAABhINKDcAAAo6Nv///94OEg3+FgQAABtvIwAACtwRCC0HEQcoCQAA
BhEMF1gTDBEMEQuOaT/e/v//FyoAAAABEAAAAgAUAdHlAQ4AAAAAGzAEAEgBAAAEAAARcjgEAHAK
BnJgBABwAnsaAAAEcnoEAHAoOAAACgoGcoAEAHACex8AAARyegQAcCg4AAAKCgZylgQAcAJ7FgAA
BCgMAAAGcnoEAHAoOAAACgoGcq4EAHACexsAAAQoDAAABnJ6BABwKDgAAAoKBnLKBABwAnsgAAAE
cnoEAHAoOAAACgoGcugEAHACeyEAAARyDAUAcCg4AAAKCgZyFAUAcAJ7HgAABHJ6BABwKDgAAAoK
BnJCBQBwKDkAAAoKBnJkBQBwAnsdAAAEbxcAAAooOgAACgp+BAAABHMbAAAKCwdvHQAACgdvOwAA
CgwIBm88AAAKCG89AAAKJt4KCCwGCG8jAAAK3N4KBywGB28jAAAK3AJ7HQAABHKKBQBwKAoAAAbe
Iw1ypAUAcAJ7HQAABCg+AAAKCW8XAAAKKDgAAAooPwAACt4AKkFMAAACAAAA7AAAABAAAAD8AAAA
CgAAAAAAAAACAAAA3wAAACkAAAAIAQAACgAAAAAAAAAAAAAAAAAAACQBAAAkAQAAIwAAADEAAAEb
MAQATAIAAAQAABFyzAUAcAoGcvYFAHAoOQAACgoGcggGAHAoOQAACgoGciIGAHAoOQAACgoGcjgG
AHAoOQAACgoGck4GAHAoOQAACgoGcmIGAHAoOQAACgoGcngGAHAoOQAACgoGco4GAHAoOQAACgoG
cqgGAHAoOQAACgoGctAGAHAoOQAACgoGcuAGAHAoOQAACgoGcvMBAHAoOQAACgoGcvgGAHAoOQAA
CgoGcg4HAHACexYAAAQoDAAABnJ6BABwKDgAAAoKBgJ7FwAABCgNAAAGchIHAHAoOgAACgoGcg4H
AHACexgAAAQoDAAABnJ6BABwKDgAAAoKBgJ7GQAABG9AAAAKchYHAHAoNQAACi0HciAHAHArBXIk
BwBwchIHAHAoOgAACgoGcg4HAHACexoAAARyegQAcCg4AAAKCgZyDgcAcAJ7GwAABCgMAAAGcnoE
AHAoOAAACgoGAnscAAAEKA0AAAZyEgcAcCg6AAAKCgYCex0AAARyEgcAcCg6AAAKCgZyDgcAcAJ7
HgAABHJ6BABwKDgAAAoKBnIOBwBwAnsfAAAEcnoEAHAoOAAACgoGcg4HAHACeyAAAARyegQAcCg4
AAAKCgZyDgcAcAJ7IQAABHIoBwBwKDgAAAoKfgQAAARzGwAACgsHbx0AAAoHbzsAAAoMCAZvPAAA
CghvPQAACibeCggsBghvIwAACtzeCgcsBgdvIwAACtwCex0AAARyLgcAcCgKAAAG3iMNckgHAHAC
ex0AAAQoPgAACglvFwAACig4AAAKKD8AAAreACpBTAAAAgAAAPABAAAQAAAAAAIAAAoAAAAAAAAA
AgAAAOMBAAApAAAADAIAAAoAAAAAAAAAAAAAAAAAAAAoAgAAKAIAACMAAAAxAAABGzADAG0AAAAF
AAARG40nAAABDQkWcnIHAHCiCRcCogkYcicIAHCiCRkDogkaci8IAHCiCSgmAAAKCn4EAAAEcxsA
AAoLB28dAAAKB287AAAKDAgGbzwAAAoIbz0AAAom3goILAYIbyMAAArc3goHLAYHbyMAAArcKgAA
AAEcAAACAEYAEFYACgAAAAACADkAKWIACgAAAAAbMAQAwgAAAAYAABECAyg5AAAKKEEAAAoKBnI9
CABwb0IAAApyRwgAcAsoQwAACgdvLQAACgwGckkIAHBvRAAACgYIjmlqb0UAAAoGb0YAAAoNCQgW
CI5pb0cAAAoJb0gAAAoGb0kAAAoTBBEEdDQAAAFvSgAACihLAAAKEQRvTAAACg0Jc00AAAoTBREF
b04AAAoTBhEFb08AAAoJb0gAAAoRBG9QAAAKEQYTCN4cEwcRB29RAAAKbxcAAAooSwAACnJHCABw
EwjeABEIKgAAARAAAAAAAACjowAcMQAAAb4CLQZyRwgAcCoCcg4HAHByjQgAcG8rAAAKEAACcpMI
AHByRwgAcG8rAAAKEAACKhMwAwCuAAAABwAAEQItBnKbCABwKgJvQAAACnKbCABwKDUAAAosBnKb
CABwKgJyRwgAcCg1AAAKLAZymwgAcCp+BwAABAwSAgIoUgAACihTAAAKChIAIwAAAAAAABTAKFQA
AAoKBigOAAAGLBESACMAAAAAAADwPyhUAAAKChuNJwAAAQ0JFnIOBwBwogkXEgAoVQAACqIJGHKl
CABwogkZEgAoVgAACqIJGnIOBwBwogkoJgAACgsHKgAAAzAIAMIBAAAAAAAAAiDdBwAAGR8KGBYW
c1cAAAooWAAACiwaAiDdBwAAHwsZGBYWc1cAAAooWQAACiwCFyoCIN4HAAAZHwkYFhZzVwAACihY
AAAKLBoCIN4HAAAfCxgYFhZzVwAACihZAAAKLAIXKgIg3wcAABkeGBYWc1cAAAooWAAACiwaAiDf
BwAAHwsXGBYWc1cAAAooWQAACiwCFyoCIOAHAAAZHw0YFhZzVwAACihYAAAKLBoCIOAHAAAfCxwY
FhZzVwAACihZAAAKLAIXKgIg4QcAABkfDBgWFnNXAAAKKFgAAAosGgIg4QcAAB8LGxgWFnNXAAAK
KFkAAAosAhcqAiDiBwAAGR8LGBYWc1cAAAooWAAACiwaAiDiBwAAHwsaGBYWc1cAAAooWQAACiwC
FyoCIOMHAAAZHwoYFhZzVwAACihYAAAKLBoCIOMHAAAfCxkYFhZzVwAACihZAAAKLAIXKgIg5AcA
ABkeGBYWc1cAAAooWAAACiwaAiDkBwAAHwsXGBYWc1cAAAooWQAACiwCFyoCIOUHAAAZHw4YFhZz
VwAACihYAAAKLBoCIOUHAAAfCx0YFhZzVwAACihZAAAKLAIXKhYqqnMaAAAKgAMAAAQgsgcAABcX
FhYWF3NaAAAKgAcAAARzWwAACoAIAAAEKh4CKFwAAAoqHgJ7DAAABCoiAgN9DAAABCoeAnsNAAAE
KiICA30NAAAEKh4Cew4AAAQqIgIDfQ4AAAQqHgJ7DwAABCoiAgN9DwAABCoeAnsQAAAEKiICA30Q
AAAEKh4CexEAAAQqIgIDfREAAAQqHgJ7EgAABCoiAgN9EgAABCoeAnsTAAAEKiICA30TAAAEKh4C
exQAAAQqIgIDfRQAAAQqHgJ7FQAABCoiAgN9FQAABCoeAigNAAAKKh4CKA0AAAoqGn4iAAAEKi5z
KAAABoAiAAAEKh4CKGAAAAoqAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHYyLjAuNTA3
MjcAAAAABQBsAAAAMAsAACN+AACcCwAAfA4AACNTdHJpbmdzAAAAABgaAACsCAAAI1VTAMQiAAAQ
AAAAI0dVSUQAAADUIgAAMAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAADsA
AAAHAAAAIgAAACkAAAAWAAAAYAAAAAIAAAA5AAAABwAAAAMAAAANAAAAGAAAAAQAAAABAAAACAAA
AAEAAAADAAAAAAAKAAEAAAAAAAYA7wDoAAoAPgEVAQYAWgHoAA4AdAFfAQYAnQGMAQYAzgG5AQYA
PwIkAgYAewLoAAYA9AbiBgYACwfiBgYAKAfiBgYARwfiBgYAYAfiBgYAeQfiBgYAlAfiBgYArwfi
BgYAyAfiBgYAAQjhBwYAIQjhBwYAUgg/CAYAbwjoAAYAdAjoAAYAmAjiBg4AxAiuCA4A3QiuCBIA
/wjyCAoADgkVARYAZwlHCRYAfwlHCQYApAnoABoA5QnPCRoA8wnPCRoAEQr+CRoAIwrPCRoAPwr+
CQYATAroAAYAaAroAAYAjQp8CgYAmgroAAYA2grOCgYAAAv2CgYADQv2Ch4AWws5CyIAkwt2Cx8A
sgsAABoACAz+CQYAMgzoAA4ASgw/CAYAWgzoAA4AdwxsDA4A3AxsDA4A9AxsDAYAGg3oAAYANA32
CgYAQQ32CgYA3w3oAAYA7A3hByIABw52CyIAHQ52CwAAAAABAAAAAAABAAEAAAAQADkAQwAFAAEA
AQABABAAeQCEAAkAAwAFAAMBAACvAAAADQAJABEAAgAQAL0AAAAFAAwAEQAFABAAxQAAAAUAFgAm
AAABEADWAEMAEQAiACcAEQCtARMAEQDaARcAFgBGAjkAFgBPAkEAEQBgAkEAFgBqAkQAMQCEAkcA
FgCOAksABgY6A0QAVoBCA3kAVoBKA3kAAQB8BEEAAQCZBEEAAQCzBEEAAQDLBEEAAQDkBEEAAQD+
BEEAAQAZBUEAAQA9BUEAAQBZBUcAAQB0BUEAAwAABkEAAwAIBkEAAwAUBkEAAwAeBkEAAwAoBkEA
AwAxBkEAAwA7BkEAAwBFBkEAAwBRBkEAAwBkBkEAAwBrBkEAAwB2BkEAEQCFBqQAUCAAAAAAgxjq
ARsAAQBYIAAAAACTCPABHwABAJEgAAAAAJMIBAIkAAEAmCAAAAAAkwgQAikAAQCgIAAAAACGAJYC
GwACAEwhAAAAAJEAmwJSAAIAUCMAAAAAkQC0AlYAAgCAJQAAAACRAMECXAAEACAnAAAAAJEA3gJc
AAUAxCkAAAAAkQD6AmIABgBcKgAAAACRAAMDaAAIADwrAAAAAJEACwNuAAoAbCsAAAAAkQAUA24A
CwAoLAAAAACRACoDcwAMACEuAAAAAIYY6gEbAA0A9i0AAAAAkRjYDVIADQApLgAAAACGCFIDhwAN
ADEuAAAAAIYIYgOLAA0AOi4AAAAAhghyA4cADgBCLgAAAACGCH8DiwAOAEsuAAAAAIYIjAOHAA8A
Uy4AAAAAhgiXA4sADwBcLgAAAACGCKIDhwAQAGQuAAAAAIYIrgOLABAAbS4AAAAAhgi6A4cAEQB1
LgAAAACGCMcDiwARAH4uAAAAAIYI1AOHABIAhi4AAAAAhgjiA4sAEgCPLgAAAACGCPADhwATAJcu
AAAAAIYIBwSLABMAoC4AAAAAhggeBIcAFACoLgAAAACGCC0EiwAUALEuAAAAAIYIPASQABUAuS4A
AAAAhghKBJUAFQDCLgAAAACGCFgEhwAWAMouAAAAAIYIagSLABYA0y4AAAAAhhjqARsAFwDbLgAA
AACGGOoBGwAXAOMuAAAAAJYIlQaoABcA9i4AAAAAhhjqARsAFwDqLgAAAACRGNgNUgAXAAAAAQCp
BgAAAQCvBgAAAgC3BgAAAQC7BgAAAQC7BgAAAQCTBQAAAgC9BgAAAQDEBgAAAgDIBgAAAQDTBgAA
AQDVBgAAAQDeBgAAAQCpBgAAAQCpBgAAAQCpBgAAAQCpBgAAAQCpBgAAAQCpBgAAAQCpBgAAAQCp
BgAAAQCpBgAAAQCpBkkA6gGLAFEA6gGLAFkA6gGLAGEA6gGLAGkA6gGLAHEA6gGLAHkA6gGLAIEA
6gGLAIkA6gGLAJEA6gGyAJkA6gEbAKEA6gEbAAkA6gEbAKkAhgi3AKkAoQi+ACkA6gHDAMEA6gHP
ANEA6gGLABEAIAkYAdkAcQkdAeEAiAkiAekAkQkoAQkAmwmHAOkAqgksAdkAtAmyAAwA6gEbAPkA
6gGLAAEB6gE4AQkBHgobAAEBMQo/ARkBiAlFASEBVApKAQwAXwpQARkBYwpWASkBdAobADEBlApa
AfEAmwmHADkBoQp5ATkBqAp/ATkBsAp/ATkBqAqEATkBvAqJATkBxgqPAUEB4wqVAUEB7QqbAUkB
6gGhAVEBFAunAVkB6gG5AWEBpwu/ARwAXwpQAQwAvQvMASQAywveATkB1wvjATkB4wvjASQA8QtW
ATkBoQoMAjkBoQpoADkBoQoUAvkA+gsbAnEBEgyLAHEBIgwhAnkBPgwlAoEBUAwpAjkBZAyHAJEB
ggxFApEBiQyLAEEBlAyVAZEBnQyLAJEBrQynAZEBvwxMAlEB0AxSAlEB1gwbAJEB6AxaAqEBBA2H
AKkBUAwpApkBIg1MArEB6gFgArkBTA2HALkB1gwbAJkB1gwbAIkBVg1nAiEBaQ2EAkEAcg2JAkEA
gg2JAkEAiw2HAEEAnQ2HAEEA6gGZAkEArw2jAkEAxQ2jAkEA6gGrAhwA6gEbABEA6gEbAMkB6gEb
ANEB6gEbANkB6gEbACEA6gEbAAgAKAB9AAgALACCACkAiwDVAC4AUwAFAy4AWwAOAy4ACwC4Ai4A
EwDoAi4AGwDoAi4AIwDoAi4AKwC4Ai4AMwDuAi4AOwDoAkMAYwCCAEkAiwDVAGMAkwDeAMMA8wKC
AIEB6wKCAKEB6wKCAMEB6wKCAOEB6wKCAAEC6wKCACAC6wKCACEC6wKCAEAC6wKCAEEC6wKCAGAC
6wKCAGEC6wKCAIAC6wKCAIEC6wKCAKAC6wKCAKEC6wKCAMAC6wKCAMEC+wKCAOAC6wKCAOEC+wKC
AAAD6wKCAAED+wKCACAD6wKCACED+wKCAEAD6wKCAEED+wKCAGAD6wKCAGED+wKCAIAD6wKCAIED
+wKCAKAD6wKCAKED+wKCAMAD6wKCAMED+wKCAOAD6wKCAOED+wKCAAAE6wKCAAEE+wKCACAE6wKC
ACEE+wKCAEAE6wKCAEEE6wKCAGAE6wKCAIAE6wKCAMoAXwHpAS4COgJtAo8CAgABAAUAAwAHAA0A
AACdAS8AAAAcAjQAAACTBZsAAACfBZsAAACoBZsAAACvBZsAAAC3BZsAAADABZsAAADKBZsAAADd
BZsAAADoBZ8AAADyBZsAAAChBq0AAgACAAMAAQAEAAUAAgADAAUAAgARAAcAAQASAAcAAgATAAkA
AQAUAAkAAQAWAAsAAgAVAAsAAgAXAA0AAQAYAA0AAgAZAA8AAQAaAA8AAQAcABEAAgAbABEAAgAd
ABMAAQAeABMAAgAfABUAAQAgABUAAQAiABcAAgAhABcAAgAjABkAAQAkABkAAgAnABsAMQGsAcYB
1gEEgAAAAQAAAE0YOU4AAAAAAACEAAAAAgAAAAAAAAAAAAAAAQDfAAAAAAAKAAAAAAAAAAAAAAAK
APYAAAAAAAIAAAAAAAAAAAAAAAEA6AAAAAAAAwAFAAAAAAAAAAAAAQDyCAAAAAAKAAAAAAAAAAAA
AAAKACgJAAAAAAIAAAAAAAAAAAAAAAEAwwkAAAAAAwAFAAAAAAAAAAAAsAEhCwAAAAADAAAAAAAA
AAAAAAABAHYLAAAAAAAAAAABAAAAMQ4AAAQAAwAFAAMABgADAAAAAAAAPE1vZHVsZT4AU1RfYmFm
MDBhNWE3YTY2NDczMDllZWYxNzQ3NTVhMDkwYjguY3Nwcm9qLmRsbABSZXNvdXJjZXMAU1RfYmFm
MDBhNWE3YTY2NDczMDllZWYxNzQ3NTVhMDkwYjguY3Nwcm9qLlByb3BlcnRpZXMAU2NyaXB0TWFp
bgBTVF9iYWYwMGE1YTdhNjY0NzMwOWVlZjE3NDc1NWEwOTBiOC5jc3Byb2oAU2NyaXB0UmVzdWx0
cwByZXF1ZXN0AFJlcXVlc3RTaG9ydEZvcm0AU2V0dGluZ3MAbXNjb3JsaWIAU3lzdGVtAE9iamVj
dABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBTeXN0ZW0uUmVzb3VyY2VzAFJl
c291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5m
bwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQBDdWx0dXJlAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQByZXF1
ZXN0cwBjb25uZWN0aW9uU3RyaW5nAGF1dGhUb2tlbgBzaG9ydFJlcXVlc3RXYWl0AERhdGVUaW1l
AFVuaXhFcG9jaAB0aWNrZXRzAE1haW4AcmVhZE5ld1Nob3J0Rm9ybVJlcXVlc3RzAHJlYWRSZXF1
ZXN0cwB1cGRhdGVTaG9ydFJlcXVlc3RUb0RhdGFiYXNlAHdyaXRlU2hvcnRSZXF1ZXN0VG9EYXRh
YmFzZQBXcml0ZUxvZwBHZXREYXRhAFNhbml0aXplAFVuaXhUaW1laW5NU3RvU1FMVGltZQBpc1Ro
aXNUaW1lSW5EU1QAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAZ2V0X3dvcmtvcmRlcmlkAHNldF93
b3Jrb3JkZXJpZABnZXRfY29tcGxldGUAc2V0X2NvbXBsZXRlAGdldF9zdGF0dXMAc2V0X3N0YXR1
cwBnZXRfc3ViamVjdABzZXRfc3ViamVjdABnZXRfcHJpb3JpdHkAc2V0X3ByaW9yaXR5AGdldF9y
ZXF1ZXN0ZXIAc2V0X3JlcXVlc3RlcgBnZXRfTm90aWZpY2F0aW9uU3RhdHVzAHNldF9Ob3RpZmlj
YXRpb25TdGF0dXMAZ2V0X1RlY2huaWNpYW4Ac2V0X1RlY2huaWNpYW4AZ2V0X2R1ZWJ5dGltZQBz
ZXRfZHVlYnl0aW1lAGdldF9Mb25nUmVxdWVzdElEAHNldF9Mb25nUmVxdWVzdElEADx3b3Jrb3Jk
ZXJpZD5rX19CYWNraW5nRmllbGQAPGNvbXBsZXRlPmtfX0JhY2tpbmdGaWVsZAA8c3RhdHVzPmtf
X0JhY2tpbmdGaWVsZAA8c3ViamVjdD5rX19CYWNraW5nRmllbGQAPHByaW9yaXR5PmtfX0JhY2tp
bmdGaWVsZAA8cmVxdWVzdGVyPmtfX0JhY2tpbmdGaWVsZAA8Tm90aWZpY2F0aW9uU3RhdHVzPmtf
X0JhY2tpbmdGaWVsZAA8VGVjaG5pY2lhbj5rX19CYWNraW5nRmllbGQAPGR1ZWJ5dGltZT5rX19C
YWNraW5nRmllbGQAPExvbmdSZXF1ZXN0SUQ+a19fQmFja2luZ0ZpZWxkAHdvcmtvcmRlcmlkAGNv
bXBsZXRlAHN0YXR1cwBzdWJqZWN0AHByaW9yaXR5AHJlcXVlc3RlcgBOb3RpZmljYXRpb25TdGF0
dXMAVGVjaG5pY2lhbgBkdWVieXRpbWUATG9uZ1JlcXVlc3RJRABTVUJKRUNUAENSRUFURURUSU1F
AENSRUFURURCWQBJU09WRVJEVUUAUFJJT1JJVFkAUkVRVUVTVEVSAERVRUJZVElNRQBXT1JLT1JE
RVJJRABOT1RJRklDQVRJT05TVEFUVVMAU1RBVFVTAFRFQ0hOSUNJQU4ATE9OR19SRVFVRVNUSUQA
ZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAdmFsdWUAc3RhcnRBdABtYXgAcgBh
Y3Rpb24AdXJsAFBhcmFtZXRlcnMAcwB1bml4dGltZQBkYXkAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVt
LkFkZEluAEFkZEluQXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0
LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFy
aWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5n
AEludDMyAHNldF9WYWx1ZQBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5T
cWxDbGllbnQAU3FsQ29ubmVjdGlvbgBTcWxDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNv
bm5lY3Rpb24AT3BlbgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJEYXRhUmVhZGVyAENv
bnZlcnQAVG9EYXRlVGltZQBBZGQAUmVhZABJRGlzcG9zYWJsZQBEaXNwb3NlAFN5c3RlbS5UaHJl
YWRpbmcAVGhyZWFkAFNsZWVwAFN0cmluZwBDb25jYXQASW5kZXhPZgBMYXN0SW5kZXhPZgBTdWJz
dHJpbmcAUmVwbGFjZQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfQVNDSUkAR2V0Qnl0ZXMAU3lz
dGVtLklPAE1lbW9yeVN0cmVhbQBTdHJlYW0Ac2V0X1Bvc2l0aW9uAFN5c3RlbS5TZXJ2aWNlTW9k
ZWwuV2ViAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uSnNvbgBEYXRhQ29udHJhY3RKc29u
U2VyaWFsaXplcgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAFhtbE9iamVjdFNlcmlhbGl6
ZXIAUmVhZE9iamVjdABFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAb3BfRXF1
YWxpdHkAb3BfSW5lcXVhbGl0eQBNb3ZlTmV4dABDcmVhdGVDb21tYW5kAERiQ29tbWFuZABzZXRf
Q29tbWFuZFRleHQARXhlY3V0ZU5vblF1ZXJ5AEVudmlyb25tZW50AGdldF9OZXdMaW5lAFRyYWNl
AFdyaXRlTGluZQBFeGNlcHRpb24AVG9Mb3dlcgBTeXN0ZW0uTmV0AFdlYlJlcXVlc3QAQ3JlYXRl
AHNldF9NZXRob2QAZ2V0X1VURjgAc2V0X0NvbnRlbnRUeXBlAHNldF9Db250ZW50TGVuZ3RoAEdl
dFJlcXVlc3RTdHJlYW0AV3JpdGUAQ2xvc2UAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UASHR0cFdl
YlJlc3BvbnNlAGdldF9TdGF0dXNEZXNjcmlwdGlvbgBDb25zb2xlAEdldFJlc3BvbnNlU3RyZWFt
AFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFJlYWRUb0VuZABnZXRfSW5uZXJFeGNlcHRpb24AVG9E
b3VibGUAQWRkTWlsbGlzZWNvbmRzAEFkZEhvdXJzAFRvU2hvcnREYXRlU3RyaW5nAFRvU2hvcnRU
aW1lU3RyaW5nAG9wX0dyZWF0ZXJUaGFuT3JFcXVhbABvcF9MZXNzVGhhbk9yRXF1YWwALmNjdG9y
AERhdGVUaW1lS2luZABDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEYXRhQ29udHJhY3RBdHRy
aWJ1dGUARGF0YU1lbWJlckF0dHJpYnV0ZQBTVF9iYWYwMGE1YTdhNjY0NzMwOWVlZjE3NDc1NWEw
OTBiOC5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAf1MAVABfAGIAYQBm
ADAAMABhADUAYQA3AGEANgA2ADQANwAzADAAOQBlAGUAZgAxADcANAA3ADUANQBhADAAOQAwAGIA
OAAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAhQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAIVMAaABvAHIAdABSAGUAcQB1AGUA
cwB0AFcAYQBpAHQAACtNAGEAbgBhAGcAZQBFAG4AZwBpAG4AZQBBAHUAdABoAFQAbwBrAGUAbgAA
JUwAaQBzAHQATwBmAFYAYQBsAGkAZABUAGkAYwBrAGUAdABzAAArcwBlAGwAZQBjAHQAIAAqACAA
ZgByAG8AbQAgAFIAZQBxAHUAZQBzAHQAABdXAG8AcgBrAE8AcgBkAGUAcgBJAEQAABdIAGEAcwBG
AHUAbABsAEkAbgBmAG8AAA1TAHQAYQB0AHUAcwAAD1MAdQBiAGoAZQBjAHQAABFQAHIAaQBvAHIA
aQB0AHkAACVOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBTAHQAYQB0AHUAcwAAFVQAZQBjAGgAbgBp
AGMAaQBhAG4AABNSAGUAcQB1AGUAcwB0AGUAcgAAG0wAbwBuAGcAUgBlAHEAdQBlAHMAdABJAEQA
ABNEAHUAZQBCAHkAVABpAG0AZQAAa2gAdAB0AHAAcwA6AC8ALwBzAGQAcABvAG4AZABlAG0AYQBu
AGQALgBtAGEAbgBhAGcAZQBlAG4AZwBpAG4AZQAuAGMAbwBtAC8AYQBwAGkALwBqAHMAbwBuAC8A
cgBlAHEAdQBlAHMAdAAANT8AcwBjAG8AcABlAD0AcwBkAHAAbwBkAGEAcABpACYAYQB1AHQAaAB0
AG8AawBlAG4APQAAgNEmAE8AUABFAFIAQQBUAEkATwBOAF8ATgBBAE0ARQA9AEcARQBUAF8AUgBF
AFEAVQBFAFMAVABTACYASQBOAFAAVQBUAF8ARABBAFQAQQA9ACUANwBCAG8AcABlAHIAYQB0AGkA
bwBuACUAMwBBACUANwBCAEQAZQB0AGEAaQBsAHMAJQAzAEEAJQA3AEIARgBJAEwAVABFAFIAQgBZ
ACUAMwBBAEEAbABsAF8AUgBlAHEAdQBlAHMAdABzACUAMgBDAEYAUgBPAE0AJQAzAEEAABclADIA
QwBMAEkATQBJAFQAJQAzAEEAABMlADcARAAlADcARAAlADcARAAAHSIAdABvAHQAYQBsAFIAbwB3
AHMAIgA6ADAAfQAAKyIATgBPAFQASQBGAEkAQwBBAFQASQBPAE4AIABTAFQAQQBUAFUAUwAiAAAp
IgBOAE8AVABJAEYASQBDAEEAVABJAE8ATgBTAFQAQQBUAFUAUwAiAAAndQBwAGQAYQB0AGUAIABS
AGUAcQB1AGUAcwB0ACAAcwBlAHQAIAAAGVsAUAByAGkAbwByAGkAdAB5AF0APQAnAAEFJwAsAAEV
WwBTAHQAYQB0AHUAcwBdAD0AJwABF1sAUwB1AGIAagBlAGMAdABdAD0AJwABG1sAUgBlAHEAdQBl
AHMAdABlAHIAXQA9ACcAAR1bAFQAZQBjAGgAbgBpAGMAaQBhAG4AXQA9ACcAASNbAEwAbwBuAGcA
UgBlAHEAdQBlAHMAdABJAEQAXQA9ACcAAQcnACwAIAABLVsATgBvAHQAaQBmAGkAYwBhAHQAaQBv
AG4AUwB0AGEAdAB1AHMAXQA9ACcAASFbAEgAYQBzAEYAdQBsAGwASQBuAGYAbwBdAD0AMAAgAAAl
VwBIAEUAUgBFACAAVwBvAHIAawBPAHIAZABlAHIASQBEAD0AABlTAEgATwBSAFQAIABVAFAARABB
AFQARQAAJ0UAeABjAGUAcAB0AGkAbwBuACAAdQBwAGQAYQB0AGkAbgBnACAAAClpAG4AcwBlAHIA
dAAgAGkAbgB0AG8AIABSAGUAcQB1AGUAcwB0ACgAABFTAHUAYgBqAGUAYwB0ACwAABlDAHIAZQBh
AHQAZQBkAFQAaQBtAGUALAAAFUMAcgBlAGEAdABlAGQAQgB5ACwAABVJAHMATwB2AGUAcgBkAHUA
ZQAsAAATUAByAGkAbwByAGkAdAB5ACwAABVSAGUAcQB1AGUAcwB0AGUAcgAsAAAVRAB1AGUAQgB5
AFQAaQBtAGUALAAAGVcAbwByAGsATwByAGQAZQByAEkARAAsAAAnTgBvAHQAaQBmAGkAYwBhAHQA
aQBvAG4AUwB0AGEAdAB1AHMALAAAD1MAdABhAHQAdQBzACwAABdUAGUAYwBoAG4AaQBjAGkAYQBu
ACwAABUpACAAVgBBAEwAVQBFAFMAIAAoAAADJwABAywAAAl0AHIAdQBlAAADMAAAAzEAAAUnACkA
ARlTAEgATwBSAFQAIABJAE4AUwBFAFIAVAAAKUUAeABjAGUAcAB0AGkAbwBuACAAaQBuAHMAZQBy
AHQAaQBuAGcAIAAAgLNpAG4AcwBlAHIAdAAgAGkAbgB0AG8AIABJAG0AcABvAHIAdABIAGkAcwB0
AG8AcgB5ACAAKABbAEQAYQB0AGUAXQAsACAAWwBXAG8AcgBrAE8AcgBkAGUAcgBJAEQAXQAsACAA
WwBBAGMAdABpAG8AbgBdACwAIABbAEMAbwBtAG0AZQBuAHQAXQApACAAVgBBAEwAVQBFAFMAKABH
AEUAVABEAEEAVABFACgAKQAsACAAAAcsACAAJwABDScALAAgACcAJwApAAEJUABPAFMAVAAAAQBD
YQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUAcgBsAGUAbgBj
AG8AZABlAGQAAQUnACcAAQciACIAIgAACW4AdQBsAGwAAAMgAAAAAADuW49wgd5rRL6vKPKPMgMl
AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZ
BwYVEh0BEhQCBg4CBggDBhEhBgYVEh0BDgMAAAEFAAICCAgFAAEBEhgFAAIBDg4FAAIODg4EAAEO
DgUAAQIRIQMGERAEAAAAAAQBAAAAAyAADgQgAQEOBCAAESEFIAEBESEDKAAOBCgAESEDBhIcBAAA
EhwECAASHAQgAQEIBgABElURWQQgABJdBiACAQ4SXQQHARIVBSABARFlCAEAAgAAAAAAOQEAClNj
cmlwdE1haW4DAFQOB1ZlcnNpb24DMS4wVA4JUHVibGlzaGVyAFQOC0Rlc2NyaXB0aW9uAAQgABJt
BCAAEnEFIAESdRwDIAAcBCABARwGFRIdARIUBiACAQ4SfQUgABKAiQQgARwOBQABESEOBSABARMA
AyAAAgQAAQEIGQcQEn0SgIESgIkODg4ODg4ODg4RIRIUCAgFAAEOHQ4EIAEIAwQgAQgOBSACDggI
BSACDg4OBQAAEoChBSABHQUOBSABAR0FBCABAQoDHRIYCDG/OFatNk41BSABARJVBiABHBKAqQUV
Eh0BDgkgABURgLUBEwAHFRGAtQESFAQgABMABQACAg4OIgcODggIHQUSgKUSgK0dEhgSGAISFB0O
HRIYCBURgLUBEhQHAAQODg4ODgYAAw4ODg4FIAASgIEDIAAIAwAADgQAAQEOCwcEDhJ9EoCBEoDF
CgcEDhJ9EoCBHQ4GAAESgMkOBSAAEoCpByADAR0FCAgFIAASgM0GIAEBEoCpBSAAEoDFFgcJEoDJ
Dh0FEoCpEoDNEoDZDhKAxQ4EAAENDgUgAREhDQkHBBEhDhEhHQ4JIAYBCAgICAgIBwACAhEhESEM
IAcBCAgICAgIEYDhLwEAKlNUX2JhZjAwYTVhN2E2NjQ3MzA5ZWVmMTc0NzU1YTA5MGI4LmNzcHJv
agAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE1AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBAAAA5FUAAAAAAAAAAAAA/lUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
APBVAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACBAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADwAwAAAAAAAAAA
AADwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAOU5N
GAAAAQA5Tk0YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEUAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAALAMAAAEAMAAwADAAMAAwADQAYgAwAAAAgAArAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGIAYQBmADAAMABhADUAYQA3
AGEANgA2ADQANwAzADAAOQBlAGUAZgAxADcANAA3ADUANQBhADAAOQAwAGIAOAAuAGMAcwBwAHIA
bwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADIAMQAu
ADIAMAAwADIANQAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBiAGEA
ZgAwADAAYQA1AGEANwBhADYANgA0ADcAMwAwADkAZQBlAGYAMQA3ADQANwA1ADUAYQAwADkAMABi
ADgALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAACIAC8AAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYgBhAGYAMAAwAGEANQBhADcAYQA2ADYA
NAA3ADMAMAA5AGUAZQBmADEANwA0ADcANQA1AGEAMAA5ADAAYgA4AC4AYwBzAHAAcgBvAGoALgBk
AGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBiAGEAZgAwADAA
YQA1AGEANwBhADYANgA0ADcAMwAwADkAZQBlAGYAMQA3ADQANwA1ADUAYQAwADkAMABiADgALgBj
AHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADIAMgAxAC4AMgAwADAAMgA1AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADIAMgAxAC4AMgAwADAAMgA1AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAEDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem><Breakpoint Name="ScriptMain.cs, line 293 character 24" Enabled="True" Function="ST_baf00a5a7a6647309eef174755a090b8.csproj.ScriptMain.writeShortRequestToDatabase(RequestShortForm r)" File="\scriptmain.cs" Line="293" Column="24" Condition="" ConditionType="1" Language="C#" HitCount="1" HitCountType="1"/><Breakpoint Name="ScriptMain.cs, line 242 character 24" Enabled="True" Function="ST_baf00a5a7a6647309eef174755a090b8.csproj.ScriptMain.updateShortRequestToDatabase(RequestShortForm r)" File="\scriptmain.cs" Line="242" Column="24" Condition="" ConditionType="1" Language="C#" HitCount="1" HitCountType="1"/></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Get full ticket data where missing (OLD)</DTS:Property>
<DTS:Property DTS:Name="DTSID">{4B221BA8-B49C-4C67-B552-A35F303C5BCC}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_67fe68068acf483fbfea7cd04372498e" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString,User::ManageEngineAuthToken,User::ShortRequestWait" ReadWriteVariables=""><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.IO;
using System.Text;
using System.Net;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;

namespace ST_67fe68068acf483fbfea7cd04372498e.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        #region Data Contract class for Long form of Request
        [DataContract]
        internal class RequestLongForm
        {
            [DataMember]
            internal string WORKORDERID;

            [DataMember]
            internal string REQUESTER;

            [DataMember]
            internal string REQUESTEREMAIL;

            [DataMember]
            internal string CREATEDBY;

            [DataMember]
            internal string CREATEDTIME;

            [DataMember]
            internal string DUEBYTIME;

            [DataMember]
            internal string RESPONDEDTIME;

            [DataMember]
            internal string COMPLETEDTIME;

            [DataMember]
            internal string SHORTDESCRIPTION;

            [DataMember]
            internal string TIMESPENTONREQ;

            [DataMember]
            internal string SUBJECT;

            [DataMember]
            internal string REQUESTTEMPLATE;

            [DataMember]
            internal string TEMPLATEID;

            [DataMember]
            internal string SLA;

            [DataMember]
            internal string ASSET;

            [DataMember]
            internal string DEPARTMENT;

            [DataMember]
            internal string SITE;

            [DataMember]
            internal string CATEGORY;

            [DataMember]
            internal string SUBCATEGORY;

            [DataMember]
            internal string ITEM;

            [DataMember]
            internal string TECHNICIAN;

            [DataMember]
            internal string STATUS;

            [DataMember]
            internal string PRIORITY;

            [DataMember]
            internal string REQUESTTYPE;

            [DataMember]
            internal string HASATTACHMENTS;

            [DataMember]
            internal string HASNOTES;

            [DataMember]
            internal string HASCONVERSATION;

            [DataMember]
            internal string GROUP;

            [DataMember]
            internal string UDF_CHAR1;

            [DataMember]
            internal string UDF_CHAR2;

            [DataMember]
            internal string UDF_CHAR3;

            [DataMember]
            internal string UDF_CHAR4;

            [DataMember]
            internal string UDF_CHAR5;

            [DataMember]
            internal string UDF_CHAR6;

            [DataMember]
            internal string UDF_CHAR7;

            [DataMember]
            internal string UDF_CHAR8;

            [DataMember]
            internal string UDF_CHAR9;

            [DataMember]
            internal string UDF_CHAR10;

            [DataMember]
            internal string UDF_CHAR11;

            [DataMember]
            internal string UDF_CHAR12;

            [DataMember]
            internal string UDF_CHAR13;

            [DataMember]
            internal string UDF_CHAR14;

            [DataMember]
            internal string UDF_CHAR15;

            [DataMember]
            internal string UDF_CHAR16;

            [DataMember]
            internal string UDF_CHAR17;

            [DataMember]
            internal string UDF_CHAR18;

            [DataMember]
            internal string UDF_CHAR19;

            [DataMember]
            internal string UDF_CHAR20;

            [DataMember]
            internal string UDF_CHAR21;

            [DataMember]
            internal string UDF_CHAR22;

            [DataMember]
            internal string UDF_CHAR23;

            [DataMember]
            internal string UDF_CHAR24;

            [DataMember]
            internal string UDF_DATE1;

            [DataMember]
            internal string UDF_DATE2;

            [DataMember]
            internal string UDF_DATE3;

            [DataMember]
            internal string UDF_DATE4;
        }
        #endregion

        //public static List<request> requests = new List<request>();
        public static string connectionString;
        private static string authToken;
        public static int shortRequestWait;
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);


        public void Main()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            shortRequestWait = (int)Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();

            updateRequestsWithFullData();

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private static void updateRequestsWithFullData()
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            // singular
            using (SqlCommand command = new SqlCommand("select * from Request where deleted=0", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string workorderid = reader["WorkOrderID"].ToString();
                        string complete = reader["HasFullInfo"].ToString();
                        if (complete != "True")
                        {
                            readLongFormRequest(workorderid);
                            System.Threading.Thread.Sleep(100);
                        }
                    }
                }
            }
        }

        private static void updateReleaseManagementTickets()
        {
            string sqlType1 = "select WorkOrderID, Requester, CreatedBy, CreatedTime, DueByTime, RespondedTime, CompletedTime,  SLA, Priority, Department, Subject, Technician, ServiceGroup, RequestType, RequestTemplate,  UDF_CHAR4 as UDFTemplate, Category, Subcategory, Item, UDF_CHAR16 as OrigTarRelDate, UDF_CHAR10 as RelToProd from request ";
            sqlType1 += "where ";
            sqlType1 += "(ServiceGroup='Release Management' ";
            sqlType1 += "or RequestTemplate = 'Release Management' ";
            sqlType1 += "or Category = 'Release Management' ";
            sqlType1 += "or UDF_CHAR4='Release Management') ";

            using (SqlConnection connection = new SqlConnection(connectionString))
            // singular


            using (SqlCommand command = new SqlCommand(sqlType1, connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string workorderid = reader["WorkOrderID"].ToString();
                        {
                            readLongFormRequest(workorderid);
                            System.Threading.Thread.Sleep(400);
                        }
                    }
                }
            }
        }


        private static void readLongFormRequest(string s)
        {
            string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_REQUEST");
            // int first = json.IndexOf("{\"name\"");

            // int first = json.LastIndexOf("{");
            int first = json.IndexOf("\"Details\":");
            int last = json.LastIndexOf('}');

            ////// Fast fail on end of list or failure //////
            if (first < 0)
                return;

            first += 10;
            json = "[" + json.Substring(first, last - first + 1) + "]";
            json = json.Replace("}}}]", "}]");
            ////// ServiceDesk's JSON is not so .net compatible, not that .net's json serializer can't do it, it just sucks at it //////
            byte[] byteArray = Encoding.ASCII.GetBytes(json);
            MemoryStream stream = new MemoryStream(byteArray);
            stream.Position = 0;
            DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(RequestLongForm[]));
            RequestLongForm[] req = (RequestLongForm[])serializer.ReadObject(stream);

            updateLongRequestToDatabase(req[0]);
        }

        private static void updateLongRequestToDatabase(RequestLongForm r)
        {
            //string completeTime = (r.COMPLETEDTIME.Length < 10) ? "null" : ("'" + (UnixEpoch.AddMilliseconds(Convert.ToDouble(r.COMPLETEDTIME))).ToShortTimeString() + "'");
            //string respondedTime = (r.RESPONDEDTIME.Length < 10) ? "null" : ("'" + (UnixEpoch.AddMilliseconds(Convert.ToDouble(r.RESPONDEDTIME))).ToShortTimeString() +"'");
            //string dueByTime = (r.DUEBYTIME.Length < 10) ? "null" : "'" + (UnixEpoch.AddMilliseconds(Convert.ToDouble(r.DUEBYTIME))).ToShortTimeString() + "'";

            // singular
            string sql = "update Request set ";

            sql += "[RequesterEmail]='" + Sanitize(r.REQUESTEREMAIL) + "',";
            sql += "[RespondedTime]=" + UnixTimeinMStoSQLTime(r.RESPONDEDTIME) + ",";
            sql += "[CompletedTime]=" + UnixTimeinMStoSQLTime(r.COMPLETEDTIME) + ",";
            sql += "[ShortDescription]='" + Sanitize(r.SHORTDESCRIPTION) + "',";
            sql += "[TimeSpentOnReqInMinutes]=" + ConvertHrsMnsStringToMinutes(r.TIMESPENTONREQ) + ",";
            sql += "[RequestTemplate]='" + r.REQUESTTEMPLATE + "',";
            sql += "[TemplateID]='" + r.TEMPLATEID + "',";
            sql += "[SLA]='" + r.SLA + "',";
            sql += "[Asset]='" + Sanitize(r.ASSET) + "',";
            sql += "[Department]='" + r.DEPARTMENT + "',";
            sql += "[Site]='" + Sanitize(r.SITE) + "',";
            sql += "[Category]='" + r.CATEGORY + "',";
            sql += "[Subcategory]='" + r.SUBCATEGORY + "',";
            sql += "[Item]='" + Sanitize(r.ITEM) + "',";
            sql += "[RequestType]='" + r.REQUESTTYPE + "',";
            sql += "[HasAttachments]=" + ((r.HASATTACHMENTS.ToLower() == "true") ? "1" : "0") + ",";
            sql += "[HasNotes]=" + ((r.HASNOTES.ToLower() == "true") ? "1" : "0") + ",";
            sql += "[HasConversation]=" + ((r.HASCONVERSATION.ToLower() == "true") ? "1" : "0") + ",";
            sql += "[ServiceGroup]='" + r.GROUP + "', ";
            sql += "[UDF_CHAR1]='" + Sanitize(r.UDF_CHAR1) + "',";
            sql += "[UDF_CHAR2]='" + Sanitize(r.UDF_CHAR2) + "',";
            sql += "[UDF_CHAR3]='" + Sanitize(r.UDF_CHAR3) + "',";
            sql += "[UDF_CHAR4]='" + Sanitize(r.UDF_CHAR4) + "',";
            sql += "[UDF_CHAR5]='" + Sanitize(r.UDF_CHAR5) + "',";
            sql += "[UDF_CHAR6]='" + Sanitize(r.UDF_CHAR6) + "',";
            sql += "[UDF_CHAR7]='" + Sanitize(r.UDF_CHAR7) + "',";
            sql += "[UDF_CHAR8]='" + Sanitize(r.UDF_CHAR8) + "',";
            sql += "[UDF_CHAR9]='" + Sanitize(r.UDF_CHAR9) + "',";
            sql += "[UDF_CHAR10]='" + Sanitize(r.UDF_CHAR10) + "',";
            sql += "[UDF_CHAR11]='" + Sanitize(r.UDF_CHAR11) + "',";
            sql += "[UDF_CHAR12]='" + Sanitize(r.UDF_CHAR12) + "',";
            sql += "[UDF_CHAR13]='" + Sanitize(r.UDF_CHAR13) + "',";
            sql += "[UDF_CHAR14]='" + Sanitize(r.UDF_CHAR14) + "',";
            sql += "[UDF_CHAR15]='" + Sanitize(r.UDF_CHAR15) + "',";
            sql += "[UDF_CHAR16]='" + Sanitize(r.UDF_CHAR16) + "',";
            sql += "[UDF_CHAR17]='" + Sanitize(r.UDF_CHAR17) + "',";
            sql += "[UDF_CHAR18]='" + Sanitize(r.UDF_CHAR18) + "',";
            sql += "[UDF_CHAR19]='" + Sanitize(r.UDF_CHAR19) + "',";
            sql += "[UDF_CHAR20]='" + Sanitize(r.UDF_CHAR20) + "',";
            sql += "[UDF_CHAR21]='" + Sanitize(r.UDF_CHAR21) + "',";
            sql += "[UDF_CHAR22]='" + Sanitize(r.UDF_CHAR22) + "',";
            sql += "[UDF_CHAR23]='" + Sanitize(r.UDF_CHAR23) + "',";
            sql += "[UDF_CHAR24]='" + Sanitize(r.UDF_CHAR24) + "',";
            sql += "[UDF_DATE1]=" + UnixTimeinMStoSQLTime(r.UDF_DATE1) + ",";
            sql += "[UDF_DATE2]=" + UnixTimeinMStoSQLTime(r.UDF_DATE2) + ",";
            sql += "[UDF_DATE3]=" + UnixTimeinMStoSQLTime(r.UDF_DATE3) + ",";
            sql += "[UDF_DATE4]=" + UnixTimeinMStoSQLTime(r.UDF_DATE4) + ",";
            sql += "[HasFullInfo]=1 ";
            sql += "WHERE WorkOrderID=" + r.WORKORDERID.ToString();

            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    //command.CommandText = "insert into Requests(WorkOrderID, Requester) VALUES('333', 'Scott Marcus')";

                    //using (System.IO.StreamWriter outputfile = new System.IO.StreamWriter(@"c:\docs1\test.sql",true))
                    //{
                    //    outputfile.WriteLine(sql);
                    //    outputfile.WriteLine("");

                    //}
                    command.ExecuteNonQuery();
                }
            }
            WriteLog(r.WORKORDERID, "UPDATE FULL");
        }

        static string GetData(string url, string Parameters)
        {
            try
            {
                WebRequest request = WebRequest.Create(url + Parameters);
                request.Method = "POST";
                string postData = "";
                byte[] byteArray = Encoding.UTF8.GetBytes(postData);
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = byteArray.Length;
                Stream dataStream = request.GetRequestStream();
                dataStream.Write(byteArray, 0, byteArray.Length);
                dataStream.Close();
                WebResponse response = request.GetResponse();
                Console.WriteLine(((HttpWebResponse)response).StatusDescription);
                dataStream = response.GetResponseStream();
                StreamReader reader = new StreamReader(dataStream);
                string responseFromServer = reader.ReadToEnd();
                reader.Close();
                dataStream.Close();
                response.Close();
                return responseFromServer;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.InnerException.ToString());
                return "";
            }
        }

        private static string Sanitize(string s)
        {
            if (s == null)
                return "";
            s = s.Replace("'", "''");
            s = s.Replace("\"\"\"", "");
            return s;
        }

        static void WriteLog(string workorderid, string action)
        {
            string sql = "insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), " + workorderid + ", '" + action + "', '')";
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }


        #region Unix Time with milliseconds Pacific Time Zone to a SQL date/time in Eastern Time
        private static string UnixTimeinMStoSQLTime(string unixtime)
        {
            if (unixtime == null)
                return "null";

            if (unixtime.ToLower() == "null")
                return "null";

            if (unixtime == "")
                return "null";

            DateTime ourTime = (UnixEpoch.AddMilliseconds(Convert.ToDouble(unixtime)));


            ourTime = ourTime.AddHours(-5);
            if (isThisTimeInDST(ourTime))
                ourTime = ourTime.AddHours(+1);

            string ourTimeString = "'" + ourTime.ToShortDateString() + " " + ourTime.ToShortTimeString() + "'";
            return ourTimeString;
        }

        private static bool isThisTimeInDST(DateTime day)
        {
            // Good to move this to a table!
            if (day >= new DateTime(2013, 3, 10, 2, 0, 0) && day <= new DateTime(2013, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2014, 3, 9, 2, 0, 0) && day <= new DateTime(2014, 11, 2, 2, 0, 0))
                return true;

            if (day >= new DateTime(2015, 3, 8, 2, 0, 0) && day <= new DateTime(2015, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2016, 3, 13, 2, 0, 0) && day <= new DateTime(2016, 11, 6, 2, 0, 0))
                return true;

            if (day >= new DateTime(2017, 3, 12, 2, 0, 0) && day <= new DateTime(2017, 11, 5, 2, 0, 0))
                return true;

            if (day >= new DateTime(2018, 3, 11, 2, 0, 0) && day <= new DateTime(2018, 11, 4, 2, 0, 0))
                return true;

            if (day >= new DateTime(2019, 3, 10, 2, 0, 0) && day <= new DateTime(2019, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2020, 3, 8, 2, 0, 0) && day <= new DateTime(2020, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2021, 3, 14, 2, 0, 0) && day <= new DateTime(2021, 11, 7, 2, 0, 0))
                return true;

            return false;

        }

        private static int ConvertHrsMnsStringToMinutes(string weirdTimeString)
        {
            int hrsTag = weirdTimeString.IndexOf("hrs");
            if (hrsTag <= 0)
                return 0;

            int hours = Convert.ToInt32(weirdTimeString.Substring(0, hrsTag));
            int minTag = weirdTimeString.IndexOf("min");
            int min = Convert.ToInt32(weirdTimeString.Substring(hrsTag + 4, minTag - (hrsTag + 4)));
            int minutes = hours * 60 + min;
            return minutes;
        }
        #endregion

    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\st_67fe68068acf483fbfea7cd04372498e.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_67fe68068acf483fbfea7cd04372498e.csproj</RootNamespace>
    <AssemblyName>ST_67fe68068acf483fbfea7cd04372498e.csproj</AssemblyName>
    <ProjectGuid>{E2ACCCE4-66CE-411F-B6CD-C9465F73AAF1}</ProjectGuid>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.ServiceModel.Web">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Web.Services" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ScriptTask</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties.Settings.get_Default():ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties.Sett" +
    "ings")]

namespace ST_67fe68068acf483fbfea7cd04372498e.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_67fe68068acf483fbfea7cd04372498e.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_67fe68068acf483fbfea7cd04372498e.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><BinaryItem Name="\bin\release\st_67fe68068acf483fbfea7cd04372498e.csproj.dll">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
c0wAAAooTgAACiwCFyoCIN4HAAAZHwkYFhZzTAAACihNAAAKLBoCIN4HAAAfCxgYFhZzTAAACihO
AAAKLAIXKgIg3wcAABkeGBYWc0wAAAooTQAACiwaAiDfBwAAHwsXGBYWc0wAAAooTgAACiwCFyoC
IOAHAAAZHw0YFhZzTAAACihNAAAKLBoCIOAHAAAfCxwYFhZzTAAACihOAAAKLAIXKgIg4QcAABkf
DBgWFnNMAAAKKE0AAAosGgIg4QcAAB8LGxgWFnNMAAAKKE4AAAosAhcqAiDiBwAAGR8LGBYWc0wA
AAooTQAACiwaAiDiBwAAHwsaGBYWc0wAAAooTgAACiwCFyoCIOMHAAAZHwoYFhZzTAAACihNAAAK
LBoCIOMHAAAfCxkYFhZzTAAACihOAAAKLAIXKgIg5AcAABkeGBYWc0wAAAooTQAACiwaAiDkBwAA
HwsXGBYWc0wAAAooTgAACiwCFyoCIOUHAAAZHw4YFhZzTAAACihNAAAKLBoCIOUHAAAfCx0YFhZz
TAAACihOAAAKLAIXKhYqAAATMAUASwAAAAkAABECcpENAHBvJAAACgoGFjACFioCFgZvJgAACihP
AAAKCwJymQ0AcG8kAAAKDAIGGlgIBhpYWW8mAAAKKE8AAAoNBx88WglYEwQRBCpaILIHAAAXFxYW
FhdzUAAACoAGAAAEKh4CKFEAAAoqHgIoDQAACioafkIAAAQqLnMUAAAGgEIAAAQqHgIoVQAACioA
AAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBt
c2NvcmxpYiwgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
PWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAA
AAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAMQJ
AAAjfgAAMAoAADwNAAAjU3RyaW5ncwAAAABsFwAApA0AACNVUwAQJQAAEAAAACNHVUlEAAAAICUA
AMgCAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA+gEzABYAAAEAAAA3AAAABgAAAEIAAAAVAAAA
CwAAAFUAAAACAAAARwAAAAkAAAACAAAAAwAAAAQAAAABAAAAAQAAAAgAAAABAAAAAgAAAAAACgAB
AAAAAAAGAOYA3wAKADUBDAEGAFEB3wAOAGsBVgEGAJQBgwEGAMUBsAEGAEcC3wAGABEG/wUGACgG
/wUGAEUG/wUGAGQG/wUGAH0G/wUGAJYG/wUGALEG/wUGAMwG/wUGAOUG/wUGAB4H/gYGAD4H/gYG
AG8HXAcGAIwH3wAGAJEH3wAGALUH/wUOAOEHywcOAPoHywcSABwIDwgKACsIDAEWAIQIZAgWAJwI
ZAgGAMEI3wAaAPgI4ggaAAYJ4ggaACQJEQkaADYJ4ggaAFIJEQkGAF8J3wAGAIUJdAkGAJcJ3wAG
AOQJ2AkGAAoKAAoGABcKAAoeAGUKQwoiAJ0KgAoaAN4KEQkOABMLCAsOAHgLCAsOAJALCAsGALYL
3wAGANoLAAoGAOcLAAoGAPwL3wAGABkM3wAGAJ8M3wAiAKwMgAoiAMIMgAoGANYM/gYAAAAAAQAA
AAAAAQABAAAAEAA5AEMABQABAAEAAQAQAHkAhAAJAAMABQADAQAArwAAAA0ABwASAAUAEAC9AAAA
BQAKABIAAAEQAM0AQwARAEIAEwARAKQBEwARANEBFwAWABsCOQARACwCOQAWADYCPAAxAFACPwAG
BiYDPABWgC4DbgBWgDYDbgADAD4DOQADAEoDOQADAFQDOQADAGMDOQADAG0DOQADAHkDOQADAIMD
OQADAJEDOQADAJ8DOQADALADOQADAL8DOQADAMcDOQADANcDOQADAOIDOQADAOYDOQADAOwDOQAD
APcDOQADAPwDOQADAAUEOQADABEEOQADABYEOQADACEEOQADACgEOQADADEEOQADAD0EOQADAEwE
OQADAFUEOQADAGUEOQADAGsEOQADAHUEOQADAH8EOQADAIkEOQADAJMEOQADAJ0EOQADAKcEOQAD
ALEEOQADALsEOQADAMUEOQADANAEOQADANsEOQADAOYEOQADAPEEOQADAPwEOQADAAcFOQADABIF
OQADAB0FOQADACgFOQADADMFOQADAD4FOQADAEkFOQADAFQFOQADAF8FOQADAGoFOQADAHQFOQAD
AH4FOQADAIgFOQARAJIFfABQIAAAAACDGOEBGwABAFggAAAAAJMI5wEfAAEAkSAAAAAAkwj7ASQA
AQCYIAAAAACTCAcCKQABAKAgAAAAAIYAWgIbAAIALCEAAAAAkQBfAkMAAgD0IQAAAACRAHoCQwAC
ANwiAAAAAJEAmQJHAAIApCMAAAAAkQCtAkwAAwCsKQAAAACRAMkCUgAEAIwqAAAAAJEA0QJYAAYA
vCoAAAAAkQDaAl0ABwBUKwAAAACRAOMCWAAJABAsAAAAAJEA+QJjAAoA4C0AAAAAkQAJA2kACwBO
LgAAAACGGOEBGwAMADcuAAAAAJEYmAxDAAwAVi4AAAAAhhjhARsADABeLgAAAACWCKIFgAAMAHEu
AAAAAIYY4QEbAAwAZS4AAAAAkRiYDEMADAAAAAEAtgUAAAEAvAUAAAEAvgUAAAEAwAUAAAIAxAUA
AAEAvAUAAAEAzwUAAAIA2wUAAAEA4gUAAAEA6wUAAAEA7wVBAOEBigBJAOEBigBRAOEBigBZAOEB
igBhAOEBigBpAOEBigBxAOEBigB5AOEBigCBAOEBigCJAOEBjwCRAOEBGwCZAOEBGwAJAOEBGwCh
AKMHlAChAL4HmwApAOEBoAC5AOEBrADJAOEBigARAD0I9QDRAI4I+gDZAKUI/wDhAK4IBQEJALgI
CQHRAMcIjwDxAOEBigD5AOEBDQEBATEJGwD5AEQJFAERAaUIGgEZAWYJHwEhAYwJJQERAZIJKgEp
AaMJGwAZAasJUgAZAasJRgEZAbIJTQEZAboJUgEZAcYJVwEZAdAJXQExAe0JYwExAfcJaQE5AeEB
bwFBAR4KdQFJAeEBhwFRAbEKjQEZAasJpQEZAasJrQEZAbwKCQEZAcQKHwHxANAKswFZAegKigBZ
AfgKuAFhAR4LxwFhASULigAxATALYwFhATkLigBhAUkLdQFhAVsLzgFBAWwL1AFBAXILGwBhAYQL
3AFxAaALCQF5Ab4LRwBpAcgLzgGBAeEB4gGJAfILCQGJAXILGwBpAXILGwCRAQYM6QEZAasJBgKZ
ASEMFgI5ACoMGwI5ADoMGwI5AEMMCQE5AFUMCQE5AOEBKwI5AGcMNQI5AH0MNQKZAZAMaQA5AOEB
RQIRAOEBGwCpAeEBGwCxAeEBGwC5AeEBGwAhAOEBGwAIACAAcgAIACQAdwApAIsAsgAuACMAggIu
ADMAiAIuABsAggIuACsAUgIuADsAggIuABMAggIuAFsAqAIuAFMAnwIuAAsAUgJDAGMAdwBJAIsA
sgBjAJMAuwCjAJMCdwBBAZsCdwBhAZsCdwCBAZsCdwChAZsCdwDBAZsCdwDhAZsCdwABApsCdwAh
ApsCdwBBApsCdwBhApsCdwCBApsCdwChApsCdwDBApsCdwDhApsCdwABA5sCdwAhA5sCdwBBA5sC
dwBhA5sCdwCBA5sCdwChA5sCdwDBA5sCdwDhA5sCdwABBJsCdwAhBJsCdwBBBJsCdwBhBJsCdwCB
BJsCdwChBJsCdwDBBJsCdwDhBJsCdwABBZsCdwAhBZsCdwBBBZsCdwBhBZsCdwCBBZsCdwChBZsC
dwDBBZsCdwDhBZsCdwABBpsCdwAhBpsCdwBBBpsCdwBhBpsCdwCBBpsCdwChBpsCdwDBBpsCdwDh
BpsCdwABB5sCdwAhB5sCdwBBB5sCdwBhB5sCdwCBB5sCdwChB5sCdwDBB5sCdwDhB5sCdwABCJsC
dwAhCJsCdwBBCKMCdwCnAC4BOgGUAbwB7wEMAiECPQICAAEABgADAAAAlAEvAAAAEwI0AAAArgWF
AAIAAgADAAIAAwAFAAEABAAFAAIAEwAHAHoBBIAAAAEAAABFGJCcAAAAAAAAhAAAAAIAAAAAAAAA
AAAAAAEA1gAAAAAACgAAAAAAAAAAAAAACgDtAAAAAAACAAAAAAAAAAAAAAABAN8AAAAAAAMABQAA
AAAAAAAAAAEADwgAAAAACgAAAAAAAAAAAAAACgBFCAAAAAACAAAAAAAAAAAAAAABANYIAAAAAAMA
BQAAAAAAAAAAAH4BKwoAAAAAAwAAAAAAAAAAAAAAAQCACgAAAAAAAAAAAQAAAPEMAAAEAAMABQAD
AAAAAAAAPE1vZHVsZT4AU1RfNjdmZTY4MDY4YWNmNDgzZmJmZWE3Y2QwNDM3MjQ5OGUuY3Nwcm9q
LmRsbABSZXNvdXJjZXMAU1RfNjdmZTY4MDY4YWNmNDgzZmJmZWE3Y2QwNDM3MjQ5OGUuY3Nwcm9q
LlByb3BlcnRpZXMAU2NyaXB0TWFpbgBTVF82N2ZlNjgwNjhhY2Y0ODNmYmZlYTdjZDA0MzcyNDk4
ZS5jc3Byb2oAU2NyaXB0UmVzdWx0cwBSZXF1ZXN0TG9uZ0Zvcm0AU2V0dGluZ3MAbXNjb3JsaWIA
U3lzdGVtAE9iamVjdABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
RW51bQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGNvbm5lY3Rpb25TdHJpbmcAYXV0aFRva2Vu
AHNob3J0UmVxdWVzdFdhaXQARGF0ZVRpbWUAVW5peEVwb2NoAE1haW4AdXBkYXRlUmVxdWVzdHNX
aXRoRnVsbERhdGEAdXBkYXRlUmVsZWFzZU1hbmFnZW1lbnRUaWNrZXRzAHJlYWRMb25nRm9ybVJl
cXVlc3QAdXBkYXRlTG9uZ1JlcXVlc3RUb0RhdGFiYXNlAEdldERhdGEAU2FuaXRpemUAV3JpdGVM
b2cAVW5peFRpbWVpbk1TdG9TUUxUaW1lAGlzVGhpc1RpbWVJbkRTVABDb252ZXJ0SHJzTW5zU3Ry
aW5nVG9NaW51dGVzAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAFdPUktPUkRFUklEAFJFUVVFU1RF
UgBSRVFVRVNURVJFTUFJTABDUkVBVEVEQlkAQ1JFQVRFRFRJTUUARFVFQllUSU1FAFJFU1BPTkRF
RFRJTUUAQ09NUExFVEVEVElNRQBTSE9SVERFU0NSSVBUSU9OAFRJTUVTUEVOVE9OUkVRAFNVQkpF
Q1QAUkVRVUVTVFRFTVBMQVRFAFRFTVBMQVRFSUQAU0xBAEFTU0VUAERFUEFSVE1FTlQAU0lURQBD
QVRFR09SWQBTVUJDQVRFR09SWQBJVEVNAFRFQ0hOSUNJQU4AU1RBVFVTAFBSSU9SSVRZAFJFUVVF
U1RUWVBFAEhBU0FUVEFDSE1FTlRTAEhBU05PVEVTAEhBU0NPTlZFUlNBVElPTgBHUk9VUABVREZf
Q0hBUjEAVURGX0NIQVIyAFVERl9DSEFSMwBVREZfQ0hBUjQAVURGX0NIQVI1AFVERl9DSEFSNgBV
REZfQ0hBUjcAVURGX0NIQVI4AFVERl9DSEFSOQBVREZfQ0hBUjEwAFVERl9DSEFSMTEAVURGX0NI
QVIxMgBVREZfQ0hBUjEzAFVERl9DSEFSMTQAVURGX0NIQVIxNQBVREZfQ0hBUjE2AFVERl9DSEFS
MTcAVURGX0NIQVIxOABVREZfQ0hBUjE5AFVERl9DSEFSMjAAVURGX0NIQVIyMQBVREZfQ0hBUjIy
AFVERl9DSEFSMjMAVURGX0NIQVIyNABVREZfREFURTEAVURGX0RBVEUyAFVERl9EQVRFMwBVREZf
REFURTQAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAdmFsdWUAcwByAHVybABQ
YXJhbWV0ZXJzAHdvcmtvcmRlcmlkAGFjdGlvbgB1bml4dGltZQBkYXkAd2VpcmRUaW1lU3RyaW5n
AFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1
dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBU
eXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3Nl
bWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5BZGRJbgBBZGRJbkF0dHJpYnV0ZQBTY3JpcHRPYmplY3RN
b2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9J
dGVtAGdldF9WYWx1ZQBUb1N0cmluZwBJbnQzMgBzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBT
eXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBTcWxDb21tYW5kAFN5c3RlbS5EYXRh
LkNvbW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJE
YXRhUmVhZGVyAFN0cmluZwBvcF9JbmVxdWFsaXR5AFN5c3RlbS5UaHJlYWRpbmcAVGhyZWFkAFNs
ZWVwAFJlYWQASURpc3Bvc2FibGUARGlzcG9zZQBDb25jYXQASW5kZXhPZgBMYXN0SW5kZXhPZgBT
dWJzdHJpbmcAUmVwbGFjZQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfQVNDSUkAR2V0Qnl0ZXMA
U3lzdGVtLklPAE1lbW9yeVN0cmVhbQBTdHJlYW0Ac2V0X1Bvc2l0aW9uAFN5c3RlbS5TZXJ2aWNl
TW9kZWwuV2ViAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uSnNvbgBEYXRhQ29udHJhY3RK
c29uU2VyaWFsaXplcgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAFhtbE9iamVjdFNlcmlh
bGl6ZXIAUmVhZE9iamVjdABUb0xvd2VyAG9wX0VxdWFsaXR5AENyZWF0ZUNvbW1hbmQARGJDb21t
YW5kAHNldF9Db21tYW5kVGV4dABFeGVjdXRlTm9uUXVlcnkAU3lzdGVtLk5ldABXZWJSZXF1ZXN0
AENyZWF0ZQBzZXRfTWV0aG9kAGdldF9VVEY4AHNldF9Db250ZW50VHlwZQBzZXRfQ29udGVudExl
bmd0aABHZXRSZXF1ZXN0U3RyZWFtAFdyaXRlAENsb3NlAFdlYlJlc3BvbnNlAEdldFJlc3BvbnNl
AEh0dHBXZWJSZXNwb25zZQBnZXRfU3RhdHVzRGVzY3JpcHRpb24AQ29uc29sZQBXcml0ZUxpbmUA
R2V0UmVzcG9uc2VTdHJlYW0AU3RyZWFtUmVhZGVyAFRleHRSZWFkZXIAUmVhZFRvRW5kAEV4Y2Vw
dGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AQ29udmVydABUb0RvdWJsZQBBZGRNaWxsaXNlY29uZHMA
QWRkSG91cnMAVG9TaG9ydERhdGVTdHJpbmcAVG9TaG9ydFRpbWVTdHJpbmcAb3BfR3JlYXRlclRo
YW5PckVxdWFsAG9wX0xlc3NUaGFuT3JFcXVhbABUb0ludDMyAC5jY3RvcgBEYXRlVGltZUtpbmQA
RGF0YUNvbnRyYWN0QXR0cmlidXRlAERhdGFNZW1iZXJBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUAU1RfNjdmZTY4MDY4YWNmNDgzZmJmZWE3Y2QwNDM3MjQ5OGUuY3Nwcm9qLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAH9TAFQAXwA2ADcAZgBlADYAOAAwADYAOABh
AGMAZgA0ADgAMwBmAGIAZgBlAGEANwBjAGQAMAA0ADMANwAyADQAOQA4AGUALgBjAHMAcAByAG8A
agAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAIUMAbwBuAG4AZQBj
AHQAaQBvAG4AUwB0AHIAaQBuAGcAACFTAGgAbwByAHQAUgBlAHEAdQBlAHMAdABXAGEAaQB0AAAr
TQBhAG4AYQBnAGUARQBuAGcAaQBuAGUAQQB1AHQAaABUAG8AawBlAG4AAEtzAGUAbABlAGMAdAAg
ACoAIABmAHIAbwBtACAAUgBlAHEAdQBlAHMAdAAgAHcAaABlAHIAZQAgAGQAZQBsAGUAdABlAGQA
PQAwAAAXVwBvAHIAawBPAHIAZABlAHIASQBEAAAXSABhAHMARgB1AGwAbABJAG4AZgBvAAAJVABy
AHUAZQAAgnFzAGUAbABlAGMAdAAgAFcAbwByAGsATwByAGQAZQByAEkARAAsACAAUgBlAHEAdQBl
AHMAdABlAHIALAAgAEMAcgBlAGEAdABlAGQAQgB5ACwAIABDAHIAZQBhAHQAZQBkAFQAaQBtAGUA
LAAgAEQAdQBlAEIAeQBUAGkAbQBlACwAIABSAGUAcwBwAG8AbgBkAGUAZABUAGkAbQBlACwAIABD
AG8AbQBwAGwAZQB0AGUAZABUAGkAbQBlACwAIAAgAFMATABBACwAIABQAHIAaQBvAHIAaQB0AHkA
LAAgAEQAZQBwAGEAcgB0AG0AZQBuAHQALAAgAFMAdQBiAGoAZQBjAHQALAAgAFQAZQBjAGgAbgBp
AGMAaQBhAG4ALAAgAFMAZQByAHYAaQBjAGUARwByAG8AdQBwACwAIABSAGUAcQB1AGUAcwB0AFQA
eQBwAGUALAAgAFIAZQBxAHUAZQBzAHQAVABlAG0AcABsAGEAdABlACwAIAAgAFUARABGAF8AQwBI
AEEAUgA0ACAAYQBzACAAVQBEAEYAVABlAG0AcABsAGEAdABlACwAIABDAGEAdABlAGcAbwByAHkA
LAAgAFMAdQBiAGMAYQB0AGUAZwBvAHIAeQAsACAASQB0AGUAbQAsACAAVQBEAEYAXwBDAEgAQQBS
ADEANgAgAGEAcwAgAE8AcgBpAGcAVABhAHIAUgBlAGwARABhAHQAZQAsACAAVQBEAEYAXwBDAEgA
QQBSADEAMAAgAGEAcwAgAFIAZQBsAFQAbwBQAHIAbwBkACAAZgByAG8AbQAgAHIAZQBxAHUAZQBz
AHQAIAAADXcAaABlAHIAZQAgAABHKABTAGUAcgB2AGkAYwBlAEcAcgBvAHUAcAA9ACcAUgBlAGwA
ZQBhAHMAZQAgAE0AYQBuAGEAZwBlAG0AZQBuAHQAJwAgAAFVbwByACAAUgBlAHEAdQBlAHMAdABU
AGUAbQBwAGwAYQB0AGUAIAA9ACAAJwBSAGUAbABlAGEAcwBlACAATQBhAG4AYQBnAGUAbQBlAG4A
dAAnACAAAUdvAHIAIABDAGEAdABlAGcAbwByAHkAIAA9ACAAJwBSAGUAbABlAGEAcwBlACAATQBh
AG4AYQBnAGUAbQBlAG4AdAAnACAAAUdvAHIAIABVAEQARgBfAEMASABBAFIANAA9ACcAUgBlAGwA
ZQBhAHMAZQAgAE0AYQBuAGEAZwBlAG0AZQBuAHQAJwApACAAAW1oAHQAdABwAHMAOgAvAC8AcwBk
AHAAbwBuAGQAZQBtAGEAbgBkAC4AbQBhAG4AYQBnAGUAZQBuAGcAaQBuAGUALgBjAG8AbQAvAGEA
cABpAC8AagBzAG8AbgAvAHIAZQBxAHUAZQBzAHQALwAANT8AcwBjAG8AcABlAD0AcwBkAHAAbwBk
AGEAcABpACYAYQB1AHQAaAB0AG8AawBlAG4APQAANyYATwBQAEUAUgBBAFQASQBPAE4AXwBOAEEA
TQBFAD0ARwBFAFQAXwBSAEUAUQBVAEUAUwBUAAAVIgBEAGUAdABhAGkAbABzACIAOgAAA1sAAANd
AAAJfQB9AH0AXQAABX0AXQAAJ3UAcABkAGEAdABlACAAUgBlAHEAdQBlAHMAdAAgAHMAZQB0ACAA
ACVbAFIAZQBxAHUAZQBzAHQAZQByAEUAbQBhAGkAbABdAD0AJwABBScALAABIVsAUgBlAHMAcABv
AG4AZABlAGQAVABpAG0AZQBdAD0AAAMsAAAhWwBDAG8AbQBwAGwAZQB0AGUAZABUAGkAbQBlAF0A
PQAAKVsAUwBoAG8AcgB0AEQAZQBzAGMAcgBpAHAAdABpAG8AbgBdAD0AJwABNVsAVABpAG0AZQBT
AHAAZQBuAHQATwBuAFIAZQBxAEkAbgBNAGkAbgB1AHQAZQBzAF0APQAAJ1sAUgBlAHEAdQBlAHMA
dABUAGUAbQBwAGwAYQB0AGUAXQA9ACcAAR1bAFQAZQBtAHAAbABhAHQAZQBJAEQAXQA9ACcAAQ9b
AFMATABBAF0APQAnAAETWwBBAHMAcwBlAHQAXQA9ACcAAR1bAEQAZQBwAGEAcgB0AG0AZQBuAHQA
XQA9ACcAARFbAFMAaQB0AGUAXQA9ACcAARlbAEMAYQB0AGUAZwBvAHIAeQBdAD0AJwABH1sAUwB1
AGIAYwBhAHQAZQBnAG8AcgB5AF0APQAnAAERWwBJAHQAZQBtAF0APQAnAAEfWwBSAGUAcQB1AGUA
cwB0AFQAeQBwAGUAXQA9ACcAASNbAEgAYQBzAEEAdAB0AGEAYwBoAG0AZQBuAHQAcwBdAD0AAAl0
AHIAdQBlAAADMAAAAzEAABdbAEgAYQBzAE4AbwB0AGUAcwBdAD0AACVbAEgAYQBzAEMAbwBuAHYA
ZQByAHMAYQB0AGkAbwBuAF0APQAAIVsAUwBlAHIAdgBpAGMAZQBHAHIAbwB1AHAAXQA9ACcAAQcn
ACwAIAABG1sAVQBEAEYAXwBDAEgAQQBSADEAXQA9ACcAARtbAFUARABGAF8AQwBIAEEAUgAyAF0A
PQAnAAEbWwBVAEQARgBfAEMASABBAFIAMwBdAD0AJwABG1sAVQBEAEYAXwBDAEgAQQBSADQAXQA9
ACcAARtbAFUARABGAF8AQwBIAEEAUgA1AF0APQAnAAEbWwBVAEQARgBfAEMASABBAFIANgBdAD0A
JwABG1sAVQBEAEYAXwBDAEgAQQBSADcAXQA9ACcAARtbAFUARABGAF8AQwBIAEEAUgA4AF0APQAn
AAEbWwBVAEQARgBfAEMASABBAFIAOQBdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEAMABdAD0A
JwABHVsAVQBEAEYAXwBDAEgAQQBSADEAMQBdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEAMgBd
AD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEAMwBdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEA
NABdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEANQBdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBS
ADEANgBdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEANwBdAD0AJwABHVsAVQBEAEYAXwBDAEgA
QQBSADEAOABdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADEAOQBdAD0AJwABHVsAVQBEAEYAXwBD
AEgAQQBSADIAMABdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADIAMQBdAD0AJwABHVsAVQBEAEYA
XwBDAEgAQQBSADIAMgBdAD0AJwABHVsAVQBEAEYAXwBDAEgAQQBSADIAMwBdAD0AJwABHVsAVQBE
AEYAXwBDAEgAQQBSADIANABdAD0AJwABGVsAVQBEAEYAXwBEAEEAVABFADEAXQA9AAAZWwBVAEQA
RgBfAEQAQQBUAEUAMgBdAD0AABlbAFUARABGAF8ARABBAFQARQAzAF0APQAAGVsAVQBEAEYAXwBE
AEEAVABFADQAXQA9AAAhWwBIAGEAcwBGAHUAbABsAEkAbgBmAG8AXQA9ADEAIAAAJVcASABFAFIA
RQAgAFcAbwByAGsATwByAGQAZQByAEkARAA9AAAXVQBQAEQAQQBUAEUAIABGAFUATABMAAAJUABP
AFMAVAAAAQBDYQBwAHAAbABpAGMAYQB0AGkAbwBuAC8AeAAtAHcAdwB3AC0AZgBvAHIAbQAtAHUA
cgBsAGUAbgBjAG8AZABlAGQAAQMnAAEFJwAnAAEHIgAiACIAAICzaQBuAHMAZQByAHQAIABpAG4A
dABvACAASQBtAHAAbwByAHQASABpAHMAdABvAHIAeQAgACgAWwBEAGEAdABlAF0ALAAgAFsAVwBv
AHIAawBPAHIAZABlAHIASQBEAF0ALAAgAFsAQQBjAHQAaQBvAG4AXQAsACAAWwBDAG8AbQBtAGUA
bgB0AF0AKQAgAFYAQQBMAFUARQBTACgARwBFAFQARABBAFQARQAoACkALAAgAAAHLAAgACcAAQ0n
ACwAIAAnACcAKQABCW4AdQBsAGwAAAMgAAAHaAByAHMAAAdtAGkAbgAAAAAAro/SsAv/RkWg3QC3
upyR7gAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUE
CAASGQIGDgIGCAMGER0DAAABBAABAQ4FAAEBEhQFAAIODg4EAAEODgUAAgEODgUAAQIRHQQAAQgO
AwYREAQAAAAABAEAAAADBhIYBAAAEhgECAASGAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZ
BAcBEhUFIAEBEWEIAQACAAAAAAA5AQAKU2NyaXB0TWFpbgMAVA4HVmVyc2lvbgMxLjBUDglQdWJs
aXNoZXIAVA4LRGVzY3JpcHRpb24ABCAAEmkEIAASbQUgARJxHAMgABwDIAAOBiACAQ4SeQUgABKA
hQQgARwOBQACAg4OBAABAQgDIAACCwcFEnkSfRKAhQ4OCwcFDhJ5En0SgIUOBgADDg4ODgQgAQgO
BCABCAMFIAIOCAgFIAIODg4FAAASgJkFIAEdBQ4FIAEBHQUEIAEBCgMdEhQIMb84Vq02TjUFIAEB
ElEGIAEcEoChEAcHDggIHQUSgJ0SgKUdEhQHAAQODg4ODgUAAQ4dHAQgABJ9AyAACAoHBQ4SeRJ9
HB0cBgABEoCxDgUgABKAoQcgAwEdBQgIBSAAEoC1BiABARKAoQUgABKAyRYHCRKAsQ4dBRKAoRKA
tRKAwQ4SgMkOBQABDh0OCQcEDhJ5En0dDgQAAQ0OBSABER0NCQcEER0OER0dDgkgBgEICAgICAgH
AAICER0RHQcHBQgICAgIDCAHAQgICAgICBGA0S8BACpTVF82N2ZlNjgwNjhhY2Y0ODNmYmZlYTdj
ZDA0MzcyNDk4ZS5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQBIVwAAAAAAAAAAAABeVwAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAUFcAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADwAwAAAAAAAAAA
AADwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAkJxF
GAAAAQCQnEUYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEUAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAALAMAAAEAMAAwADAAMAAwADQAYgAwAAAAgAArAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADYANwBmAGUANgA4ADAANgA4
AGEAYwBmADQAOAAzAGYAYgBmAGUAYQA3AGMAZAAwADQAMwA3ADIANAA5ADgAZQAuAGMAcwBwAHIA
bwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAyADEAMwAu
ADQAMAAwADgAMAAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2ADcA
ZgBlADYAOAAwADYAOABhAGMAZgA0ADgAMwBmAGIAZgBlAGEANwBjAGQAMAA0ADMANwAyADQAOQA4
AGUALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAACIAC8AAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANgA3AGYAZQA2ADgAMAA2ADgAYQBjAGYA
NAA4ADMAZgBiAGYAZQBhADcAYwBkADAANAAzADcAMgA0ADkAOABlAC4AYwBzAHAAcgBvAGoALgBk
AGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA2ADcAZgBlADYA
OAAwADYAOABhAGMAZgA0ADgAMwBmAGIAZgBlAGEANwBjAGQAMAA0ADMANwAyADQAOQA4AGUALgBj
AHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADIAMQAzAC4ANAAwADAAOAAwAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADIAMQAzAC4ANAAwADAAOAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAcDcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem><Breakpoint Name="ScriptMain.cs, line 235 character 13" Enabled="True" Function="ST_67fe68068acf483fbfea7cd04372498e.csproj.ScriptMain.Main()" File="\scriptmain.cs" Line="235" Column="13" Condition="" ConditionType="1" Language="C#" HitCount="1" HitCountType="1"/></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Update History (OLD)</DTS:Property>
<DTS:Property DTS:Name="DTSID">{896EC533-0BE4-4DBC-9235-DCB0B9055939}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_1498fb7f3dfd41fbbfbfe058b44ee4a7" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString,User::ManageEngineAuthToken,User::ShortRequestWait" ReadWriteVariables=""><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.IO;
using System.Text;
using System.Net;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;

namespace ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        //public static List<request> requests = new List<request>();
        public static string connectionString;
        private static string authToken;
        public static int shortRequestWait;
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);

        public void Main()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            shortRequestWait = (int) Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();

            updateRequestsWithHistoryResolutionConversations(true);
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private static void updateRequestsWithHistoryResolutionConversations(bool alwaysAndForever)
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            using (SqlCommand command = new SqlCommand("select * from Request", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string workorderid = reader["WorkOrderID"].ToString();
                        string history = reader["History"].ToString();
                        string resolution = reader["Resolution"].ToString();
                        string conversations = reader["Conversations"].ToString();

                        if (alwaysAndForever || (history == ""))
                        {
                            readHistory(workorderid);
                            System.Threading.Thread.Sleep(100);
                        }

                        if (resolution == "")
                        {
                            //readResolution(workorderid);
                            //System.Threading.Thread.Sleep(1200);
                        }

                        if (conversations == "")
                        {
                            //readConversations(workorderid);
                            //System.Threading.Thread.Sleep(1200);
                        }

                    }
                }
            }
        }


        private static void readHistory(string s)
        {
            try
            {
                string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_HISTORY");
                updateSingleFieldToDatabase(s, "History", json);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
        }

        private static void readResolution(string s)
        {
            string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_RESOLUTION");
            updateSingleFieldToDatabase(s, "Resolution", json);
        }

        private static void readConversations(string s)
        {
            string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "/conversation?scope=sdpodapi&authtoken=" + authToken + "&OPERATION_NAME=GET_CONVERSATIONS");
            //string json = GetData(@"https://sdpondemand.manageengine.com/api/json/request/" + s, "?scope=sdpodapi&authtoken=ebd6098dbe251cc26eccf68617c8ed49&OPERATION_NAME=GET_CONVERSATIONS");
            updateSingleFieldToDatabase(s, "Conversations", json);
        }

        private static void updateSingleFieldToDatabase(string id, string field, string json)
        {
            try
            {
                string sql = "update Request set ";

                sql += "[" + field + "]='" + Sanitize(json) + "' ";
                sql += "WHERE WorkOrderID=" + id;
                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandText = sql;
                        command.CommandTimeout = 40;
                        command.ExecuteNonQuery();
                    }
                }
                WriteLog(id, "UPDATE " + field.ToUpper());
            }
            catch (Exception ex)
            {
                Console.WriteLine(id);
                Console.WriteLine(ex.ToString());
            }
        }

        private static int ConvertHrsMnsStringToMinutes(string weirdTimeString)
        {
            int hrsTag = weirdTimeString.IndexOf("hrs");
            if (hrsTag <= 0)
                return 0;

            int hours = Convert.ToInt32(weirdTimeString.Substring(0,hrsTag));
            int minTag = weirdTimeString.IndexOf("min");
            int min = Convert.ToInt32(weirdTimeString.Substring(hrsTag+4, minTag - (hrsTag+4)));
            int minutes = hours*60 + min;
            return minutes;
        }


        #region database helper code
        // This is uncool! change to use parameters
        private static string Sanitize(string s)
        {
            if (s == null)
                return "";
            s = s.Replace("'", "''");
            s = s.Replace("\"\"\"", "");
            return s;
        }

        static void WriteLog(string workorderid, string action)
        {
            string sql = "insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), " + workorderid + ", '" + action + "', '')";
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

        #endregion

        #region Unix Time with milliseconds Pacific Time Zone to a SQL date/time in Eastern Time
        private static string UnixTimeinMStoSQLTime(string unixtime)
        {
            if (unixtime == null)
                return "null";

            if (unixtime.ToLower() == "null")
                return "null";

            if (unixtime == "")
                return "null";

            DateTime ourTime = (UnixEpoch.AddMilliseconds(Convert.ToDouble(unixtime)));


            ourTime = ourTime.AddHours(-5);
            if (isThisTimeInDST(ourTime))
                ourTime = ourTime.AddHours(+1);

            string ourTimeString = "'" + ourTime.ToShortDateString() + " " + ourTime.ToShortTimeString() + "'";
            return ourTimeString;
        }

        private static bool isThisTimeInDST(DateTime day)
        {
            // Good to move this to a table!
            if (day >= new DateTime(2013, 3, 10, 2, 0, 0) && day <= new DateTime(2013, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2014, 3, 9, 2, 0, 0) && day <= new DateTime(2014, 11, 2, 2, 0, 0))
                return true;

            if (day >= new DateTime(2015, 3, 8, 2, 0, 0) && day <= new DateTime(2015, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2016, 3, 13, 2, 0, 0) && day <= new DateTime(2016, 11, 6, 2, 0, 0))
                return true;

            if (day >= new DateTime(2017, 3, 12, 2, 0, 0) && day <= new DateTime(2017, 11, 5, 2, 0, 0))
                return true;

            if (day >= new DateTime(2018, 3, 11, 2, 0, 0) && day <= new DateTime(2018, 11, 4, 2, 0, 0))
                return true;

            if (day >= new DateTime(2019, 3, 10, 2, 0, 0) && day <= new DateTime(2019, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2020, 3, 8, 2, 0, 0) && day <= new DateTime(2020, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2021, 3, 14, 2, 0, 0) && day <= new DateTime(2021, 11, 7, 2, 0, 0))
                return true;

            return false;

        }
        #endregion

        #region WebApi
        static string GetData(string url, string Parameters)
        {
            try
            {
                WebRequest request = WebRequest.Create(url + Parameters);
                request.Method = "POST";
                string postData = "";
                byte[] byteArray = Encoding.UTF8.GetBytes(postData);
                request.ContentType = "application/x-www-form-urlencoded";
                request.ContentLength = byteArray.Length;
                Stream dataStream = request.GetRequestStream();
                dataStream.Write(byteArray, 0, byteArray.Length);
                dataStream.Close();
                WebResponse response = request.GetResponse();
                Console.WriteLine(((HttpWebResponse)response).StatusDescription);
                dataStream = response.GetResponseStream();
                StreamReader reader = new StreamReader(dataStream);
                string responseFromServer = reader.ReadToEnd();
                reader.Close();
                dataStream.Close();
                response.Close();
                return responseFromServer;
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.InnerException.ToString());
                return "";
            }
        }
        #endregion WebApi


    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties.Settings.get_Default():ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties.Sett" +
    "ings")]

namespace ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><ProjectItem Name="\st_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj</RootNamespace>
    <AssemblyName>ST_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj</AssemblyName>
    <ProjectGuid>{EA26382A-6953-4824-9BA1-B84656FF73CE}</ProjectGuid>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.ServiceModel.Web">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ScriptTask</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem><BinaryItem Name="\bin\release\st_1498fb7f3dfd41fbbfbfe058b44ee4a7.csproj.dll">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
ARAAAAAAAACjowAcKAAAAVogsgcAABcXFhYWF3NLAAAKgAcAAAQqHgIoTAAACioAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAKgGAAAjfgAAFAcAACgKAAAj
U3RyaW5ncwAAAAA8EQAA4AQAACNVUwAcFgAAEAAAACNHVUlEAAAALBYAAJQCAAAjQmxvYgAAAAAA
AAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAyAAAABQAAAAoAAAAVAAAAEAAAAEwAAAACAAAADgAA
AAkAAAACAAAAAwAAAAQAAAABAAAABgAAAAEAAAABAAAAAAAKAAEAAAAAAAYA1gDPAAoA8gDdAA4A
UgEpAQYAbgHPAAYAhAFzAQYAtQGgAQYAWwLPAAYA2gPIAwYA8QPIAwYADgTIAwYALQTIAwYARgTI
AwYAXwTIAwYAegTIAwYAlQTIAwYArgTIAwYA5wTHBAYABwXHBAYAOAUlBQYAVQXPAAYAWgXPAAYA
fgXIAwoAqgWUBQoAwwWUBQYA2AXHBBIABwb6BQ4AFgYpARYAbwZPBhYAhwZPBgYArAbPABoA4wbN
BhoA8QbNBhoADwf8BhoAIQfNBhoAPQf8BgYASgfPAAYAbgddBwYAgAfPAAYAmwfPAAYArQfPABoA
xQf8BgYAHAjPAAoAtgirCAYA3wjTCAYAJgkcCQoASgmrCAoAYgmrCAYAmgkcCQYApwkcCQYAzwnP
AAAAAAABAAAAAAABAAEAAAAQADkAQwAFAAEAAQAAARAAeQBDAAkAAwAFAAEAEACCAI0ADQAEAAgA
AwEAALgAAAARAAgAFgARAJQBEwARAMEBFwARAAsCOQAWAC8CRwARAEACRwAWAEoCSgAxAGQCTQAG
BkoDSgBWgFIDfgBWgFoDfgBQIAAAAACDGNEBGwABAFggAAAAAJMI1wEfAAEAkSAAAAAAkwjrASQA
AQCYIAAAAACTCPcBKQABAKAgAAAAAJYIGwI9AAIAsyAAAAAAhhjRARsAAgCnIAAAAACRGPMFvQAC
ALwgAAAAAIYAbgIbAAIASCEAAAAAkQBzAlEAAgBUIgAAAACRAKQCVgADALQiAAAAAJEAsAJWAAQA
9CIAAAAAkQC/AlYABQA0IwAAAACRANECWwAGADQkAAAAAJEA7QJiAAkAiyQAAAAAkQAKA2cACgC8
JAAAAACRABMDbAALAFQlAAAAAJEAHANnAA0AECYAAAAAkQAyA3IADgDgJwAAAACRAEIDeAAPANco
AAAAAIYY0QEbABEAwCgAAAAAkRjzBb0AEQAAAAEAYgMAAAEAaAMAAAEAeQMAAAEAeQMAAAEAeQMA
AAEAewMAAAIAfgMAAAMAhAMAAAEAiQMAAAEAeQMAAAEAmQMAAAIApQMAAAEArAMAAAEAtQMAAAEA
uQMAAAIAvQNBANEBjABJANEBjABRANEBjABZANEBjABhANEBjABpANEBjABxANEBjAB5ANEBjACB
ANEBjACJANEBkQCRANEBGwCZANEBGwAJANEBGwChAGwFlgChAIcFnQApANEBogC5ANEBrgDJANEB
GwARANEBGwDRANEBjAAZACgG+wDZAHkGAAHhAJAGBQHpAJkGCwEJAKMGDwHZALIGkQD5ANEBjAAB
AdEBEwEJARwHGwABAS8HGgEZAZAGIAEhAVEHJQEpAXUHKwEZAXsHMAExAYwHGwAhAZQHeAAhAZQH
QwE5AaMHVgAhAZQHVQH5ALcHWwFJAc8HjABJAd8HkQBJAfIHYQEhAQIIDwEhAQoIdAEhARIIeQFR
ASQIYgAhASwIhwEhATQIDwFRATwImAE5AEUInQE5AFUInQE5AF4IDwE5AHAIDwE5ANEBrQE5AIII
twE5AJgItwFZAcEIvwFZAcgIjABhAegIxgFhAfEIzAFZAfoIjABZAQoJ0gFZAS0J1wFpAT4J3QFp
AUQJGwBZAVYJ5QF5AXIJDwFxAYgJ1wGBAdEB6wGJAbIJDwGJAUQJGwBxAUQJGwBBAbwJ8gE5ANEB
DwIZANEBGwAIACQAggAIACgAhwApAIsAtAAuABMATAIuABsATAIuACMATAIuAFMAaQIuAAsAHAIu
ACsAHAIuADsATAIuAFsAcgIuADMAUgJDAGMAhwBJAIsAtABhAJMAhwCDAKMAwQCpADQBSgFRAWUB
fwGNAaMB+AECAAEAAwADAAAAhAEvAAAAAwI0AAAAJwJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAH
AASAAAABAAAA4Re7YgAAAAAAAI0AAAACAAAAAAAAAAAAAAABAMYAAAAAAAIAAAAAAAAAAAAAAAEA
zwAAAAAACgAAAAAAAAAAAAAACgAKAQAAAAADAAUAAAAAAAAAAAABAPoFAAAAAAoAAAAAAAAAAAAA
AAoAMAYAAAAAAgAAAAAAAAAAAAAAAQDBBgAAAAAAAAAAAQAAANwJAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF8xNDk4ZmI3ZjNkZmQ0MWZiYmZiZmUwNThiNDRlZTRhNy5jc3Byb2ouZGxsAFJlc291cmNl
cwBTVF8xNDk4ZmI3ZjNkZmQ0MWZiYmZiZmUwNThiNDRlZTRhNy5jc3Byb2ouUHJvcGVydGllcwBT
ZXR0aW5ncwBTY3JpcHRNYWluAFNUXzE0OThmYjdmM2RmZDQxZmJiZmJmZTA1OGI0NGVlNGE3LmNz
cHJvagBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVy
ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABjb25uZWN0aW9uU3RyaW5nAGF1
dGhUb2tlbgBzaG9ydFJlcXVlc3RXYWl0AERhdGVUaW1lAFVuaXhFcG9jaABNYWluAHVwZGF0ZVJl
cXVlc3RzV2l0aEhpc3RvcnlSZXNvbHV0aW9uQ29udmVyc2F0aW9ucwByZWFkSGlzdG9yeQByZWFk
UmVzb2x1dGlvbgByZWFkQ29udmVyc2F0aW9ucwB1cGRhdGVTaW5nbGVGaWVsZFRvRGF0YWJhc2UA
Q29udmVydEhyc01uc1N0cmluZ1RvTWludXRlcwBTYW5pdGl6ZQBXcml0ZUxvZwBVbml4VGltZWlu
TVN0b1NRTFRpbWUAaXNUaGlzVGltZUluRFNUAEdldERhdGEAdmFsdWVfXwBTdWNjZXNzAEZhaWx1
cmUAdmFsdWUAYWx3YXlzQW5kRm9yZXZlcgBzAGlkAGZpZWxkAGpzb24Ad2VpcmRUaW1lU3RyaW5n
AHdvcmtvcmRlcmlkAGFjdGlvbgB1bml4dGltZQBkYXkAdXJsAFBhcmFtZXRlcnMAU3lzdGVtLlJl
ZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJs
eVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3Rl
bS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFN5c3RlbS5BZGRJbgBBZGRJ
bkF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRf
VmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBJbnQzMgBzZXRf
VGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlv
bgBTcWxDb21tYW5kAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJEYXRhUmVhZGVyAFN0cmluZwBvcF9FcXVhbGl0eQBTeXN0
ZW0uVGhyZWFkaW5nAFRocmVhZABTbGVlcABSZWFkAElEaXNwb3NhYmxlAERpc3Bvc2UAQ29uY2F0
AENvbnNvbGUAV3JpdGVMaW5lAEV4Y2VwdGlvbgBDcmVhdGVDb21tYW5kAERiQ29tbWFuZABzZXRf
Q29tbWFuZFRleHQAc2V0X0NvbW1hbmRUaW1lb3V0AEV4ZWN1dGVOb25RdWVyeQBUb1VwcGVyAElu
ZGV4T2YAU3Vic3RyaW5nAENvbnZlcnQAVG9JbnQzMgBSZXBsYWNlAFRvTG93ZXIAVG9Eb3VibGUA
QWRkTWlsbGlzZWNvbmRzAEFkZEhvdXJzAFRvU2hvcnREYXRlU3RyaW5nAFRvU2hvcnRUaW1lU3Ry
aW5nAG9wX0dyZWF0ZXJUaGFuT3JFcXVhbABvcF9MZXNzVGhhbk9yRXF1YWwAU3lzdGVtLk5ldABX
ZWJSZXF1ZXN0AENyZWF0ZQBzZXRfTWV0aG9kAFN5c3RlbS5UZXh0AEVuY29kaW5nAGdldF9VVEY4
AEdldEJ5dGVzAHNldF9Db250ZW50VHlwZQBzZXRfQ29udGVudExlbmd0aABTeXN0ZW0uSU8AU3Ry
ZWFtAEdldFJlcXVlc3RTdHJlYW0AV3JpdGUAQ2xvc2UAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UA
SHR0cFdlYlJlc3BvbnNlAGdldF9TdGF0dXNEZXNjcmlwdGlvbgBHZXRSZXNwb25zZVN0cmVhbQBT
dHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBSZWFkVG9FbmQAZ2V0X0lubmVyRXhjZXB0aW9uAERhdGVU
aW1lS2luZABTVF8xNDk4ZmI3ZjNkZmQ0MWZiYmZiZmUwNThiNDRlZTRhNy5jc3Byb2ouUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAH9TAFQAXwAxADQAOQA4AGYAYgA3AGYAMwBkAGYA
ZAA0ADEAZgBiAGIAZgBiAGYAZQAwADUAOABiADQANABlAGUANABhADcALgBjAHMAcAByAG8AagAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAIUMAbwBuAG4AZQBjAHQA
aQBvAG4AUwB0AHIAaQBuAGcAACFTAGgAbwByAHQAUgBlAHEAdQBlAHMAdABXAGEAaQB0AAArTQBh
AG4AYQBnAGUARQBuAGcAaQBuAGUAQQB1AHQAaABUAG8AawBlAG4AACtzAGUAbABlAGMAdAAgACoA
IABmAHIAbwBtACAAUgBlAHEAdQBlAHMAdAAAF1cAbwByAGsATwByAGQAZQByAEkARAAAD0gAaQBz
AHQAbwByAHkAABVSAGUAcwBvAGwAdQB0AGkAbwBuAAAbQwBvAG4AdgBlAHIAcwBhAHQAaQBvAG4A
cwAAAQBtaAB0AHQAcABzADoALwAvAHMAZABwAG8AbgBkAGUAbQBhAG4AZAAuAG0AYQBuAGEAZwBl
AGUAbgBnAGkAbgBlAC4AYwBvAG0ALwBhAHAAaQAvAGoAcwBvAG4ALwByAGUAcQB1AGUAcwB0AC8A
ADU/AHMAYwBvAHAAZQA9AHMAZABwAG8AZABhAHAAaQAmAGEAdQB0AGgAdABvAGsAZQBuAD0AADcm
AE8AUABFAFIAQQBUAEkATwBOAF8ATgBBAE0ARQA9AEcARQBUAF8ASABJAFMAVABPAFIAWQAAPSYA
TwBQAEUAUgBBAFQASQBPAE4AXwBOAEEATQBFAD0ARwBFAFQAXwBSAEUAUwBPAEwAVQBUAEkATwBO
AABPLwBjAG8AbgB2AGUAcgBzAGEAdABpAG8AbgA/AHMAYwBvAHAAZQA9AHMAZABwAG8AZABhAHAA
aQAmAGEAdQB0AGgAdABvAGsAZQBuAD0AAEMmAE8AUABFAFIAQQBUAEkATwBOAF8ATgBBAE0ARQA9
AEcARQBUAF8AQwBPAE4AVgBFAFIAUwBBAFQASQBPAE4AUwAAJ3UAcABkAGEAdABlACAAUgBlAHEA
dQBlAHMAdAAgAHMAZQB0ACAAAANbAAAHXQA9ACcAAQUnACAAASVXAEgARQBSAEUAIABXAG8AcgBr
AE8AcgBkAGUAcgBJAEQAPQAAD1UAUABEAEEAVABFACAAAAdoAHIAcwAAB20AaQBuAAADJwABBScA
JwABByIAIgAiAACAs2kAbgBzAGUAcgB0ACAAaQBuAHQAbwAgAEkAbQBwAG8AcgB0AEgAaQBzAHQA
bwByAHkAIAAoAFsARABhAHQAZQBdACwAIABbAFcAbwByAGsATwByAGQAZQByAEkARABdACwAIABb
AEEAYwB0AGkAbwBuAF0ALAAgAFsAQwBvAG0AbQBlAG4AdABdACkAIABWAEEATABVAEUAUwAoAEcA
RQBUAEQAQQBUAEUAKAApACwAIAAABywAIAAnAAENJwAsACAAJwAnACkAAQluAHUAbABsAAADIAAA
CVAATwBTAFQAAENhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwB4AC0AdwB3AHcALQBmAG8AcgBtAC0A
dQByAGwAZQBuAGMAbwBkAGUAZAABIGLiVAnq40uZ9f9vr2Qp2wAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYOAgYI
AwYRHQQAAQECBAABAQ4GAAMBDg4OBAABCA4EAAEODgUAAgEODgUAAQIRHQUAAg4ODgMGERQEAAAA
AAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMA
AAE5AQAKU2NyaXB0TWFpbgMAVA4HVmVyc2lvbgMxLjBUDglQdWJsaXNoZXIAVA4LRGVzY3JpcHRp
b24ABCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBiACAQ4SfQUgABKAiQQgARwOBQACAg4OBAABAQgD
IAACDgcHEn0SgIESgIkODg4OBgADDg4ODgYHAg4SgKEDBwEOBQABDh0OBSAAEoCBAyAACA4HBg4S
fRKAgRKAoQ4dDgQgAQgOBSACDggIBwcFCAgICAgFIAIODg4KBwQOEn0SgIEdDgQAAQ0OBSABER0N
CQcEER0OER0dDgkgBgEICAgICAgHAAICER0RHQYAARKArQ4FAAASgLEFIAEdBQ4EIAEBCgUgABKA
tQcgAwEdBQgIBSAAEoC5BiABARKAtQUgABKAoRYHCRKArQ4dBRKAtRKAuRKAwQ4SgKEODCAHAQgI
CAgICBGAyS8BACpTVF8xNDk4ZmI3ZjNkZmQ0MWZiYmZiZmUwNThiNDRlZTRhNy5jc3Byb2oAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQAAAIBCAAAAAAAAAAAAAJ5CAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQQgAA
AAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIEAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABALti4RcAAAEAu2LhFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAwADAAMAA0AGIA
MAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAxADQAOQA4
AGYAYgA3AGYAMwBkAGYAZAA0ADEAZgBiAGIAZgBiAGYAZQAwADUAOABiADQANABlAGUANABhADcA
LgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADYAMQAxADMALgAyADUAMgA3ADUAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMQA0ADkAOABmAGIANwBmADMAZABmAGQANAAxAGYAYgBiAGYAYgBmAGUAMAA1ADgAYgA0
ADQAZQBlADQAYQA3AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAiAAv
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADEANAA5ADgAZgBiADcA
ZgAzAGQAZgBkADQAMQBmAGIAYgBmAGIAZgBlADAANQA4AGIANAA0AGUAZQA0AGEANwAuAGMAcwBw
AHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8A
MQA0ADkAOABmAGIANwBmADMAZABmAGQANAAxAGYAYgBiAGYAYgBmAGUAMAA1ADgAYgA0ADQAZQBl
ADQAYQA3AC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAxADEAMwAuADIANQAyADcANQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADEAMwAuADIANQAyADcANQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAALAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Parse History</DTS:Property>
<DTS:Property DTS:Name="DTSID">{6A5AD73D-0F07-4566-88DA-1842301145B2}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_2e799f077c9d467cbad6d2b92693f31d" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString,User::ManageEngineAuthToken,User::ShortRequestWait" ReadWriteVariables=""><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Text;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Collections.Generic;
using System.Net;


namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        #region Data Contract classes for GET_HISTORY
        public class Result
        {
            public string status { get; set; }
            public string message { get; set; }
        }

        [DataContract]
        public class CFIELD
        {
            //public string __invalid_name__OLD VALUE { get; set; }
            [DataMember]
            public string OLD_VALUE { get; set; }

            [DataMember]
            public string FIELD { get; set; }

            [DataMember]
            public string VALUE { get; set; }

            [DataMember]
            public string TYPE { get; set; }
        }

        [DataContract]
        public class Detail
        {

            [DataMember]
            public string TIME { get; set; }

            [DataMember]
            public string DISPLAYNAME { get; set; }

            [DataMember]
            public string DESCRIPTION { get; set; }

            [DataMember]
            public string OPERATION { get; set; }

            [DataMember]
            public string OWNER { get; set; }

            [DataMember]
            public List<CFIELD> FIELDS { get; set; }

            [DataMember]
            public string STATUS { get; set; }

            [DataMember]
            public string AUTOASSIGNED { get; set; }

            [DataMember]
            public string TOTALCOST { get; set; }

            [DataMember]
            public string CURRENCY { get; set; }

            [DataMember]
            public string WORKMINUTES { get; set; }

            [DataMember]
            public string WORKHOURS { get; set; }

            [DataMember]
            public string TECHNICIAN { get; set; }
            //public string __invalid_name__STOPPED BY { get; set; }
            //public string __invalid_name__APPROVED BY { get; set; }
            //public string __invalid_name__ASSIGNED TO { get; set; }
            //public string __invalid_name__ASSIGNED FROM { get; set; }
            //public string __invalid_name__OLD VALUE { get; set; }

            [DataMember]
            public string STOPPED_BY { get; set; }

            [DataMember]
            public string APPROVED_BY { get; set; }

            [DataMember]
            public string ASSIGNED_TO { get; set; }

            [DataMember]
            public string ASSIGNED_FROM { get; set; }

            [DataMember]
            public string OLD_VALUE { get; set; }

            [DataMember]
            public string VALUE { get; set; }
        }

        [DataContract]
        public class Operation
        {

            [DataMember]
            public string name { get; set; }

            [DataMember]
            public Result result { get; set; }

            [DataMember]
            public int totalRows { get; set; }

            [DataMember]
            public List<Detail> Details { get; set; }
        }

        [DataContract]
        public class RootObject
        {

            [DataMember]
            public Operation operation { get; set; }
        }
        #endregion

        #region Data Contract class for Short form of Request
        [DataContract]
        internal class RequestShortForm
        {
            [DataMember]
            internal string SUBJECT;

            [DataMember]
            internal string CREATEDTIME;

            [DataMember]
            internal string CREATEDBY;

            [DataMember]
            internal string ISOVERDUE;

            [DataMember]
            internal string PRIORITY;

            [DataMember]
            internal string REQUESTER;

            [DataMember]
            internal string DUEBYTIME;

            [DataMember]
            internal string WORKORDERID;

            [DataMember]
            internal string NOTIFICATIONSTATUS;

            [DataMember]
            internal string STATUS;

            [DataMember]
            internal string TECHNICIAN;
        };
        #endregion

        #region Data Contract class for Long form of Request
        [DataContract]
        internal class RequestLongForm
        {
            [DataMember]
            internal string WORKORDERID;

            [DataMember]
            internal string REQUESTER;

            [DataMember]
            internal string REQUESTEREMAIL;

            [DataMember]
            internal string CREATEDBY;

            [DataMember]
            internal string CREATEDTIME;

            [DataMember]
            internal string DUEBYTIME;

            [DataMember]
            internal string RESPONDEDTIME;

            [DataMember]
            internal string COMPLETEDTIME;

            [DataMember]
            internal string SHORTDESCRIPTION;

            [DataMember]
            internal string TIMESPENTONREQ;

            [DataMember]
            internal string SUBJECT;

            [DataMember]
            internal string REQUESTTEMPLATE;

            [DataMember]
            internal string TEMPLATEID;

            [DataMember]
            internal string SLA;

            [DataMember]
            internal string ASSET;

            [DataMember]
            internal string DEPARTMENT;

            [DataMember]
            internal string SITE;

            [DataMember]
            internal string CATEGORY;

            [DataMember]
            internal string SUBCATEGORY;

            [DataMember]
            internal string ITEM;

            [DataMember]
            internal string TECHNICIAN;

            [DataMember]
            internal string STATUS;

            [DataMember]
            internal string PRIORITY;

            [DataMember]
            internal string REQUESTTYPE;

            [DataMember]
            internal string HASATTACHMENTS;

            [DataMember]
            internal string HASNOTES;

            [DataMember]
            internal string HASCONVERSATION;

            [DataMember]
            internal string GROUP;

            [DataMember]
            internal string UDF_CHAR1;

            [DataMember]
            internal string UDF_CHAR2;

            [DataMember]
            internal string UDF_CHAR3;

            [DataMember]
            internal string UDF_CHAR4;

            [DataMember]
            internal string UDF_CHAR5;

            [DataMember]
            internal string UDF_CHAR6;

            [DataMember]
            internal string UDF_CHAR7;

            [DataMember]
            internal string UDF_CHAR8;

            [DataMember]
            internal string UDF_CHAR9;

            [DataMember]
            internal string UDF_CHAR10;

            [DataMember]
            internal string UDF_CHAR11;

            [DataMember]
            internal string UDF_CHAR12;

            [DataMember]
            internal string UDF_CHAR13;

            [DataMember]
            internal string UDF_CHAR14;

            [DataMember]
            internal string UDF_CHAR15;

            [DataMember]
            internal string UDF_CHAR16;

            [DataMember]
            internal string UDF_CHAR17;

            [DataMember]
            internal string UDF_CHAR18;

            [DataMember]
            internal string UDF_CHAR19;

            [DataMember]
            internal string UDF_CHAR20;

            [DataMember]
            internal string UDF_CHAR21;

            [DataMember]
            internal string UDF_CHAR22;

            [DataMember]
            internal string UDF_CHAR23;

            [DataMember]
            internal string UDF_CHAR24;

            [DataMember]
            internal string UDF_DATE1;

            [DataMember]
            internal string UDF_DATE2;

            [DataMember]
            internal string UDF_DATE3;

            [DataMember]
            internal string UDF_DATE4;
        }
        #endregion

        //public static List<request> requests = new List<request>();
        public static string connectionString;
        private static string authToken;
        public static int shortRequestWait;
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);

        public void Main()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            shortRequestWait = (int)Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();

            parseHistory();

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private static void parseHistory()
        {
            Execute("delete from Field");
            Execute("delete from detail");
            Execute("delete from operation");

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                using (SqlCommand command = new SqlCommand("select * from Request", connection))
                {
                    connection.Open();
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            string workorderid = reader["WorkOrderID"].ToString();
                            string complete = reader["HasFullInfo"].ToString();

                            //DateTime created;
                            //DateTime completed;

                            //if (DateTime.TryParse(reader["CreatedTime"].ToString(), out created) == false)
                            //    continue;

                            //if (DateTime.TryParse(reader["CompletedTime"].ToString(), out completed) == false)
                            //    continue;

                            string history = reader["History"].ToString();


                            history = history.Replace("OLD VALUE", "OLD_VALUE");
                            history = history.Replace("STOPPED BY", "STOPPED_BY");
                            history = history.Replace("APPROVED BY", "APPROVED_BY");
                            history = history.Replace("ASSIGNED TO", "ASSIGNED_TO");
                            history = history.Replace("ASSIGNED FROM", "ASSIGNED_FROM");


                            try
                            {
                                byte[] byteArray = Encoding.ASCII.GetBytes(history);
                                MemoryStream stream = new MemoryStream(byteArray);
                                stream.Position = 0;
                                DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(RootObject));
                                RootObject req = (RootObject)serializer.ReadObject(stream);

                                WriteOutHistory(req, workorderid);
                            }
                            catch (Exception)
                            {
                            }
                        }
                    }
                }
            }
            catch (Exception)
            {
            }


        }

        private static void WriteOutHistory(RootObject req, string workorderid)
        {
            // RemoveOldHistory(workorderid);
            InsertHistory(req, workorderid);
        }

        private static void InsertHistory(RootObject req, string workorderid)
        {
            try
            {
                int operationID = InsertOperation(req.operation, workorderid);
                if (req.operation.Details == null)
                    return;

                foreach (Detail det in req.operation.Details)
                {
                    int detailid = InsertDetail(det, operationID);
                    if (det.FIELDS != null)
                    {
                        foreach (CFIELD cf in det.FIELDS)
                        {
                            InsertField(cf, detailid);
                        }
                    }
                }
            }
            catch (Exception)
            {
            }
        }

        private static int InsertOperation(Operation op, string workorderid)
        {
            try
            {
                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandType = CommandType.StoredProcedure;
                        command.CommandText = "dbo.spInsertOperation";
                        command.Parameters.Add(new SqlParameter("@WorkOrderID", workorderid));
                        command.Parameters.Add(new SqlParameter("@Name", op.name));
                        command.Parameters.Add(new SqlParameter("@ResultMessage", op.result.message));
                        command.Parameters.Add(new SqlParameter("@ResultStatus", op.result.status));

                        SqlParameter pvOuputID = new SqlParameter();
                        pvOuputID.ParameterName = "@new_identity";
                        pvOuputID.DbType = DbType.Int32;
                        pvOuputID.Direction = ParameterDirection.Output;

                        command.Parameters.Add(pvOuputID);
                        command.ExecuteNonQuery();
                        return (int)pvOuputID.Value;
                    }
                }
            }
            catch (Exception)
            {
                return -1;
            }
        }

        private static int InsertDetail(Detail det, int operationid)
        {
            try
            {
                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandType = CommandType.StoredProcedure;
                        command.CommandText = "dbo.spInsertDetail";

                        command.Parameters.Add(new SqlParameter("@OperationID", operationid));
                        command.Parameters.Add(new SqlParameter("@OperationTime", UnixTimeinMStoSQLTime(det.TIME).Replace("'", "")));
                        command.Parameters.Add(new SqlParameter("@DisplayName", det.DISPLAYNAME));
                        command.Parameters.Add(new SqlParameter("@Description", det.DESCRIPTION));
                        command.Parameters.Add(new SqlParameter("@Operation", det.OPERATION));
                        command.Parameters.Add(new SqlParameter("@Owner", det.OWNER));
                        command.Parameters.Add(new SqlParameter("@Status", Sanitize(det.STATUS)));
                        command.Parameters.Add(new SqlParameter("@Autoassigned", Sanitize(det.AUTOASSIGNED)));
                        command.Parameters.Add(new SqlParameter("@TotalCost", (det.TOTALCOST == null) ? 0d : Convert.ToDouble(Sanitize(det.TOTALCOST))));
                        command.Parameters.Add(new SqlParameter("@Currency", Sanitize(det.CURRENCY)));
                        command.Parameters.Add(new SqlParameter("@WorkMinutes", Sanitize(det.WORKMINUTES)));
                        command.Parameters.Add(new SqlParameter("@WorkHours", Sanitize(det.WORKHOURS)));
                        command.Parameters.Add(new SqlParameter("@Technician", Sanitize(det.TECHNICIAN)));
                        command.Parameters.Add(new SqlParameter("@StoppedBy", Sanitize(det.STOPPED_BY)));
                        command.Parameters.Add(new SqlParameter("@ApprovedBy", Sanitize(det.APPROVED_BY)));
                        command.Parameters.Add(new SqlParameter("@AssignedTo", Sanitize(det.ASSIGNED_TO)));
                        command.Parameters.Add(new SqlParameter("@AssignedFrom", Sanitize(det.ASSIGNED_FROM)));
                        command.Parameters.Add(new SqlParameter("@OldValue", Sanitize(det.OLD_VALUE)));
                        command.Parameters.Add(new SqlParameter("@Value", Sanitize(det.VALUE)));

                        SqlParameter pvOuputID = new SqlParameter();
                        pvOuputID.ParameterName = "@new_identity";
                        pvOuputID.DbType = DbType.Int32;
                        pvOuputID.Direction = ParameterDirection.Output;

                        command.Parameters.Add(pvOuputID);
                        command.ExecuteNonQuery();
                        return (int)pvOuputID.Value;
                    }
                }
            }
            catch (Exception)
            {
                return -1;
            }

        }

        private static int InsertField(CFIELD field, int detailid)
        {
            try
            {
                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandType = CommandType.StoredProcedure;
                        command.CommandText = "dbo.spInsertField";
                        command.Parameters.Add(new SqlParameter("@DetailOrderID", detailid));
                        command.Parameters.Add(new SqlParameter("@Field", field.FIELD));
                        command.Parameters.Add(new SqlParameter("@OldValue", field.OLD_VALUE));
                        command.Parameters.Add(new SqlParameter("@Value", field.VALUE));
                        command.Parameters.Add(new SqlParameter("@FieldType", Sanitize(field.TYPE)));

                        SqlParameter pvOuputID = new SqlParameter();
                        pvOuputID.ParameterName = "@new_identity";
                        pvOuputID.DbType = DbType.Int32;
                        pvOuputID.Direction = ParameterDirection.Output;

                        command.Parameters.Add(pvOuputID);
                        command.ExecuteNonQuery();
                        return (int)pvOuputID.Value;
                    }
                }
            }
            catch (Exception)
            {
                return -1;
            }
        }


        private static void RemoveOldHistory(string workorderid)
        {
            try
            {
                // Find any operation that has this workerid and is GETHISTORY
                DataTable dtOperations = fillTableFromSQL("select * from operation where WorkOrderID=" + workorderid + " and name='GETHISTORY'");
                foreach (DataRow drOp in dtOperations.Rows)
                {
                    // For each operation, find the details
                    string operationid = drOp["OperationID"].ToString();
                    DataTable dtDetails = fillTableFromSQL("select * from detail where operationid=" + operationid);
                    foreach (DataRow drDet in dtDetails.Rows)
                    {
                        string detailid = drDet["DetailID"].ToString();
                        Execute("delete from Field where DetailID=" + detailid);
                        Execute("delete from detail where DetailID=" + detailid);
                    }
                    Execute("delete from operation where OperationID = " + operationid);
                }
            }
            catch (Exception)
            {
                throw;
            }
        }

        private static DataTable fillTableFromSQL(string sql)
        {
            DataTable table1 = new DataTable("");
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                using (SqlCommand cmd = new SqlCommand(sql, conn))
                {
                    cmd.CommandType = CommandType.Text;
                    SqlDataAdapter adapt = new SqlDataAdapter(cmd);
                    conn.Open();
                    adapt.Fill(table1);
                    conn.Close();
                }
            }
            return table1;
        }

        private int FindOperation(string workerid, string operationType)
        {
            return -1;
        }

        private static void Execute(string sql)
        {
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

        private static string Sanitize(string s)
        {
            if (s == null)
                return "";
            s = s.Replace("'", "''");
            s = s.Replace("\"\"\"", "");
            return s;
        }


        private static string UnixTimeinMStoSQLTime(string unixtime)
        {
            if (unixtime == null)
                return "null";

            if (unixtime.ToLower() == "null")
                return "null";

            if (unixtime == "")
                return "null";

            DateTime ourTime = (UnixEpoch.AddMilliseconds(Convert.ToDouble(unixtime)));


            ourTime = ourTime.AddHours(-5);
            if (isThisTimeInDST(ourTime))
                ourTime = ourTime.AddHours(+1);

            string ourTimeString = "'" + ourTime.ToShortDateString() + " " + ourTime.ToShortTimeString() + "'";
            return ourTimeString;
        }

        private static bool isThisTimeInDST(DateTime day)
        {
            // Good to move this to a table!
            if (day >= new DateTime(2013, 3, 10, 2, 0, 0) && day <= new DateTime(2013, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2014, 3, 9, 2, 0, 0) && day <= new DateTime(2014, 11, 2, 2, 0, 0))
                return true;

            if (day >= new DateTime(2015, 3, 8, 2, 0, 0) && day <= new DateTime(2015, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2016, 3, 13, 2, 0, 0) && day <= new DateTime(2016, 11, 6, 2, 0, 0))
                return true;

            if (day >= new DateTime(2017, 3, 12, 2, 0, 0) && day <= new DateTime(2017, 11, 5, 2, 0, 0))
                return true;

            if (day >= new DateTime(2018, 3, 11, 2, 0, 0) && day <= new DateTime(2018, 11, 4, 2, 0, 0))
                return true;

            if (day >= new DateTime(2019, 3, 10, 2, 0, 0) && day <= new DateTime(2019, 11, 3, 2, 0, 0))
                return true;

            if (day >= new DateTime(2020, 3, 8, 2, 0, 0) && day <= new DateTime(2020, 11, 1, 2, 0, 0))
                return true;

            if (day >= new DateTime(2021, 3, 14, 2, 0, 0) && day <= new DateTime(2021, 11, 7, 2, 0, 0))
                return true;

            return false;

        }

    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\st_2e799f077c9d467cbad6d2b92693f31d.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_2e799f077c9d467cbad6d2b92693f31d.csproj</RootNamespace>
    <AssemblyName>ST_2e799f077c9d467cbad6d2b92693f31d.csproj</AssemblyName>
    <ProjectGuid>{98FBFAF4-2089-4CA8-B0D6-ADB937B7B820}</ProjectGuid>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.ServiceModel.Web">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ScriptTask</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2e799f077c9d467cbad6d2b92693f31d.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2e799f077c9d467cbad6d2b92693f31d.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Settings.get_Default():ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Sett" +
    "ings")]

namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><BinaryItem Name="\bin\release\st_2e799f077c9d467cbad6d2b92693f31d.csproj.dll">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
Kh4CexgAAAQqIgIDfRgAAAQqHgJ7GQAABCoiAgN9GQAABCoeAnsaAAAEKiICA30aAAAEKh4CexsA
AAQqIgIDfRsAAAQqHgJ7HAAABCoiAgN9HAAABCoeAnsdAAAEKiICA30dAAAEKh4Cex4AAAQqIgID
fR4AAAQqHgJ7HwAABCoiAgN9HwAABCoeAnsgAAAEKiICA30gAAAEKh4CKE0AAAoqHgJ7IQAABCoi
AgN9IQAABCoeAnsiAAAEKiICA30iAAAEKh4CeyMAAAQqIgIDfSMAAAQqHgJ7JAAABCoiAgN9JAAA
BCoeAihNAAAKKh4CeyUAAAQqIgIDfSUAAAQqHgIoTQAACioeAihNAAAKKh4CKE0AAAoqGn5pAAAE
Ki5zVQAABoBpAAAEKh4CKFAAAAoqHgIoTQAACioAABMwAwAtAAAACAAAEX5qAAAELSByJQcAcNAM
AAACKB0AAApvUgAACnNTAAAKCgaAagAABH5qAAAEKhp+awAABCoeAoBrAAAEKgAAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAQlNKQgEAAQAAAAAADAAAAHYyLjAuNTA3MjcAAAAABQBsAAAAWBUAACN+AADEFQAAeBQA
ACNTdHJpbmdzAAAAADwqAACoBwAAI1VTAOQxAAAQAAAAI0dVSUQAAAD0MQAAhAMAACNCbG9iAAAA
AAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAAEAAAAAMAAAAawAAAFoAAAAxAAAAVAAAAAIAAADN
AAAACAAAAAcAAAAhAAAAQAAAAAQAAAABAAAACAAAAAEAAAAIAAAAAAAKAAEAAAAAAAYAWQEwAQoA
hQF+AQoAigF+AQ4ApgGRAQoA6gF+ARIAcwJnAgoAzASxBAoAXwxODAoAkAx7DAoAVA1CDQoAaw1C
DQoAiA1CDQoApw1CDQoAwA1CDQoA2Q1CDQoA9A1CDQoADw5CDQoAKA5CDQoAYQ5BDgoAgQ5BDhYA
rA6fDgYAuw4wARoAFA/0DhoALA/0DgoAUQ9+ARIAfA9mDxIAig9mDxIAqA+VDxIAug9mDxIA1g+V
DwoA4w9+AQoA/g/yDwoAJBAaEAoAMRAaEAoARRB+AQoAShB+AR4AqBCGECIA4BDDEAoABBF+AQoA
GBF+AR8AIhEAABIAXhGVDxIAaBFnAhIAlBFmDxIAuhFmDxIAyxGVDxIA6RFnAhIA+xFnAgoALBJ+
AQoAPRJ+ARIASxJnAhIAZhJnAgoAlBKBEhIAoBJnAhIAqBJmDxIAtxKVDwoAURN+AQoAXhNBDiIA
eRPDECIAjxPDEAoAthOjEwoA0xNCDQ4A/xPpEw4AGBTpEwAAAAABAAAAAAABAAEAAQAQADkARAAF
AAEAAQADAQAAbwAAAAkABQARAAIAEAB9AAAADQAIABEAAgAQAIQAAAANAAoAFgACABAAiwAAAA0A
DgAfAAIAEACSAAAADQAhAEYAAgAQAJwAAAANACUATwAFABAApwAAAA0AJgBSAAUAEAC4AAAADQAx
AFMAAAEQAMgA0QARAGkAVAAAABAABwHRAA0AagBXABYAvgETABEAzwETABYA2QEWADEA8wEZAAYG
2QIWAFaA4QJdAFaA6QJdAAEAHwMTAAEANwMTAAEAtQMTAAEA0AMTAAEA5wMTAAEA/gMTAAEAMwYT
AAEASQYTAAEAZgYTAAEAgwYTAAEAngYTAAEAtQaLAAEAzQYTAAEA5QYTAAEAAwcTAAEAHgcTAAEA
OAcTAAEAVQcTAAEAcAcTAAEAjAcTAAEAqAcTAAEAxQcTAAEA4gcTAAEAtQMTAAEA5wMTAAEACgkT
AAEAIAnDAAEAOAkWAAEAUwnHAAEApgnsAAMAywkTAAMA0wkTAAMA3wkTAAMA6QkTAAMA8wkTAAMA
/AkTAAMABgoTAAMAEAoTAAMAHAoTAAMANQgTAAMAcggTAAMAEAoTAAMA/AkTAAMALwoTAAMA3wkT
AAMA0wkTAAMABgoTAAMAPgoTAAMATAoTAAMAWgoTAAMAawoTAAMAywkTAAMAegoTAAMAigoTAAMA
lQoTAAMAmQoTAAMAnwoTAAMAqgoTAAMArwoTAAMAuAoTAAMAxAoTAAMAcggTAAMANQgTAAMA8wkT
AAMAyQoTAAMA1QoTAAMA5AoTAAMA7QoTAAMA/QoTAAMAAwsTAAMADQsTAAMAFwsTAAMAIQsTAAMA
KwsTAAMANQsTAAMAPwsTAAMASQsTAAMAUwsTAAMAXQsTAAMAaAsTAAMAcwsTAAMAfgsTAAMAiQsT
AAMAlAsTAAMAnwsTAAMAqgsTAAMAtQsTAAMAwAsTAAMAywsTAAMA1gsTAAMA4QsTAAMA7AsTAAMA
9wsTAAMAAgwTAAMADAwTAAMAFgwTAAMAIAwTABEAKgz1ABEAbwwDAREAnAwHAVAgAAAAAIYA/QEd
AAEA3CAAAAAAkQACAiEAAQDEIgAAAACRAA8CJQABANAiAAAAAJEAHwIlAAMAqCMAAAAAkQAtAiwA
BQDYJAAAAACRAD0CMwAHAEAoAAAAAJEASgI6AAkAsCkAAAAAkQBWAkEACwDoKgAAAACRAH0CRgAM
AGwrAAAAAIEAjgJMAA0AcCsAAAAAkQCcAkEADwDYKwAAAACRAKQCUgAQAAgsAAAAAJEArQJSABEA
xCwAAAAAkQDDAlcAEgCpLgAAAACGGNMCHQATAJIuAAAAAJEYShMhABMAsS4AAAAAhgjxAmsAEwC5
LgAAAACGCPwCbwATAMIuAAAAAIYIBwNrABQAyi4AAAAAhggTA28AFADTLgAAAACGGNMCHQAVANsu
AAAAAIYIXwNrABUA4y4AAAAAhghtA28AFQDsLgAAAACGCHsDawAWAPQuAAAAAIYIhQNvABYA/S4A
AAAAhgiPA2sAFwAFLwAAAACGCJkDbwAXAA4vAAAAAIYIowNrABgAFi8AAAAAhgisA28AGAAfLwAA
AACGGNMCHQAZACcvAAAAAIYILwRrABkALy8AAAAAhgg4BG8AGQA4LwAAAACGCEEEawAaAEAvAAAA
AIYIUQRvABoASS8AAAAAhghhBGsAGwBRLwAAAACGCHEEbwAbAFovAAAAAIYIgQRrABwAYi8AAAAA
hgiPBG8AHABrLwAAAACGCJ0EawAdAHMvAAAAAIYIpwRvAB0AfC8AAAAAhgjTBHgAHgCELwAAAACG
CN4EgQAeAI0vAAAAAIYI6QRrAB8AlS8AAAAAhgj0BG8AHwCeLwAAAACGCP8EawAgAKYvAAAAAIYI
EAVvACAAry8AAAAAhgghBWsAIQC3LwAAAACGCC8FbwAhAMAvAAAAAIYIPQVrACIAyC8AAAAAhghK
BW8AIgDRLwAAAACGCFcFawAjANkvAAAAAIYIZwVvACMA4i8AAAAAhgh3BWsAJADqLwAAAACGCIUF
bwAkAPMvAAAAAIYIkwVrACUA+y8AAAAAhgiiBW8AJQAEMAAAAACGCLEFawAmAAwwAAAAAIYIwAVv
ACYAFTAAAAAAhgjPBWsAJwAdMAAAAACGCN8FbwAnACYwAAAAAIYI7wVrACgALjAAAAAAhgj/BW8A
KAA3MAAAAACGCA8GawApAD8wAAAAAIYIIQZvACkASDAAAAAAhghfA2sAKgBQMAAAAACGCG0DbwAq
AFkwAAAAAIYIjwNrACsAYTAAAAAAhgiZA28AKwBqMAAAAACGGNMCHQAsAHIwAAAAAIYIrghrACwA
ejAAAAAAhgi3CG8ALACDMAAAAACGCMAInAAtAIswAAAAAIYIywihAC0AlDAAAAAAhgjWCKcALgCc
MAAAAACGCOQIqwAuAKUwAAAAAIYI8giwAC8ArTAAAAAAhgj+CLkALwC2MAAAAACGGNMCHQAwAL4w
AAAAAIYIignhADAAxjAAAAAAhgiYCeYAMADPMAAAAACGGNMCHQAxANcwAAAAAIYY0wIdADEA3zAA
AAAAhhjTAh0AMQDnMAAAAACWCDoM+QAxAPowAAAAAIYY0wIdADEA7jAAAAAAkRhKEyEAMQACMQAA
AACDGNMCHQAxAAwxAAAAAJMIrAwLATEARTEAAAAAkwjADBABMQBMMQAAAACTCMwMFQExAAAAAQDg
DAAAAgDkDAAAAQDgDAAAAgDkDAAAAQDwDAAAAgDkDAAAAQDzDAAAAgD3DAAAAQADDQAAAgAJDQAA
AQDkDAAAAQASDQAAAQAWDQAAAgAfDQAAAQASDQAAAQAtDQAAAQAvDQAAAQA4DQAAAQA8DQAAAQA8
DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAA
AQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8
DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAAAQA8DQAA
AQA8DVEA0wJvAFkA0wJvAGEA0wJvAGkA0wJvAHEA0wJvAHkA0wJvAIEA0wJvAIkA0wJvAJEA0wJv
AJkA0wKrAKEA0wIdAKkA0wJvAAkAzQ5fAbEAHg9kAbkANQ9pAcEAPg9vARkASA9rALEAVw+rANEA
0wJvANkA0wJzAeEAtQ8dANkAyA96AfEANQ9/AfkA6g+EAQEBBxCKAQEBERCQAQkB0wKWAREBOBCc
ARkBXBChASkB0wKzATEB9BC6AfEA/xDBATkBEBEdAAwALRHhARQAOxHzARwALRHhASQAOxHzASQA
RxHBARQARxHBAdEAUBEeAlEBdBEjAlEBhBFvANkAqxEqAmkB0wIwAmEBxxE2AmkB0wIdAHEB1xFv
AHEB8BE/AnEBDhJGAlEBHBKnAHEBPg9vAYkBNBJYAvkARBJdAjEAXRJkAqEBLRFqAqkBOxFvAbEB
NQ9/AfkARBJwAqkBRxHBATEA0wJvALkB0wKRAsEBxRKXAuEAyhIdAPkA0BJrAPkA2BKwAikA5BK2
AikA9BK2AikA/RJrACkADxNrAPkARBK8AikA0wLMAikAIRPWAikANxPWAikA0wLeAgkA0wIdANEB
0wIdABkA0wIdANkB0wIdAOEB0wIdACEA0wIdAOkB0wIdABkB3BPrAkEA0wLxAvkB0wL+AggAGABh
AAgAHABmAC4AKwAOAy4AMwBEAy4AOwA+Ay4AIwA+Ay4ACwAOAy4AEwA+Ay4AGwA+Ay4AUwBbAy4A
WwBkA0MAYwAlAWkAewJmAIkAewJmAKMAcwJmAKkAewJmAMMAcwJmAMkAewJmAOMAcwJmAOkAewJm
AAEBYwJmAAMBcwJmAAkBewJmACEBYwJmACMBcwJmACkBewJmAEEBYwJmAEMBcwJmAEkBewJmAGEB
YwJmAGkBewJmAIEBYwJmAIMBiwJmAIkBewJmAKEBYwJmAKkBewJmAMEBYwJmAMkBewJmAOEBYwJm
AOkBewJmAAECYwJmAAkCewJmACACYwJmACECYwJmACkCewJmAEACYwJmAEECYwJmAEkCewJmAGAC
YwJmAGECYwJmAGkCewJmAIACYwJmAIECYwJmAIkCewJmAKECYwJmAKkCewJmAMACYwJmAMECYwJm
AMkCewJmAOACYwJmAOECYwJmAOkCewJmAAADYwJmAAEDYwJmAAkDewJmACADYwJmACEDYwJmACkD
ewJmAEADYwJmAEEDYwJmAEkDewJmAGADYwJmAGEDYwJmAGkDewJmAIADYwJmAIEDYwJmAIkDewJm
AKADYwJmAKEDYwJmAKkDewJmAMEDYwJmAMkDewJmAOADYwJmAOEDYwJmAAAEYwJmAAEEYwJmAAkE
owIFAyAEYwJmACEEYwJmACkEowIFA0AEYwJmAEEEYwJmAGAEYwJmAGEEYwJmAIAEYwJmAIEEYwJm
AKAEYwJmAKEEYwJmAMAEYwJmAMEEewJmAOAEYwJmAOEEewJmAAAFYwJmAAEFewJmACAFYwJmACEF
ewJmAEAFYwJmAEEFewJmAGAFYwJmAGEFewJmAIAFYwJmAIEFewJmAKAFYwJmAKEFewJmAMAFYwJm
AMEFewJmAOAFYwJmAOEFewJmAAAGYwJmAAEGewJmACAGYwJmACEGewJmAEAGYwJmAEEGewJmAGAG
YwJmAGEGewJmAIAGYwJmAIEGewJmAKAGYwJmAKEGewJmAMAGYwJmAMEGewJmAOAGYwJmAOEGewJm
AAAHYwJmAAEHewJmACAHYwJmACEHewJmAEAHYwJmAEEHewJmAGAHYwJmAGEHewJmAIAHYwJmAIEH
ewJmAKAHYwJmAKEHewJmAMAHYwJmAMEHewJmAOAHYwJmAOEHewJmAAAIYwJmAAEIewJmACAIYwJm
ACEIewJmAEAIYwJmAEEIewJmAGAIYwJmAGEIewJmAIAIYwJmAIEIewJmAKEIewJmAMAIYwJmAMEI
ewJmAOAIYwJmAOEIewJmAAAJYwJmAAEJewJmACAJYwJmACEJewJmAEAJYwJmAEEJewJmAGAJYwJm
AGEJewJmAIAJYwJmAIEJewJmAKAJYwJmAKEJewJmAMEJewJmAOAJYwJmAOEJewJmAAAKYwJmAAEK
ewJmACEKewJmAEEKewJmAGEKewJmAIEKewJmAKEKewJmAMEKewJmAOEKewJmAAELewJmACELewJm
AEELewJmAGELewJmAIELewJmAKELewJmAMELewJmAOELewJmAAEMewJmACEMewJmAEEMewJmAGEM
ewJmAIEMewJmAKEMewJmAMEMewJmAOEMewJmAAENewJmACENYwJmAMUBBwJNAnYCnQKpAsIC+QIE
AAEABQADAAYABwAHABoACAAeAAsAHwAMACAAAABQA3QAAABXA3QAAAAUBHQAAAAeBHQAAAAkBHQA
AAAqBHQAAAABCHQAAAAGCHQAAAASCHQAAAAeCHQAAAAoCHQAAAAuCJMAAAA1CHQAAAA8CHQAAABJ
CHQAAABTCHQAAABcCHQAAABoCHQAAAByCHQAAAB9CHQAAACICHQAAACUCHQAAACgCHQAAAAUBHQA
AAAkBHQAAABsCXQAAABxCc8AAAB4CdQAAACCCdgAAADBCfAAAABGDP4AAABfDBsBAADYDCABAgAR
AAMAAQASAAMAAgATAAUAAQAUAAUAAgAWAAcAAQAXAAcAAgAYAAkAAQAZAAkAAgAaAAsAAQAbAAsA
AgAcAA0AAQAdAA0AAgAfAA8AAQAgAA8AAgAhABEAAQAiABEAAgAjABMAAQAkABMAAgAlABUAAQAm
ABUAAgAnABcAAQAoABcAAgApABkAAQAqABkAAgArABsAAQAsABsAAgAtAB0AAQAuAB0AAgAvAB8A
AQAwAB8AAQAyACEAAgAxACEAAgAzACMAAQA0ACMAAgA1ACUAAQA2ACUAAgA3ACcAAQA4ACcAAgA5
ACkAAQA6ACkAAgA7ACsAAQA8ACsAAgA9AC0AAQA+AC0AAgA/AC8AAQBAAC8AAQBCADEAAgBBADEA
AgBDADMAAQBEADMAAgBGADUAAQBHADUAAgBIADcAAQBJADcAAQBLADkAAgBKADkAAgBMADsAAQBN
ADsAAQBQAD0AAgBPAD0AAgBUAD8AAgBYAEEAAgBZAEMAAQBaAEMA2gHrAfgB/wEEgAAAAQAAABQY
AlQAAAAAAABEAAAACgAAAAAAAAAAAAAAAQARAQAAAAACAAAAAAAAAAAAAAAKAHUBAAAAAAIAAAAA
AAAAAAAAAAoAfgEAAAAAAgAAAAAAAAAAAAAACgBnAgAAAAADAAUAAAAAAAAAAAAKAJ8OAAAAAAoA
AAAAAAAAAAAAAAEA1Q4AAAAAAwAFAAAAAAAAAAAAqgFuEAAAAAADAAAAAAAAAAAAAAAKAMMQAAAA
AAAAAAABAAAALRQAAAMAAgAEAAIABQACAAYAAgAHAAIACAACAAkAAgAKAAIAAAAAAAA8TW9kdWxl
PgBTVF8yZTc5OWYwNzdjOWQ0NjdjYmFkNmQyYjkyNjkzZjMxZC5jc3Byb2ouZGxsAFNjcmlwdE1h
aW4AU1RfMmU3OTlmMDc3YzlkNDY3Y2JhZDZkMmI5MjY5M2YzMWQuY3Nwcm9qAFNjcmlwdFJlc3Vs
dHMAUmVzdWx0AENGSUVMRABEZXRhaWwAT3BlcmF0aW9uAFJvb3RPYmplY3QAUmVxdWVzdFNob3J0
Rm9ybQBSZXF1ZXN0TG9uZ0Zvcm0AU2V0dGluZ3MAU1RfMmU3OTlmMDc3YzlkNDY3Y2JhZDZkMmI5
MjY5M2YzMWQuY3Nwcm9qLlByb3BlcnRpZXMAUmVzb3VyY2VzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBtc2NvcmxpYgBTeXN0ZW0ARW51bQBPYmplY3QAU3lzdGVt
LkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAY29ubmVjdGlvblN0cmluZwBh
dXRoVG9rZW4Ac2hvcnRSZXF1ZXN0V2FpdABEYXRlVGltZQBVbml4RXBvY2gATWFpbgBwYXJzZUhp
c3RvcnkAV3JpdGVPdXRIaXN0b3J5AEluc2VydEhpc3RvcnkASW5zZXJ0T3BlcmF0aW9uAEluc2Vy
dERldGFpbABJbnNlcnRGaWVsZABSZW1vdmVPbGRIaXN0b3J5AFN5c3RlbS5EYXRhAERhdGFUYWJs
ZQBmaWxsVGFibGVGcm9tU1FMAEZpbmRPcGVyYXRpb24ARXhlY3V0ZQBTYW5pdGl6ZQBVbml4VGlt
ZWluTVN0b1NRTFRpbWUAaXNUaGlzVGltZUluRFNUAC5jdG9yAHZhbHVlX18AU3VjY2VzcwBGYWls
dXJlAGdldF9zdGF0dXMAc2V0X3N0YXR1cwBnZXRfbWVzc2FnZQBzZXRfbWVzc2FnZQA8c3RhdHVz
PmtfX0JhY2tpbmdGaWVsZAA8bWVzc2FnZT5rX19CYWNraW5nRmllbGQAc3RhdHVzAG1lc3NhZ2UA
Z2V0X09MRF9WQUxVRQBzZXRfT0xEX1ZBTFVFAGdldF9GSUVMRABzZXRfRklFTEQAZ2V0X1ZBTFVF
AHNldF9WQUxVRQBnZXRfVFlQRQBzZXRfVFlQRQA8T0xEX1ZBTFVFPmtfX0JhY2tpbmdGaWVsZAA8
RklFTEQ+a19fQmFja2luZ0ZpZWxkADxWQUxVRT5rX19CYWNraW5nRmllbGQAPFRZUEU+a19fQmFj
a2luZ0ZpZWxkAE9MRF9WQUxVRQBGSUVMRABWQUxVRQBUWVBFAGdldF9USU1FAHNldF9USU1FAGdl
dF9ESVNQTEFZTkFNRQBzZXRfRElTUExBWU5BTUUAZ2V0X0RFU0NSSVBUSU9OAHNldF9ERVNDUklQ
VElPTgBnZXRfT1BFUkFUSU9OAHNldF9PUEVSQVRJT04AZ2V0X09XTkVSAHNldF9PV05FUgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEAZ2V0X0ZJRUxEUwBzZXRfRklFTERTAGdldF9T
VEFUVVMAc2V0X1NUQVRVUwBnZXRfQVVUT0FTU0lHTkVEAHNldF9BVVRPQVNTSUdORUQAZ2V0X1RP
VEFMQ09TVABzZXRfVE9UQUxDT1NUAGdldF9DVVJSRU5DWQBzZXRfQ1VSUkVOQ1kAZ2V0X1dPUktN
SU5VVEVTAHNldF9XT1JLTUlOVVRFUwBnZXRfV09SS0hPVVJTAHNldF9XT1JLSE9VUlMAZ2V0X1RF
Q0hOSUNJQU4Ac2V0X1RFQ0hOSUNJQU4AZ2V0X1NUT1BQRURfQlkAc2V0X1NUT1BQRURfQlkAZ2V0
X0FQUFJPVkVEX0JZAHNldF9BUFBST1ZFRF9CWQBnZXRfQVNTSUdORURfVE8Ac2V0X0FTU0lHTkVE
X1RPAGdldF9BU1NJR05FRF9GUk9NAHNldF9BU1NJR05FRF9GUk9NADxUSU1FPmtfX0JhY2tpbmdG
aWVsZAA8RElTUExBWU5BTUU+a19fQmFja2luZ0ZpZWxkADxERVNDUklQVElPTj5rX19CYWNraW5n
RmllbGQAPE9QRVJBVElPTj5rX19CYWNraW5nRmllbGQAPE9XTkVSPmtfX0JhY2tpbmdGaWVsZAA8
RklFTERTPmtfX0JhY2tpbmdGaWVsZAA8U1RBVFVTPmtfX0JhY2tpbmdGaWVsZAA8QVVUT0FTU0lH
TkVEPmtfX0JhY2tpbmdGaWVsZAA8VE9UQUxDT1NUPmtfX0JhY2tpbmdGaWVsZAA8Q1VSUkVOQ1k+
a19fQmFja2luZ0ZpZWxkADxXT1JLTUlOVVRFUz5rX19CYWNraW5nRmllbGQAPFdPUktIT1VSUz5r
X19CYWNraW5nRmllbGQAPFRFQ0hOSUNJQU4+a19fQmFja2luZ0ZpZWxkADxTVE9QUEVEX0JZPmtf
X0JhY2tpbmdGaWVsZAA8QVBQUk9WRURfQlk+a19fQmFja2luZ0ZpZWxkADxBU1NJR05FRF9UTz5r
X19CYWNraW5nRmllbGQAPEFTU0lHTkVEX0ZST00+a19fQmFja2luZ0ZpZWxkAFRJTUUARElTUExB
WU5BTUUAREVTQ1JJUFRJT04AT1BFUkFUSU9OAE9XTkVSAEZJRUxEUwBTVEFUVVMAQVVUT0FTU0lH
TkVEAFRPVEFMQ09TVABDVVJSRU5DWQBXT1JLTUlOVVRFUwBXT1JLSE9VUlMAVEVDSE5JQ0lBTgBT
VE9QUEVEX0JZAEFQUFJPVkVEX0JZAEFTU0lHTkVEX1RPAEFTU0lHTkVEX0ZST00AZ2V0X25hbWUA
c2V0X25hbWUAZ2V0X3Jlc3VsdABzZXRfcmVzdWx0AGdldF90b3RhbFJvd3MAc2V0X3RvdGFsUm93
cwBnZXRfRGV0YWlscwBzZXRfRGV0YWlscwA8bmFtZT5rX19CYWNraW5nRmllbGQAPHJlc3VsdD5r
X19CYWNraW5nRmllbGQAPHRvdGFsUm93cz5rX19CYWNraW5nRmllbGQAPERldGFpbHM+a19fQmFj
a2luZ0ZpZWxkAG5hbWUAcmVzdWx0AHRvdGFsUm93cwBEZXRhaWxzAGdldF9vcGVyYXRpb24Ac2V0
X29wZXJhdGlvbgA8b3BlcmF0aW9uPmtfX0JhY2tpbmdGaWVsZABvcGVyYXRpb24AU1VCSkVDVABD
UkVBVEVEVElNRQBDUkVBVEVEQlkASVNPVkVSRFVFAFBSSU9SSVRZAFJFUVVFU1RFUgBEVUVCWVRJ
TUUAV09SS09SREVSSUQATk9USUZJQ0FUSU9OU1RBVFVTAFJFUVVFU1RFUkVNQUlMAFJFU1BPTkRF
RFRJTUUAQ09NUExFVEVEVElNRQBTSE9SVERFU0NSSVBUSU9OAFRJTUVTUEVOVE9OUkVRAFJFUVVF
U1RURU1QTEFURQBURU1QTEFURUlEAFNMQQBBU1NFVABERVBBUlRNRU5UAFNJVEUAQ0FURUdPUlkA
U1VCQ0FURUdPUlkASVRFTQBSRVFVRVNUVFlQRQBIQVNBVFRBQ0hNRU5UUwBIQVNOT1RFUwBIQVND
T05WRVJTQVRJT04AR1JPVVAAVURGX0NIQVIxAFVERl9DSEFSMgBVREZfQ0hBUjMAVURGX0NIQVI0
AFVERl9DSEFSNQBVREZfQ0hBUjYAVURGX0NIQVI3AFVERl9DSEFSOABVREZfQ0hBUjkAVURGX0NI
QVIxMABVREZfQ0hBUjExAFVERl9DSEFSMTIAVURGX0NIQVIxMwBVREZfQ0hBUjE0AFVERl9DSEFS
MTUAVURGX0NIQVIxNgBVREZfQ0hBUjE3AFVERl9DSEFSMTgAVURGX0NIQVIxOQBVREZfQ0hBUjIw
AFVERl9DSEFSMjEAVURGX0NIQVIyMgBVREZfQ0hBUjIzAFVERl9DSEFSMjQAVURGX0RBVEUxAFVE
Rl9EQVRFMgBVREZfREFURTMAVURGX0RBVEU0AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABE
ZWZhdWx0AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VN
YW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAcmVxAHdvcmtvcmRlcmlkAG9w
AGRldABvcGVyYXRpb25pZABmaWVsZABkZXRhaWxpZABzcWwAd29ya2VyaWQAb3BlcmF0aW9uVHlw
ZQBzAHVuaXh0aW1lAGRheQB2YWx1ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkFkZEluAEFkZEluQXR0cmlidXRl
AFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRT
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMA
VmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAEludDMyAHNldF9UYXNrUmVzdWx0
AFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAFNxbENvbW1hbmQAU3lzdGVtLkRh
dGEuQ29tbW9uAERiQ29ubmVjdGlvbgBPcGVuAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBE
YkRhdGFSZWFkZXIAU3RyaW5nAFJlcGxhY2UAU3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X0FTQ0lJ
AEdldEJ5dGVzAFN5c3RlbS5JTwBNZW1vcnlTdHJlYW0AU3RyZWFtAHNldF9Qb3NpdGlvbgBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFN5c3RlbS5TZXJ2aWNlTW9kZWwu
V2ViAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uSnNvbgBEYXRhQ29udHJhY3RKc29uU2Vy
aWFsaXplcgBTeXN0ZW0uUnVudGltZS5TZXJpYWxpemF0aW9uAFhtbE9iamVjdFNlcmlhbGl6ZXIA
UmVhZE9iamVjdABSZWFkAElEaXNwb3NhYmxlAERpc3Bvc2UARXhjZXB0aW9uAEVudW1lcmF0b3IA
R2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABNb3ZlTmV4dABDcmVhdGVDb21tYW5kAERiQ29tbWFu
ZABDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5cGUAc2V0X0NvbW1hbmRUZXh0AFNxbFBhcmFtZXRl
ckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMAU3FsUGFyYW1ldGVyAEFkZABEYlBhcmFtZXRlcgBz
ZXRfUGFyYW1ldGVyTmFtZQBEYlR5cGUAc2V0X0RiVHlwZQBQYXJhbWV0ZXJEaXJlY3Rpb24Ac2V0
X0RpcmVjdGlvbgBFeGVjdXRlTm9uUXVlcnkAQ29udmVydABUb0RvdWJsZQBEb3VibGUAQ29uY2F0
AERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAFN5
c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRvcgBEYXRhUm93AFNxbERhdGFBZGFwdGVyAERiRGF0
YUFkYXB0ZXIARmlsbABDbG9zZQBUb0xvd2VyAG9wX0VxdWFsaXR5AEFkZE1pbGxpc2Vjb25kcwBB
ZGRIb3VycwBUb1Nob3J0RGF0ZVN0cmluZwBUb1Nob3J0VGltZVN0cmluZwBvcF9HcmVhdGVyVGhh
bk9yRXF1YWwAb3BfTGVzc1RoYW5PckVxdWFsAC5jY3RvcgBEYXRlVGltZUtpbmQAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRlAERhdGFNZW1iZXJBdHRyaWJ1
dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAQXNzZW1i
bHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU1RfMmU3OTlmMDc3YzlkNDY3Y2JhZDZkMmI5MjY5
M2YzMWQuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAACFDAG8AbgBuAGUA
YwB0AGkAbwBuAFMAdAByAGkAbgBnAAAhUwBoAG8AcgB0AFIAZQBxAHUAZQBzAHQAVwBhAGkAdAAA
K00AYQBuAGEAZwBlAEUAbgBnAGkAbgBlAEEAdQB0AGgAVABvAGsAZQBuAAAjZABlAGwAZQB0AGUA
IABmAHIAbwBtACAARgBpAGUAbABkAAAlZABlAGwAZQB0AGUAIABmAHIAbwBtACAAZABlAHQAYQBp
AGwAACtkAGUAbABlAHQAZQAgAGYAcgBvAG0AIABvAHAAZQByAGEAdABpAG8AbgAAK3MAZQBsAGUA
YwB0ACAAKgAgAGYAcgBvAG0AIABSAGUAcQB1AGUAcwB0AAAXVwBvAHIAawBPAHIAZABlAHIASQBE
AAAXSABhAHMARgB1AGwAbABJAG4AZgBvAAAPSABpAHMAdABvAHIAeQAAE08ATABEACAAVgBBAEwA
VQBFAAATTwBMAEQAXwBWAEEATABVAEUAABVTAFQATwBQAFAARQBEACAAQgBZAAAVUwBUAE8AUABQ
AEUARABfAEIAWQAAF0EAUABQAFIATwBWAEUARAAgAEIAWQAAF0EAUABQAFIATwBWAEUARABfAEIA
WQAAF0EAUwBTAEkARwBOAEUARAAgAFQATwAAF0EAUwBTAEkARwBOAEUARABfAFQATwAAG0EAUwBT
AEkARwBOAEUARAAgAEYAUgBPAE0AABtBAFMAUwBJAEcATgBFAEQAXwBGAFIATwBNAAArZABiAG8A
LgBzAHAASQBuAHMAZQByAHQATwBwAGUAcgBhAHQAaQBvAG4AABlAAFcAbwByAGsATwByAGQAZQBy
AEkARAAAC0AATgBhAG0AZQAAHUAAUgBlAHMAdQBsAHQATQBlAHMAcwBhAGcAZQAAG0AAUgBlAHMA
dQBsAHQAUwB0AGEAdAB1AHMAABtAAG4AZQB3AF8AaQBkAGUAbgB0AGkAdAB5AAAlZABiAG8ALgBz
AHAASQBuAHMAZQByAHQARABlAHQAYQBpAGwAABlAAE8AcABlAHIAYQB0AGkAbwBuAEkARAAAHUAA
TwBwAGUAcgBhAHQAaQBvAG4AVABpAG0AZQAAAycAAQEAGUAARABpAHMAcABsAGEAeQBOAGEAbQBl
AAAZQABEAGUAcwBjAHIAaQBwAHQAaQBvAG4AABVAAE8AcABlAHIAYQB0AGkAbwBuAAANQABPAHcA
bgBlAHIAAA9AAFMAdABhAHQAdQBzAAAbQABBAHUAdABvAGEAcwBzAGkAZwBuAGUAZAAAFUAAVABv
AHQAYQBsAEMAbwBzAHQAABNAAEMAdQByAHIAZQBuAGMAeQAAGUAAVwBvAHIAawBNAGkAbgB1AHQA
ZQBzAAAVQABXAG8AcgBrAEgAbwB1AHIAcwAAF0AAVABlAGMAaABuAGkAYwBpAGEAbgAAFUAAUwB0
AG8AcABwAGUAZABCAHkAABdAAEEAcABwAHIAbwB2AGUAZABCAHkAABdAAEEAcwBzAGkAZwBuAGUA
ZABUAG8AABtAAEEAcwBzAGkAZwBuAGUAZABGAHIAbwBtAAATQABPAGwAZABWAGEAbAB1AGUAAA1A
AFYAYQBsAHUAZQAAI2QAYgBvAC4AcwBwAEkAbgBzAGUAcgB0AEYAaQBlAGwAZAAAHUAARABlAHQA
YQBpAGwATwByAGQAZQByAEkARAAADUAARgBpAGUAbABkAAAVQABGAGkAZQBsAGQAVAB5AHAAZQAA
VXMAZQBsAGUAYwB0ACAAKgAgAGYAcgBvAG0AIABvAHAAZQByAGEAdABpAG8AbgAgAHcAaABlAHIA
ZQAgAFcAbwByAGsATwByAGQAZQByAEkARAA9AAAtIABhAG4AZAAgAG4AYQBtAGUAPQAnAEcARQBU
AEgASQBTAFQATwBSAFkAJwABF08AcABlAHIAYQB0AGkAbwBuAEkARAAAT3MAZQBsAGUAYwB0ACAA
KgAgAGYAcgBvAG0AIABkAGUAdABhAGkAbAAgAHcAaABlAHIAZQAgAG8AcABlAHIAYQB0AGkAbwBu
AGkAZAA9AAARRABlAHQAYQBpAGwASQBEAABDZABlAGwAZQB0AGUAIABmAHIAbwBtACAARgBpAGUA
bABkACAAdwBoAGUAcgBlACAARABlAHQAYQBpAGwASQBEAD0AAEVkAGUAbABlAHQAZQAgAGYAcgBv
AG0AIABkAGUAdABhAGkAbAAgAHcAaABlAHIAZQAgAEQAZQB0AGEAaQBsAEkARAA9AABVZABlAGwA
ZQB0AGUAIABmAHIAbwBtACAAbwBwAGUAcgBhAHQAaQBvAG4AIAB3AGgAZQByAGUAIABPAHAAZQBy
AGEAdABpAG8AbgBJAEQAIAA9ACAAAAUnACcAAQciACIAIgAACW4AdQBsAGwAAAMgAAB/UwBUAF8A
MgBlADcAOQA5AGYAMAA3ADcAYwA5AGQANAA2ADcAYwBiAGEAZAA2AGQAMgBiADkAMgA2ADkAMwBm
ADMAMQBkAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAAAIR2fggJUk9Pvd2UdBO940kACImEXc2AgMyRCLd6XFYZNOCJAgYOAgYIAwYRFQMg
AAEDAAABBgACARIgDgYAAggSHA4GAAIIEhgIBgACCBIUCAQAAQEOBQABEhkOBSACCA4OBAABDg4F
AAECERUDBhEMBAAAAAAEAQAAAAMgAA4EIAEBDgMoAA4IIAAVEh0BEhQJIAEBFRIdARIUBwYVEh0B
EhQIKAAVEh0BEhQEIAASEAUgAQESEAMgAAgEIAEBCAggABUSHQESGAkgAQEVEh0BEhgDBhIQBwYV
Eh0BEhgEKAASEAMoAAgIKAAVEh0BEhgEIAASHAUgAQESHAMGEhwEKAASHAMGEiwEAAASLAQIABIs
AwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJTkBAApTY3JpcHRNYWluAwBUDgdWZXJz
aW9uAzEuMFQOCVB1Ymxpc2hlcgBUDgtEZXNjcmlwdGlvbgAEIAASWQQgABJdBSABEmEcAyAAHAYg
AgEOEmkEIAASdQQgARwOBSACDg4OBQAAEoCBBSABHQUOBSABAR0FBCABAQoIAAESgI0RgJEIMb84
Vq02TjUGIAEBEoCNBiABHBKAiQMgAAIUBwkSaRJtEnUODh0FEoCFEoCVEiAGFRIdARIYCSAAFRGA
pQETAAcVEYClARIYBCAAEwAGFRIdARIUBxURgKUBEhQWBwYIEhgIEhQVEYClARIYFRGApQESFAQg
ABJtBiABARGArQUgABKAsQUgAgEOHAggARKAtRKAtQYgAQERgL0GIAEBEYDBCgcEEmkSbRKAtQgE
AAENDgYAAw4ODg4FIAASgM0FIAASgNUFAAIODg4aBwoSGRKA2Q4SGRKA2Q4SgNUSgNUSgJ0SgJ0F
IAEBEm0FIAEIEhkLBwQSGRJpEm0SgN0GBwISaRJtBQACAg4OBSABERUNBQABDh0OCQcEERUOERUd
DgkgBgEICAgICAgHAAICERURFQwgBwEICAgICAgRgOUFIAASgPkHIAIBDhKA+QQHARIhBiABARGB
AQgBAAIAAAAAAC8BACpTVF8yZTc5OWYwNzdjOWQ0NjdjYmFkNmQyYjkyNjkzZjMxZC5jc3Byb2oA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQCwZwAAAAAAAAAAAADOZwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwGcA
AAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACBAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAA
AAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAA8AMAAAAAAAAAAAAA8AM0AAAA
VgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAAJUFBgAAAEAAlQU
GD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8A
AAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBFADAAABAFMAdAByAGkAbgBn
AEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAwADAAMAA0AGIAMAAAAIAAKwABAEYAaQBsAGUA
RABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAyAGUANwA5ADkAZgAwADcANwBjADkAZAA0
ADYANwBjAGIAYQBkADYAZAAyAGIAOQAyADYAOQAzAGYAMwAxAGQALgBjAHMAcAByAG8AagAAAAAA
QAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA2ADQALgAyADEANQAw
ADYAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMgBlADcAOQA5AGYA
MAA3ADcAYwA5AGQANAA2ADcAYwBiAGEAZAA2AGQAMgBiADkAMgA2ADkAMwBmADMAMQBkAC4AYwBz
AHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAiAAvAAEATwByAGkAZwBpAG4AYQBs
AEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADIAZQA3ADkAOQBmADAANwA3AGMAOQBkADQANgA3AGMA
YgBhAGQANgBkADIAYgA5ADIANgA5ADMAZgAzADEAZAAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAA
AHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMgBlADcAOQA5AGYAMAA3ADcA
YwA5AGQANAA2ADcAYwBiAGEAZAA2AGQAMgBiADkAMgA2ADkAMwBmADMAMQBkAC4AYwBzAHAAcgBv
AGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYA
NAAuADIAMQA1ADAANgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAxADYANAAuADIAMQA1ADAANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYAAADAAAAOA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAA==</BinaryItem></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Remove merged tickets (OLD)</DTS:Property>
<DTS:Property DTS:Name="DTSID">{93bdca63-8d4b-489c-9be6-024d94a7af38}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_2e72ba2f4aa14016ba4b1a6e2ac16de0" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString,User::ListOfValidTickets,User::ManageEngineAuthToken,User::ShortRequestWait" ReadWriteVariables=""><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Text;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Collections.Generic;
using System.Net;


namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        //public static List<request> requests = new List<request>();
        public static string connectionString;
        private static string authToken;
        public static int shortRequestWait;
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);

        // NEW
        public static List<string> tickets = new List<string>();

        public void Main()
        {
            ////// Get the list of tickets we read from ManageEngine //////
            tickets  = (List<string>) Dts.Variables["ListOfValidTickets"].Value;


            ////// Go through each ticket //////
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            using (SqlConnection connection = new SqlConnection(connectionString))
            using (SqlCommand command = new SqlCommand("select WorkOrderID from request", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string workorderid = reader["WorkOrderID"].ToString();
                        if (tickets.Contains(workorderid) == false)
                        {
                            string sql = "Delete from request where WorkOrderID=" + workorderid;
                            Execute(sql);
                            WriteLog("REMOVEMERGED", workorderid);
                        }
                    }
                }
            }



        }

        public void OldMain()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            shortRequestWait = (int)Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();

            List<string> remove = new List<string>();

            using (SqlConnection connection = new SqlConnection(connectionString))
            using (SqlCommand command = new SqlCommand("select * from Detail where operation='MERGEWITH' and Description like '%Request ID%'", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string description = reader["Description"].ToString();

                        // No string.Where in .net 3.5  :(
                        // description = new String(description.Where(c => (char.IsDigit(c) || c == ',')).ToArray());
                        
                        string tickets = "";
                        foreach (char c in description)
                            if ((c == ',') || ((c >= '0') && (c <= '9')))
                                tickets += c;

                        string[] numbers = tickets.Split(',');
                        foreach (string s in numbers)
                            if ((s != "") && !remove.Contains(s))
                                remove.Add(s);
                    }
                }
            }

            remove.Sort();
            string sql = "delete from request where workorderid in (";
            foreach (string s in remove)
                sql += s + ",";
            sql += "88888888)";
            Execute(sql);

            WriteLog("REMOVEMERGED", sql);

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        static void WriteLog(string action, string comment)
        {
            string sql = "insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), 0, '" + action + "','" + comment + "')";
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

        private static void Execute(string sql)
        {
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\st_2e72ba2f4aa14016ba4b1a6e2ac16de0.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  --><PropertyGroup><ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><OutputType>Library</OutputType><NoStandardLibraries>false</NoStandardLibraries><RootNamespace>ST_2e799f077c9d467cbad6d2b92693f31d.csproj</RootNamespace><AssemblyName>st_2e72ba2f4aa14016ba4b1a6e2ac16de0</AssemblyName><ProjectGuid>{98FBFAF4-2089-4CA8-B0D6-ADB937B7B820}</ProjectGuid><TargetFrameworkVersion>v3.5</TargetFrameworkVersion></PropertyGroup><!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  --><PropertyGroup><PreBuildEvent></PreBuildEvent><PostBuildEvent></PostBuildEvent></PropertyGroup><!-- This sections specifies references for the project. --><ItemGroup><Reference Include="System" /><Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" /><Reference Include="System.Core"><RequiredTargetFramework>3.5</RequiredTargetFramework></Reference><Reference Include="System.Data" /><Reference Include="System.Runtime.Serialization"><RequiredTargetFramework>3.0</RequiredTargetFramework></Reference><Reference Include="System.ServiceModel.Web"><RequiredTargetFramework>3.5</RequiredTargetFramework></Reference><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  --><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile><!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    --></ItemGroup><ItemGroup><WCFMetadata Include="Service References\" /></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}"><ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" /><Host Name="SSIS_ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ScriptTask</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Settings.get_Default():ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Sett" +
    "ings")]

namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2e799f077c9d467cbad6d2b92693f31d.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2e799f077c9d467cbad6d2b92693f31d.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><BinaryItem Name="\bin\release\st_2e72ba2f4aa14016ba4b1a6e2ac16de0.dll">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
Kh4CKDUAAAoqAAAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjIuMC41MDcyNwAA
AAAFAGwAAAA8BQAAI34AAKgFAACsBwAAI1N0cmluZ3MAAAAAVA0AANgDAAAjVVMALBEAABAAAAAj
R1VJRAAAADwRAAA0AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAAAPoBMwAWAAABAAAAKgAAAAUA
AAALAAAADQAAAAQAAAA1AAAAAgAAAA4AAAAFAAAAAgAAAAMAAAAEAAAAAgAAAAEAAAAGAAAAAQAA
AAEAAAAAAAoAAQAAAAAABgDbAMYACgD8AL8ADgBLASIBCgBnAb8ACgCnAZYBCgDYAcMBCgBUAr8A
CgCCAmcCCgDyAuACCgAJA+ACCgAmA+ACCgBFA+ACCgBeA+ACCgB3A+ACCgCSA+ACCgCtA+ACCgDG
A+ACCgD/A98DCgAfBN8DCgBhBN8DCgCWBIMECgCzBL8ACgC4BL8ACgDcBOACBgAIBfIEBgAhBfIE
EgBDBTYFDgBSBSIBFgCrBYsFFgDDBYsFGgAKBvQFGgAYBvQFGgA2BiMGGgBIBvQFGgBkBiMGCgB6
Br8ACgCNBr8ACgChBr8ACgCxBr8AIwDeBgAAGgApByMGCgBTB78AAAAAAAEAAAAAAAEAAQAAARAA
MgA7AAUAAQABAAAAEABxADsACQACAAQAAQAQAHsAhgANAAQACAADAQAAsQAAABEACQAOABEAbAET
ABEAtwElABEA5AEpABYAKAJHABEAOQJHABYAQwJKADEAXQJNABYAiQJRAAYGrwJKAFaAtwJjAFaA
vwJjAFAgAAAAAJYIfAEXAAEAYyAAAAAAhhiIARwAAQBXIAAAAACRGHwEewABAGsgAAAAAIMYiAEc
AAEAdCAAAAAAkwj0AS0AAQCtIAAAAACTCAgCMgABALQgAAAAAJMIFAI3AAEAvCAAAAAAhgCRAhwA
AgDIIQAAAACGAJYCHAACAAAkAAAAAJEAngJYAAIAmCQAAAAAkQCnAl4ABAAhJQAAAACGGIgBHAAF
AAAlAAAAAJEYfAR7AAUAAAABAMcCAAABAM0CAAACANQCAAABANwCSQCIAXEAUQCIAXEAWQCIAXEA
YQCIAXEAaQCIAXEAcQCIAXEAeQCIAXEAgQCIAXEAiQCIAXEAkQCIAXYAmQCIARwAoQCIARwACQCI
ARwAqQCIARwAEQCIARwAsQDKBH8AsQDlBIYAKQCIAYsAyQCIAZcA2QCIAXEAGQBkBeAA4QC1BeUA
6QDMBeoA8QDVBfAAEQDfBfoA+QCIAXEAAQGIAf4ACQFDBhwAAQFWBgUBGQHMBQsBDABxBhABIQGB
BhYBGQGIBhwBKQGZBhwADACIARwAIQGnBi0BIQGBBjIBIQG2BjgBIQHBBjwBIQHHBkMBDADVBkkB
DADZBhwADADpBk8BFAD3BmABIQGBBmUBFAADBxwB4QAMB3YAIQGBBpEB+QAbB5cBSQEzB3EASQFD
BzgBOQCIAbABGQCIARwACAAoAGcACAAsAGwAIQBjAGwALgATAO0BLgAbAO0BLgAjAO0BLgBTAAoC
LgALAL0BLgBbABMCLgArAL0BLgAzAPMBLgA7AO0BSQCbAJ0AYwBzAGwAaQCbAJ0AgwCjAKYAkgAg
AWwBnQGoAQIAAQADAAIAAACOASAAAACnAT0AAAAgAkIAAgABAAMAAgAFAAUAAgAGAAcAAQAHAAcA
9ABZAQSAAAABAAAA4RfvYgAAAAAAAD0EAAACAAAAAAAAAAAAAAABAL8AAAAAAAIAAAAAAAAAAAAA
AAEA8wAAAAAACgAAAAAAAAAAAAAACgADAQAAAAADAAUAAAAAAAAAAAABADYFAAAAAAoAAAAAAAAA
AAAAAAoAbAUAAAAAAgAAAAAAAAAAAAAAAQDoBQAAAAAAAAAAAQAAAGAHAAAFAAQAAAAAAAA8TW9k
dWxlPgBzdF8yZTcyYmEyZjRhYTE0MDE2YmE0YjFhNmUyYWMxNmRlMC5kbGwAU2V0dGluZ3MAU1Rf
MmU3OTlmMDc3YzlkNDY3Y2JhZDZkMmI5MjY5M2YzMWQuY3Nwcm9qLlByb3BlcnRpZXMAUmVzb3Vy
Y2VzAFNjcmlwdE1haW4AU1RfMmU3OTlmMDc3YzlkNDY3Y2JhZDZkMmI5MjY5M2YzMWQuY3Nwcm9q
AFNjcmlwdFJlc3VsdHMAU3lzdGVtAFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAG1zY29ybGliAE9iamVjdABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UARW51bQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQALmN0b3IARGVmYXVs
dABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGNvbm5lY3Rpb25TdHJpbmcAYXV0aFRv
a2VuAHNob3J0UmVxdWVzdFdhaXQARGF0ZVRpbWUAVW5peEVwb2NoAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAExpc3RgMQB0aWNrZXRzAE1haW4AT2xkTWFpbgBXcml0ZUxvZwBFeGVjdXRlAHZh
bHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGFjdGlvbgBjb21tZW50AHNxbABTeXN0ZW0uUmVm
bGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5
VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAc3Rf
MmU3MmJhMmY0YWExNDAxNmJhNGIxYTZlMmFjMTZkZTAAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fz
c2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkFkZEluAEFkZEluQXR0cmlidXRlAFNjcmlwdE9iamVj
dE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0
X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLlNxbENsaWVu
dABTcWxDb25uZWN0aW9uAFNxbENvbW1hbmQAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlv
bgBPcGVuAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBEYkRhdGFSZWFkZXIAQ29udGFpbnMA
U3RyaW5nAENvbmNhdABSZWFkAElEaXNwb3NhYmxlAERpc3Bvc2UASW50MzIAZ2V0X0NoYXJzAENo
YXIAZ2V0X0xlbmd0aABTcGxpdABvcF9JbmVxdWFsaXR5AEFkZABTb3J0AEVudW1lcmF0b3IAR2V0
RW51bWVyYXRvcgBnZXRfQ3VycmVudABNb3ZlTmV4dABzZXRfVGFza1Jlc3VsdABDcmVhdGVDb21t
YW5kAERiQ29tbWFuZABzZXRfQ29tbWFuZFRleHQARXhlY3V0ZU5vblF1ZXJ5AERhdGVUaW1lS2lu
ZABTVF8yZTc5OWYwNzdjOWQ0NjdjYmFkNmQyYjkyNjkzZjMxZC5jc3Byb2ouUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAAAAAH9TAFQAXwAyAGUANwA5ADkAZgAwADcANwBjADkAZAA0ADYA
NwBjAGIAYQBkADYAZAAyAGIAOQAyADYAOQAzAGYAMwAxAGQALgBjAHMAcAByAG8AagAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAJUwAaQBzAHQATwBmAFYAYQBsAGkA
ZABUAGkAYwBrAGUAdABzAAAhQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAP3MAZQBs
AGUAYwB0ACAAVwBvAHIAawBPAHIAZABlAHIASQBEACAAZgByAG8AbQAgAHIAZQBxAHUAZQBzAHQA
ABdXAG8AcgBrAE8AcgBkAGUAcgBJAEQAAE1EAGUAbABlAHQAZQAgAGYAcgBvAG0AIAByAGUAcQB1
AGUAcwB0ACAAdwBoAGUAcgBlACAAVwBvAHIAawBPAHIAZABlAHIASQBEAD0AABlSAEUATQBPAFYA
RQBNAEUAUgBHAEUARAAAIVMAaABvAHIAdABSAGUAcQB1AGUAcwB0AFcAYQBpAHQAACtNAGEAbgBh
AGcAZQBFAG4AZwBpAG4AZQBBAHUAdABoAFQAbwBrAGUAbgAAgKlzAGUAbABlAGMAdAAgACoAIABm
AHIAbwBtACAARABlAHQAYQBpAGwAIAB3AGgAZQByAGUAIABvAHAAZQByAGEAdABpAG8AbgA9ACcA
TQBFAFIARwBFAFcASQBUAEgAJwAgAGEAbgBkACAARABlAHMAYwByAGkAcAB0AGkAbwBuACAAbABp
AGsAZQAgACcAJQBSAGUAcQB1AGUAcwB0ACAASQBEACUAJwABF0QAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAQBVZABlAGwAZQB0AGUAIABmAHIAbwBtACAAcgBlAHEAdQBlAHMAdAAgAHcAaABlAHIAZQAg
AHcAbwByAGsAbwByAGQAZQByAGkAZAAgAGkAbgAgACgAAAMsAAATOAA4ADgAOAA4ADgAOAA4ACkA
AIC7aQBuAHMAZQByAHQAIABpAG4AdABvACAASQBtAHAAbwByAHQASABpAHMAdABvAHIAeQAgACgA
WwBEAGEAdABlAF0ALAAgAFsAVwBvAHIAawBPAHIAZABlAHIASQBEAF0ALAAgAFsAQQBjAHQAaQBv
AG4AXQAsACAAWwBDAG8AbQBtAGUAbgB0AF0AKQAgAFYAQQBMAFUARQBTACgARwBFAFQARABBAFQA
RQAoACkALAAgADAALAAgACcAAQcnACwAJwABBScAKQABAAAAuKKWNj1Y0Ee33H/dQ++/RwAIt3pc
Vhk04IkIiYRdzYCAzJEDBhIIBAAAEggDIAABBAgAEggDBhIVAwYSGQQAABIVBAAAEhkFAAEBEhkE
CAASFQQIABIZAgYOAgYIAwYRHQYGFRIhAQ4FAAIBDg4EAAEBDgMGERQEAAAAAAQBAAAABCABAQ4E
IAEBCAMAAAEGAAESWRFdBCAAEmEGIAIBDhJhBAcBEhUFIAEBEWkIAQACAAAAAAA5AQAKU2NyaXB0
TWFpbgMAVA4HVmVyc2lvbgMxLjBUDglQdWJsaXNoZXIAVA4LRGVzY3JpcHRpb24ABCAAEnEEIAAS
dQUgARJ5HAMgABwFFRIhAQ4DIAAOBiACAQ4SfQUgABKAiQQgARwOBSABAhMABQACDg4OAyAAAgwH
BRJ9EoCBEoCJDg4EIAEDCAUAAg4cHAMgAAgGIAEdDh0DBQACAg4OBSABARMACSAAFRGAoQETAAYV
EYChAQ4EIAATAAYAAw4ODg4kBxEVEiEBDhJ9EoCBEoCJDg4DHQ4ODg4OCB0DHQ4IFRGAoQEOBQAB
Dh0OBSAAEoCBCgcEDhJ9EoCBHQ4HBwISfRKAgQwgBwEICAgICAgRgKkvAQAqU1RfMmU3OTlmMDc3
YzlkNDY3Y2JhZDZkMmI5MjY5M2YzMWQuY3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAIA5AAAAAAAAAAAA
AJ45AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQOQAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADQAwAAAAAAAAAAAADQAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA72LhFwAAAQDvYuEXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEMAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAADAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADIA
ZQA3ADkAOQBmADAANwA3AGMAOQBkADQANgA3AGMAYgBhAGQANgBkADIAYgA5ADIANgA5ADMAZgAz
ADEAZAAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4ANgAxADEAMwAuADIANQAzADIANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABzAHQAXwAyAGUANwAyAGIAYQAyAGYANABhAGEAMQA0ADAAMQA2AGIAYQA0AGIAMQBhADYA
ZQAyAGEAYwAxADYAZABlADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANQAAAHgAKAABAE8AcgBpAGcA
aQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQAXwAyAGUANwAyAGIAYQAyAGYANABhAGEAMQA0
ADAAMQA2AGIAYQA0AGIAMQBhADYAZQAyAGEAYwAxADYAZABlADAALgBkAGwAbAAAAHgAKwABAFAA
cgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMgBlADcAOQA5AGYAMAA3ADcAYwA5AGQANAA2
ADcAYwBiAGEAZAA2AGQAMgBiADkAMgA2ADkAMwBmADMAMQBkAC4AYwBzAHAAcgBvAGoAAAAAAEQA
DwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADEAMwAuADIANQAz
ADIANwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NgAxADEAMwAuADIANQAzADIANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAsDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact"></DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Calculate Completion Time</DTS:Property>
<DTS:Property DTS:Name="DTSID">{15a6f0a6-53b0-4bb1-b17b-540112a23f4e}</DTS:Property>
<DTS:Property DTS:Name="Description">Script Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><ScriptProject Name="ST_c86ca1fbb0c540d8b3d85c1f59c14637" VSTAMajorVersion="2" VSTAMinorVersion="1" Language="CSharp" EntryPoint="Main" ReadOnlyVariables="User::ConnectionString,User::ManageEngineAuthToken,User::ShortRequestWait" ReadWriteVariables=""><ProjectItem Name="\scriptmain.cs">
<![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Text;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Collections.Generic;
using System.Net;


namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj
{
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        //public static List<request> requests = new List<request>();
        public static string connectionString;
        private static string authToken;
        public static int shortRequestWait;
        private static readonly DateTime UnixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
        private static List<DateTime> holidays = new List<DateTime>();

        public void Main()
        {
            connectionString = Dts.Variables["ConnectionString"].Value.ToString();
            shortRequestWait = (int)Dts.Variables["ShortRequestWait"].Value;
            authToken = Dts.Variables["ManageEngineAuthToken"].Value.ToString();

            calculateCompletionTime();
            WriteLog("CALCCOMPLETED", "");

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        static void WriteLog(string action, string comment)
        {
            string sql = "insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), 0, '" + action + "','" + comment + "')";
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

        private static void calculateCompletionTime()
        {
            readHolidays();

            using (SqlConnection connection = new SqlConnection(connectionString))
            // was before March 23 2016 - using (SqlCommand command = new SqlCommand("select * from Request where completiontimeinbusinessopenhours is null", connection))
            using (SqlCommand command = new SqlCommand("select * from Request", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string workorderid = reader["WorkOrderID"].ToString();
                        string complete = reader["HasFullInfo"].ToString();

                        string createdText = reader["CreatedTime"].ToString();
                        string completedText = reader["CompletedTime"].ToString();

                        if ((createdText != "") && (completedText != ""))
                        {
                            DateTime created = Convert.ToDateTime(createdText);
                            DateTime completed = Convert.ToDateTime(completedText);

                            if (completed.Year != 1969)
                            {
                                int BizHours = calcBizHours(created, completed);

                                int hours = (int)(completed - created).TotalHours;
                                updateCompletedHours(workorderid, hours, BizHours);

                            }
                            else
                                updateCompletedHours(workorderid, 0, 0);
                        }

                    }
                }
            }
        }

        private static void readHolidays()
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            using (SqlCommand command = new SqlCommand("select * from Holidays", connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                    while (reader.Read())
                        holidays.Add(Convert.ToDateTime(reader["Date"].ToString()));
            }
        }


        private static int calcBizHours(DateTime start, DateTime end)
        {
            if (end <= start)
                return 0;

            int hours = 0;

            DateTime runner = start;
            while (true)
            {
                int bizhour = 1;

                if ((runner.DayOfWeek == DayOfWeek.Saturday) || (runner.DayOfWeek == DayOfWeek.Sunday))
                    bizhour = 0;
                if (runner.Hour < 9)
                    bizhour = 0;
                if (runner.Hour > 17)
                    bizhour = 0;
                if (holidays.FindIndex(x => x == runner.Date) >= 0)
                    bizhour = 0;

                hours += bizhour;

                runner = runner.AddHours(1d);
                if (runner >= end)
                    return hours;
            }
        }

        private static void updateCompletedHours(string workorderid, int hours, int bizhours)
        {
            try
            {
                // singular
                string sql = "update Request set ";

                sql += "[CompletionTimeInHours]=" + hours.ToString() + ", ";
                sql += "[CompletionTimeInBusinessOpenHours]=" + bizhours.ToString() + " ";
                sql += "WHERE WorkOrderID=" + workorderid;

                using (SqlConnection con = new SqlConnection(connectionString))
                {
                    con.Open();
                    using (SqlCommand command = con.CreateCommand())
                    {
                        command.CommandText = sql;
                        command.ExecuteNonQuery();
                    }
                }

            }
            catch (Exception)
            {
                return;
            }
        }


        private static void Execute(string sql)
        {
            using (SqlConnection con = new SqlConnection(connectionString))
            {
                con.Open();
                using (SqlCommand command = con.CreateCommand())
                {
                    command.CommandText = sql;
                    command.ExecuteNonQuery();
                }
            }
        }

    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\resources.resx">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem><ProjectItem Name="\st_c86ca1fbb0c540d8b3d85c1f59c14637.csproj">
<![CDATA[<Project ToolsVersion="3.5" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  --><PropertyGroup><ProjectTypeGuids>{A860303F-1F3F-4691-B57E-529FC101A107};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><OutputType>Library</OutputType><NoStandardLibraries>false</NoStandardLibraries><RootNamespace>ST_2e799f077c9d467cbad6d2b92693f31d.csproj</RootNamespace><AssemblyName>st_c86ca1fbb0c540d8b3d85c1f59c14637</AssemblyName><ProjectGuid>{98FBFAF4-2089-4CA8-B0D6-ADB937B7B820}</ProjectGuid><TargetFrameworkVersion>v3.5</TargetFrameworkVersion></PropertyGroup><!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  --><PropertyGroup><PreBuildEvent></PreBuildEvent><PostBuildEvent></PostBuildEvent></PropertyGroup><!-- This sections specifies references for the project. --><ItemGroup><Reference Include="System" /><Reference Include="System.AddIn, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture=MSIL" /><Reference Include="System.Core"><RequiredTargetFramework>3.5</RequiredTargetFramework></Reference><Reference Include="System.Data" /><Reference Include="System.Runtime.Serialization"><RequiredTargetFramework>3.0</RequiredTargetFramework></Reference><Reference Include="System.ServiceModel.Web"><RequiredTargetFramework>3.5</RequiredTargetFramework></Reference><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  --><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile><!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    --></ItemGroup><ItemGroup><WCFMetadata Include="Service References\" /></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{A860303F-1F3F-4691-B57E-529FC101A107}"><ProjectProperties HostName="VSTAHostName" HostPackage="{C1B21C64-9E6F-4923-A89D-9F958503C1CE}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" /><Host Name="SSIS_ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ScriptTask</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem><ProjectItem Name="\properties\settings.designer.cs">
<![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Settings.get_Default():ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties.Sett" +
    "ings")]

namespace ST_2e799f077c9d467cbad6d2b92693f31d.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem><ProjectItem Name="\properties\settings.settings">
<![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem><ProjectItem Name="\properties\assemblyinfo.cs">
<![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2e799f077c9d467cbad6d2b92693f31d.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2e799f077c9d467cbad6d2b92693f31d.csproj")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem><BinaryItem Name="\bin\release\st_c86ca1fbb0c540d8b3d85c1f59c14637.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAArw8lYAAAAAAAAAAOAAAiELAQgAAB4AAAAIAAAAAAAAHjwA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw7AABPAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
PAAAAAAAAEgAAAACAAUAwCYAAAwVAAABAAAAAAAAAAgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA0AAAoqEzADAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDgAACm8PAAAKcxAAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBMAAAoqAAMwAgCNAAAAAAAAAAIoFQAACm8WAAAKcoEAAHBvFwAACm8YAAAKbxkA
AAqABAAABAIoFQAACm8WAAAKcqMAAHBvFwAACm8YAAAKpR8AAAGABgAABAIoFQAACm8WAAAKcsUA
AHBvFwAACm8YAAAKbxkAAAqABQAABCgKAAAGcvEAAHByDQEAcCgJAAAGAigVAAAKFm8aAAAKKgAA
ABswAwBtAAAAAgAAERuNIAAAAQ0JFnIPAQBwogkXAqIJGHLMAQBwogkZA6IJGnLUAQBwogkoGwAA
Cgp+BAAABHMcAAAKCwdvHQAACgdvHgAACgwIBm8fAAAKCG8gAAAKJt4KCCwGCG8hAAAK3N4KBywG
B28hAAAK3CoAAAABHAAAAgBGABBWAAoAAAAAAgA5ACliAAoAAAAAGzADABQBAAADAAARKAsAAAZ+
BAAABHMcAAAKCnLaAQBwBnMiAAAKCwZvHQAACgdvIwAACgw4tgAAAAhyBgIAcG8kAAAKbxkAAAoN
CHIeAgBwbyQAAApvGQAACiYIcjYCAHBvJAAACm8ZAAAKEwQIck4CAHBvJAAACm8ZAAAKEwURBHIN
AQBwKCUAAAosYhEFcg0BAHAoJQAACixUEQQoJgAAChMGEQUoJgAAChMHEgcoJwAACiCxBwAALiwR
BhEHKAwAAAYTCBEHEQYoKAAAChMKEgooKQAACmkTCQkRCREIKA0AAAYrCAkWFigNAAAGCG8qAAAK
Oj/////eCggsBghvIQAACtzeCgcsBgdvIQAACtzeCgYsBgZvIQAACtwqASgAAAIAKQDI8QAKAAAA
AAIAHADh/QAKAAAAAAIAEAD5CQEKAAAAABswAwByAAAABAAAEX4EAAAEcxwAAAoKcmoCAHAGcyIA
AAoLBm8dAAAKB28jAAAKDCsffggAAAQIcpgCAHBvJAAACm8ZAAAKKCYAAApvKwAACghvKgAACi3Z
3goILAYIbyEAAArc3goHLAYHbyEAAArc3goGLAYGbyEAAArcKgAAASgAAAIAJAArTwAKAAAAAAIA
FwBEWwAKAAAAAAIACwBcZwAKAAAAAB4CKA0AAAoqSgMCfAwAAAQoLAAACigtAAAKKgATMAQArgAA
AAUAABEUDHMRAAAGDQMCKC4AAAosAhYqFgoJAn0MAAAEFwsJfAwAAAQoLwAAChwuDQl8DAAABCgv
AAAKLQIWCwl8DAAABCgwAAAKHwkvAhYLCXwMAAAEKDAAAAofETECFgt+CAAABAgtDQn+BhIAAAZz
MQAACgwIbzIAAAoWMgIWCwYHWAoJCXwMAAAEIwAAAAAAAPA/KDMAAAp9DAAABAl7DAAABAMoNAAA
Cjlw////BioAABswBACHAAAABgAAEXKiAgBwCgZyygIAcA8BKDUAAApy/AIAcCg2AAAKCgZyAgMA
cA8CKDUAAApyTAMAcCg2AAAKCgZyUAMAcAIoNwAACgp+BAAABHMcAAAKCwdvHQAACgdvHgAACgwI
Bm8fAAAKCG8gAAAKJt4KCCwGCG8hAAAK3N4KBywGB28hAAAK3N4DJt4AKgABKAAAAgBbABBrAAoA
AAAAAgBOACl3AAoAAAAAAAAAAIODAAMsAAABGzACAD8AAAAHAAARfgQAAARzHAAACgoGbx0AAAoG
bx4AAAoLBwJvHwAACgdvIAAACibeCgcsBgdvIQAACtzeCgYsBgZvIQAACtwqAAEcAAACABgAECgA
CgAAAAACAAsAKTQACgAAAACCILIHAAAXFxYWFhdzOAAACoAHAAAEczkAAAqACAAABCoeAig6AAAK
KgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjIuMC41MDcyNwAAAAAFAGwAAAD4BQAA
I34AAGQGAACwCAAAI1N0cmluZ3MAAAAAFA8AAHgDAAAjVVMAjBIAABAAAAAjR1VJRAAAAJwSAABw
AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAAAPoBMwAWAAABAAAALQAAAAYAAAAMAAAAEgAAAAoA
AAA6AAAAAgAAAA8AAAAHAAAAAgAAAAMAAAAEAAAAAgAAAAEAAAAGAAAAAQAAAAIAAAAAAAoAAQAA
AAAABgDPAMgACgDrANYADgBLASIBBgBnAcgABgB9AWwBBgCuAZkBBgBUAsgABgCCAmcCBgBXA0UD
BgBuA0UDBgCLA0UDBgCqA0UDBgDDA0UDBgDcA0UDBgD3A0UDBgASBEUDBgArBEUDBgBkBEQEBgCE
BEQEBgDZBMYEBgD2BMgABgD7BMgABgAfBUUDCgBLBTUFCgBkBTUFBgB5BUQEEgCoBZsFDgC3BSIB
FgAQBvAFFgAoBvAFBgBNBsgABgBiBsgAGgCSBnwGGgCzBqAGGgDFBnwGGgDeBqAGBgAIB8gAGgAc
B3wGGgA4B6AGBgBTB8gABgBvB8gABgD2B8gABgAXCMgABgBMCMgABgBWCMgAAAAAAAEAAAAAAAEA
AQAAABAAMgA8AAUAAQABAAABEAByADwACQADAAUAAQAQAHsAhgANAAQACAADAQAAsQAAABEACQAR
AAMBEACfBwAABQAMABEAEQCNARMAEQC6ARcAEQAEAjkAFgAoAkcAEQA5AkcAFgBDAkoAMQBdAk0A
EQCJAlEABgbvAkoAVoD3AncAVoD/AncABgCyB00AUCAAAAAAgxjKARsAAQBYIAAAAACTCNABHwAB
AJEgAAAAAJMI5AEkAAEAmCAAAAAAkwjwASkAAQCgIAAAAACWCBQCPQACALMgAAAAAIYYygEbAAIA
pyAAAAAAkRiUBV8AAgC8IAAAAACGAJICGwACAFghAAAAAJEAlwJZAAIA8CEAAAAAkQCgAl8ABAA4
IwAAAACRALgCXwAEAPwjAAAAAJEAxQJjAAQAuCQAAAAAkQDSAmsABgB0JQAAAACRAOcCcgAJAP0l
AAAAAIYYygEbAAoA3CUAAAAAkRiUBV8ACgDgIwAAAACGGMoBGwAKAOgjAAAAAIYAuQeGAQoAAAAB
AAcDAAABAA0DAAACABQDAAABABwDAAACACIDAAABACYDAAACADIDAAADADgDAAABAEEDAAABAMwH
SQDKAYUAUQDKAYUAWQDKAYUAYQDKAYUAaQDKAYUAcQDKAYUAeQDKAYUAgQDKAYUAiQDKAYUAkQDK
AYoAmQDKARsAoQDKARsACQDKARsAqQANBY8AqQAoBZYAKQDKAZsAwQDKAacA0QDKARsAEQDKARsA
2QDKAYUAGQDJBfAA4QAaBvUA6QAxBvoA8QA6BgABCQBEBgQB4QBTBooAAQFpBggBCQHKAYUAEQHA
BhsACQHQBg4BIQHoBoUAIQH4BhQBKQEUBxsAGQHKASQBGQEqBywBOQExBjIBAQFFBzcBQQFbBz0B
OQBmBxQBOQB4B0MBSQGHB00BOQGWB1EBDACbB3QBOQDOB4wBOQDXB5EBOQDjB5EBOQAACJkBOQAO
CBQBFADKAacBDAAjCK0BOQAtCLgBOQA2CJEB+QBEBgQBAQFpBswBAQFpBtQBOQDKAe4BDADKARsA
GQDKARsACAAoAHsACAAsAIAAKQCLAK0ALgATACsCLgAbACsCLgBbAFECLgALAPsBLgArAPsBLgAj
ACsCLgAzADECLgA7ACsCLgBTAEgCQwBjAIAASQCLAK0AYQCTAIAAgwCjALYAwwCTAIAAogAYAVUB
egG+AdsB5QECAAEAAwADAAAAfQEvAAAA/AE0AAAAIAJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAH
AG0BnwEEgAAAAQAAACYXnWYAAAAAAACiBAAAAgAAAAAAAAAAAAAAAQC/AAAAAAACAAAAAAAAAAAA
AAABAMgAAAAAAAoAAAAAAAAAAAAAAAoAAwEAAAAAAwAFAAAAAAAAAAAAAQCbBQAAAAAKAAAAAAAA
AAAAAAAKANEFAAAAAAIAAAAAAAAAAAAAAAEAcAYAAAAAAAAAAAEAAABjCAAABQAEAAYABAAAAAAA
ADxNb2R1bGU+AHN0X2M4NmNhMWZiYjBjNTQwZDhiM2Q4NWMxZjU5YzE0NjM3LmRsbABSZXNvdXJj
ZXMAU1RfMmU3OTlmMDc3YzlkNDY3Y2JhZDZkMmI5MjY5M2YzMWQuY3Nwcm9qLlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8yZTc5OWYwNzdjOWQ0NjdjYmFkNmQyYjkyNjkzZjMxZC5j
c3Byb2oAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1
cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1
cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAY29ubmVjdGlvblN0cmluZwBh
dXRoVG9rZW4Ac2hvcnRSZXF1ZXN0V2FpdABEYXRlVGltZQBVbml4RXBvY2gAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMATGlzdGAxAGhvbGlkYXlzAE1haW4AV3JpdGVMb2cAY2FsY3VsYXRlQ29t
cGxldGlvblRpbWUAcmVhZEhvbGlkYXlzAGNhbGNCaXpIb3VycwB1cGRhdGVDb21wbGV0ZWRIb3Vy
cwBFeGVjdXRlAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGFjdGlvbgBjb21tZW50AHN0
YXJ0AGVuZAB3b3Jrb3JkZXJpZABob3VycwBiaXpob3VycwBzcWwAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHN0X2M4NmNhMWZi
YjBjNTQwZDhiM2Q4NWMxZjU5YzE0NjM3AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFN5c3RlbS5BZGRJbgBBZGRJbkF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABn
ZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdl
dF9WYWx1ZQBUb1N0cmluZwBJbnQzMgBzZXRfVGFza1Jlc3VsdABTdHJpbmcAQ29uY2F0AFN5c3Rl
bS5EYXRhAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNv
bW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBTcWxDb21tYW5kAENyZWF0ZUNvbW1hbmQARGJDb21tYW5k
AHNldF9Db21tYW5kVGV4dABFeGVjdXRlTm9uUXVlcnkASURpc3Bvc2FibGUARGlzcG9zZQBTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJEYXRhUmVhZGVyAG9wX0luZXF1YWxpdHkAQ29udmVy
dABUb0RhdGVUaW1lAGdldF9ZZWFyAFRpbWVTcGFuAG9wX1N1YnRyYWN0aW9uAGdldF9Ub3RhbEhv
dXJzAFJlYWQAQWRkADw+Y19fRGlzcGxheUNsYXNzMgBydW5uZXIAPGNhbGNCaXpIb3Vycz5iX18w
AHgAZ2V0X0RhdGUAb3BfRXF1YWxpdHkAb3BfTGVzc1RoYW5PckVxdWFsAERheU9mV2VlawBnZXRf
RGF5T2ZXZWVrAGdldF9Ib3VyAFByZWRpY2F0ZWAxAEZpbmRJbmRleABBZGRIb3VycwBvcF9HcmVh
dGVyVGhhbk9yRXF1YWwARXhjZXB0aW9uAERhdGVUaW1lS2luZABTVF8yZTc5OWYwNzdjOWQ0Njdj
YmFkNmQyYjkyNjkzZjMxZC5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAA
AAB/UwBUAF8AMgBlADcAOQA5AGYAMAA3ADcAYwA5AGQANAA2ADcAYwBiAGEAZAA2AGQAMgBiADkA
MgA2ADkAMwBmADMAMQBkAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAACFDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAhUwBoAG8A
cgB0AFIAZQBxAHUAZQBzAHQAVwBhAGkAdAAAK00AYQBuAGEAZwBlAEUAbgBnAGkAbgBlAEEAdQB0
AGgAVABvAGsAZQBuAAAbQwBBAEwAQwBDAE8ATQBQAEwARQBUAEUARAAAAQCAu2kAbgBzAGUAcgB0
ACAAaQBuAHQAbwAgAEkAbQBwAG8AcgB0AEgAaQBzAHQAbwByAHkAIAAoAFsARABhAHQAZQBdACwA
IABbAFcAbwByAGsATwByAGQAZQByAEkARABdACwAIABbAEEAYwB0AGkAbwBuAF0ALAAgAFsAQwBv
AG0AbQBlAG4AdABdACkAIABWAEEATABVAEUAUwAoAEcARQBUAEQAQQBUAEUAKAApACwAIAAwACwA
IAAnAAEHJwAsACcAAQUnACkAAStzAGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAUgBlAHEAdQBl
AHMAdAAAF1cAbwByAGsATwByAGQAZQByAEkARAAAF0gAYQBzAEYAdQBsAGwASQBuAGYAbwAAF0MA
cgBlAGEAdABlAGQAVABpAG0AZQAAG0MAbwBtAHAAbABlAHQAZQBkAFQAaQBtAGUAAC1zAGUAbABl
AGMAdAAgACoAIABmAHIAbwBtACAASABvAGwAaQBkAGEAeQBzAAAJRABhAHQAZQAAJ3UAcABkAGEA
dABlACAAUgBlAHEAdQBlAHMAdAAgAHMAZQB0ACAAADFbAEMAbwBtAHAAbABlAHQAaQBvAG4AVABp
AG0AZQBJAG4ASABvAHUAcgBzAF0APQAABSwAIAAASVsAQwBvAG0AcABsAGUAdABpAG8AbgBUAGkA
bQBlAEkAbgBCAHUAcwBpAG4AZQBzAHMATwBwAGUAbgBIAG8AdQByAHMAXQA9AAADIAAAJVcASABF
AFIARQAgAFcAbwByAGsATwByAGQAZQByAEkARAA9AAAAAIyxNwcnlTBGvpjfoj9ZKKcACLd6XFYZ
NOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAA
EgwECAASDAIGDgIGCAMGER0HBhUSIQERHQUAAgEODgMAAAEHAAIIER0RHQYAAwEOCAgEAAEBDgMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJVEVkEIAASXQYgAgEOEl0EBwESFQUgAQERZQgBAAIA
AAAAADkBAApTY3JpcHRNYWluAwBUDgdWZXJzaW9uAzEuMFQOCVB1Ymxpc2hlcgBUDgtEZXNjcmlw
dGlvbgAEIAAScQQgABJ1BSABEnkcAyAAHAMgAA4FAAEOHQ4FIAASgI0DIAAICwcEDhKAhRKAjR0O
ByACAQ4SgIUFIAASgJkEIAEcDgUAAgIODgUAAREdDgkAAhGApREdER0DIAANAyAAAhcHCxKAhRKA
jRKAmQ4ODhEdER0ICBGApQYVEiEBER0FIAEBEwALBwMSgIUSgI0SgJkFIAECER0EIAARHQcAAgIR
HREdBSAAEYCpBxUSgK0BER0FIAIBHBgKIAEIFRKArQETAAUgAREdDQ0HBAgIFRKArQERHRIYBwAE
Dg4ODg4GAAMODg4OCQcDDhKAhRKAjQgHAhKAhRKAjQwgBwEICAgICAgRgLUvAQAqU1RfMmU3OTlm
MDc3YzlkNDY3Y2JhZDZkMmI5MjY5M2YzMWQuY3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwH0OwAAAAAAAAAA
AAAOPAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAJ1mJhcAAAEAnWYmFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAyAGUA
NwA5ADkAZgAwADcANwBjADkAZAA0ADYANwBjAGIAYQBkADYAZAAyAGIAOQAyADYAOQAzAGYAMwAx
AGQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAOQAyADYALgAyADYAMgA2ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAcwB0AF8AYwA4ADYAYwBhADEAZgBiAGIAMABjADUANAAwAGQAOABiADMAZAA4ADUAYwAxAGYA
NQA5AGMAMQA0ADYAMwA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8AYwA4ADYAYwBhADEAZgBiAGIAMABjADUANAAw
AGQAOABiADMAZAA4ADUAYwAxAGYANQA5AGMAMQA0ADYAMwA3AC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADIAZQA3ADkAOQBmADAANwA3AGMAOQBkADQANgA3
AGMAYgBhAGQANgBkADIAYgA5ADIANgA5ADMAZgAzADEAZAAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOQAyADYALgAyADYAMgA2
ADkAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
OQAyADYALgAyADYAMgA2ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACA8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem></ScriptProject></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact">Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1</DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Remove old Log entries</DTS:Property>
<DTS:Property DTS:Name="DTSID">{5548FC6C-992D-4F72-919C-7DCF5B838419}</DTS:Property>
<DTS:Property DTS:Name="Description">Execute SQL Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><SQLTask:SqlTaskData SQLTask:Connection="{6871E289-D90D-48F6-AA5E-9CC9F61E83F7}" SQLTask:TimeOut="0" SQLTask:IsStoredProc="False" SQLTask:BypassPrepare="True" SQLTask:SqlStmtSourceType="DirectInput" SQLTask:SqlStatementSource="delete from ImportHistory where [Date] &lt; DATEADD(month, -3, GETDATE())" SQLTask:CodePage="1252" SQLTask:ResultType="ResultSetType_None" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask"/></DTS:ObjectData></DTS:Executable>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact">Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1</DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">-1</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Mark as COMPLETE in Log</DTS:Property>
<DTS:Property DTS:Name="DTSID">{D4B8C156-76AF-4118-BA00-A4FF185CA8CB}</DTS:Property>
<DTS:Property DTS:Name="Description">Execute SQL Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><SQLTask:SqlTaskData SQLTask:Connection="{6871E289-D90D-48F6-AA5E-9CC9F61E83F7}" SQLTask:TimeOut="0" SQLTask:IsStoredProc="False" SQLTask:BypassPrepare="True" SQLTask:SqlStmtSourceType="DirectInput" SQLTask:SqlStatementSource="insert into ImportHistory ([Date], [WorkOrderID], [Action], [Comment]) VALUES(GETDATE(), 0, 'COMPLETE', '')" SQLTask:CodePage="1252" SQLTask:ResultType="ResultSetType_None" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask"/></DTS:ObjectData></DTS:Executable>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{4B221BA8-B49C-4C67-B552-A35F303C5BCC}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{896EC533-0BE4-4DBC-9235-DCB0B9055939}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 1</DTS:Property>
<DTS:Property DTS:Name="DTSID">{95FECBC2-763B-4682-88B8-17B656565852}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{896EC533-0BE4-4DBC-9235-DCB0B9055939}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{6A5AD73D-0F07-4566-88DA-1842301145B2}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 2</DTS:Property>
<DTS:Property DTS:Name="DTSID">{04335238-4CF1-4E28-B7B0-9A2F5C59396B}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{92E3F204-FCCC-4DCC-AE36-C128A921128F}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{4B221BA8-B49C-4C67-B552-A35F303C5BCC}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint</DTS:Property>
<DTS:Property DTS:Name="DTSID">{227C2FBB-0087-47B9-991C-FF324B073CF9}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{5548FC6C-992D-4F72-919C-7DCF5B838419}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{D4B8C156-76AF-4118-BA00-A4FF185CA8CB}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 4</DTS:Property>
<DTS:Property DTS:Name="DTSID">{49E86F56-CF30-4E05-A9F8-78F5F4B11186}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{6A5AD73D-0F07-4566-88DA-1842301145B2}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{93bdca63-8d4b-489c-9be6-024d94a7af38}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 3</DTS:Property>
<DTS:Property DTS:Name="DTSID">{132AB8E9-FA27-48F4-BE15-EAAAEEC66448}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{93bdca63-8d4b-489c-9be6-024d94a7af38}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{15a6f0a6-53b0-4bb1-b17b-540112a23f4e}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 5</DTS:Property>
<DTS:Property DTS:Name="DTSID">{FC469C78-1207-47EC-AC95-DF541726AB9F}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{15a6f0a6-53b0-4bb1-b17b-540112a23f4e}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{5548FC6C-992D-4F72-919C-7DCF5B838419}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 6</DTS:Property>
<DTS:Property DTS:Name="DTSID">{EFD9E50F-77F5-4715-AA92-B9E58A1C6EE3}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">2</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression"></DTS:Property><DTS:Executable IDREF="{7DBD7941-84B2-45BB-8BC1-DE165D472125}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{92E3F204-FCCC-4DCC-AE36-C128A921128F}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint 7</DTS:Property>
<DTS:Property DTS:Name="DTSID">{816D54AC-7564-47D4-9C13-474633D7BC0F}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="ObjectName">ServiceDesk Import Steps</DTS:Property>
<DTS:Property DTS:Name="DTSID">{C8EEDCB6-192C-40A8-9997-89134EA0C4C6}</DTS:Property>
<DTS:Property DTS:Name="Description">Sequence Container</DTS:Property>
<DTS:Property DTS:Name="CreationName">STOCK:SEQUENCE</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property></DTS:Executable>
<DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="Value">0</DTS:Property>
<DTS:Property DTS:Name="EvalOp">1</DTS:Property>
<DTS:Property DTS:Name="LogicalAnd">-1</DTS:Property>
<DTS:Property DTS:Name="Expression">@NeedsToRun</DTS:Property><DTS:Executable IDREF="{EE3E6A38-1492-469F-BBC9-19559B44AE58}" DTS:IsFrom="-1"/><DTS:Executable IDREF="{C8EEDCB6-192C-40A8-9997-89134EA0C4C6}" DTS:IsFrom="0"/>
<DTS:Property DTS:Name="ObjectName">Constraint</DTS:Property>
<DTS:Property DTS:Name="DTSID">{8C90B89F-D75B-4553-A76A-CB05568CBAA4}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PrecedenceConstraint>
<DTS:Property DTS:Name="ObjectName">UpdateServiceDesk</DTS:Property>
<DTS:Property DTS:Name="DTSID">{C8E3BD1F-1C0E-4AF3-9719-79A3245800C3}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">SSIS.Package.2</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{04335238-4CF1-4E28-B7B0-9A2F5C59396B}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{B1A8DB09-F3E4-4489-8447-EBE551DCDD5D}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{132AB8E9-FA27-48F4-BE15-EAAAEEC66448}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{90049BDF-0C13-4EB8-9D5D-9B797489E8A8}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{227C2FBB-0087-47B9-991C-FF324B073CF9}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{503B5817-6481-4BCB-8C05-3896613CA158}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{49E86F56-CF30-4E05-A9F8-78F5F4B11186}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{D8F2D42C-A1AD-4CE5-8FB0-EDE7CFCF06DF}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{816D54AC-7564-47D4-9C13-474633D7BC0F}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{24B2601A-1F47-42BE-842C-C80B2E853524}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Expression&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{8C90B89F-D75B-4553-A76A-CB05568CBAA4}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{53469EDF-35EB-4945-AC62-93B6E250C45C}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{95FECBC2-763B-4682-88B8-17B656565852}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{5176C11D-347E-4B7E-8B00-7DFA3D247AF3}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;Package xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:DtsControlFlowDiagram&gt;&lt;dwd:BoundingLeft&gt;-1703&lt;/dwd:BoundingLeft&gt;&lt;dwd:BoundingTop&gt;481&lt;/dwd:BoundingTop&gt;&lt;dwd:Layout&gt;&lt;dds&gt;
  &lt;diagram fontclsid="{0BE35203-8F91-11CE-9DE3-00AA004BB851}" mouseiconclsid="{0BE35204-8F91-11CE-9DE3-00AA004BB851}" defaultlayout="Microsoft.DataWarehouse.Layout.GraphLayout100" defaultlineroute="Microsoft.DataWarehouse.Layout.GraphLayout100" version="7" nextobject="46" scale="100" pagebreakanchorx="0" pagebreakanchory="0" pagebreaksizex="0" pagebreaksizey="0" scrollleft="-2700" scrolltop="-519" gridx="150" gridy="150" marginx="1000" marginy="1000" zoom="100" x="21325" y="23442" backcolor="15334399" defaultpersistence="2" PrintPageNumbersMode="3" PrintMarginTop="0" PrintMarginBottom="635" PrintMarginLeft="0" PrintMarginRight="0" marqueeselectionmode="1" mousepointer="0" snaptogrid="0" autotypeannotation="1" showscrollbars="0" viewpagebreaks="0" donotforceconnectorsbehindshapes="1" backpictureclsid="{00000000-0000-0000-0000-000000000000}"&gt;
    &lt;font&gt;
      &lt;ddsxmlobjectstreamwrapper binary="01010000900180380100065461686f6d61" /&gt;
    &lt;/font&gt;
    &lt;mouseicon&gt;
      &lt;ddsxmlobjectstreamwrapper binary="6c74000000000000" /&gt;
    &lt;/mouseicon&gt;
  &lt;/diagram&gt;
  &lt;layoutmanager&gt;
    &lt;ddsxmlobj /&gt;
  &lt;/layoutmanager&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="5843" logicalid="22" controlid="1" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{92E3F204-FCCC-4DCC-AE36-C128A921128F}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="7702" logicalid="23" controlid="2" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{4B221BA8-B49C-4C67-B552-A35F303C5BCC}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="9561" logicalid="24" controlid="3" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{896EC533-0BE4-4DBC-9235-DCB0B9055939}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="11420" logicalid="25" controlid="4" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{6A5AD73D-0F07-4566-88DA-1842301145B2}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsContainerObjectManagedBridge.2" tooltip="Sequence Container" left="-1703" top="2323" logicalid="26" controlid="5" masterid="0" hint1="0" hint2="0" width="7977" height="18394" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000291f0000da470000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="Caption" value="ServiceDesk Import Steps" vartype="8" /&gt;
        &lt;property name="CaptionHeight" value="1164" vartype="3" /&gt;
        &lt;property name="Collapsed" value="0" vartype="11" /&gt;
        &lt;property name="CollapsedWidth" value="7858" vartype="3" /&gt;
        &lt;property name="LogicalObject" value="{C8EEDCB6-192C-40A8-9997-89134EA0C4C6}" vartype="8" /&gt;
        &lt;property name="RealHeight" value="11272" vartype="3" /&gt;
        &lt;property name="RealWidth" value="7858" vartype="3" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="8467" logicalid="27" controlid="6" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{95FECBC2-763B-4682-88B8-17B656565852}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector sourceid="2" destid="3" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="8866" /&gt;
      &lt;point x="2259" y="9561" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="10326" logicalid="28" controlid="7" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{04335238-4CF1-4E28-B7B0-9A2F5C59396B}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector sourceid="3" destid="4" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="10725" /&gt;
      &lt;point x="2259" y="11420" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="6608" logicalid="29" controlid="8" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{227C2FBB-0087-47B9-991C-FF324B073CF9}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector sourceid="1" destid="2" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="7007" /&gt;
      &lt;point x="2259" y="7702" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-1503" top="481" logicalid="30" controlid="9" masterid="0" hint1="0" hint2="0" width="7778" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000621e00008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{EE3E6A38-1492-469F-BBC9-19559B44AE58}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1886" top="1246" logicalid="31" controlid="10" masterid="0" hint1="0" hint2="0" width="900" height="1577" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="16711680" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1"&gt;
          &lt;adornment percentpos="56.4826700898588" controlid="22" width="423" height="423" side="0" behavior="2" himetric="440" distfromline="175" startobj="0" x="1687" y="1386" visible="1" allowoverlap="1" usepercent="1" /&gt;
        &lt;/polyline&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{8C90B89F-D75B-4553-A76A-CB05568CBAA4}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="9" destid="5" sourceattachpoint="13" destattachpoint="14" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2386" y="1645" /&gt;
      &lt;point x="2386" y="1984" /&gt;
      &lt;point x="2285" y="1984" /&gt;
      &lt;point x="2285" y="2323" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Execute SQL Task" left="-770" top="16997" logicalid="32" controlid="11" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{5548FC6C-992D-4F72-919C-7DCF5B838419}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Execute SQL Task" left="-770" top="18857" logicalid="33" controlid="12" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{D4B8C156-76AF-4118-BA00-A4FF185CA8CB}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="17762" logicalid="34" controlid="13" masterid="0" hint1="0" hint2="0" width="799" height="1595" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{49E86F56-CF30-4E05-A9F8-78F5F4B11186}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="11" destid="12" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="18161" /&gt;
      &lt;point x="2259" y="18857" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="13279" logicalid="35" controlid="14" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{93bdca63-8d4b-489c-9be6-024d94a7af38}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="12185" logicalid="36" controlid="15" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{132AB8E9-FA27-48F4-BE15-EAAAEEC66448}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="4" destid="14" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="12584" /&gt;
      &lt;point x="2259" y="13279" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="15138" logicalid="37" controlid="16" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{15a6f0a6-53b0-4bb1-b17b-540112a23f4e}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="14044" logicalid="38" controlid="17" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{FC469C78-1207-47EC-AC95-DF541726AB9F}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="14" destid="16" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="14443" /&gt;
      &lt;point x="2259" y="15138" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="15903" logicalid="39" controlid="18" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{EFD9E50F-77F5-4715-AA92-B9E58A1C6EE3}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="16" destid="11" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="16302" /&gt;
      &lt;point x="2259" y="16997" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="3984" logicalid="40" controlid="19" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{7DBD7941-84B2-45BB-8BC1-DE165D472125}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="4749" logicalid="41" controlid="20" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{816D54AC-7564-47D4-9C13-474633D7BC0F}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="19" destid="1" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="5148" /&gt;
      &lt;point x="2259" y="5843" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="@NeedsToRun" left="1687" top="1386" logicalid="43" controlid="22" masterid="10" hint1="0" hint2="0" width="423" height="423" noresize="1" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="1" selectable="0" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="1" groupcollapsed="0" tabstop="0" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000a7010000a7010000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="RESERVED_IS_DECORATION" value="10" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
&lt;/dds&gt;&lt;/dwd:Layout&gt;&lt;dwd:PersistedViewPortLeft&gt;-2700&lt;/dwd:PersistedViewPortLeft&gt;&lt;dwd:PersistedViewPortTop&gt;-519&lt;/dwd:PersistedViewPortTop&gt;&lt;/dwd:DtsControlFlowDiagram&gt;&lt;/Package&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{C8E3BD1F-1C0E-4AF3-9719-79A3245800C3}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{4519819B-D79D-4F59-A9D2-DEABB6C8CC5E}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{EFD9E50F-77F5-4715-AA92-B9E58A1C6EE3}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{2AE00851-0236-4726-A39E-AE4B751C74FA}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;PrecedenceConstraint xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:EvalOp&gt;Constraint&lt;/dwd:EvalOp&gt;&lt;/PrecedenceConstraint&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{FC469C78-1207-47EC-AC95-DF541726AB9F}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{79F83F07-F477-4251-9025-83CC0CEB98C3}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;Package xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:DtsControlFlowDiagram&gt;&lt;dwd:BoundingLeft&gt;-1703&lt;/dwd:BoundingLeft&gt;&lt;dwd:BoundingTop&gt;481&lt;/dwd:BoundingTop&gt;&lt;dwd:Layout&gt;&lt;dds&gt;
  &lt;diagram fontclsid="{0BE35203-8F91-11CE-9DE3-00AA004BB851}" mouseiconclsid="{0BE35204-8F91-11CE-9DE3-00AA004BB851}" defaultlayout="Microsoft.DataWarehouse.Layout.GraphLayout100" defaultlineroute="Microsoft.DataWarehouse.Layout.GraphLayout100" version="7" nextobject="46" scale="100" pagebreakanchorx="0" pagebreakanchory="0" pagebreaksizex="0" pagebreaksizey="0" scrollleft="-2700" scrolltop="-519" gridx="150" gridy="150" marginx="1000" marginy="1000" zoom="100" x="21325" y="23442" backcolor="15334399" defaultpersistence="2" PrintPageNumbersMode="3" PrintMarginTop="0" PrintMarginBottom="635" PrintMarginLeft="0" PrintMarginRight="0" marqueeselectionmode="1" mousepointer="0" snaptogrid="0" autotypeannotation="1" showscrollbars="0" viewpagebreaks="0" donotforceconnectorsbehindshapes="1" backpictureclsid="{00000000-0000-0000-0000-000000000000}"&gt;
    &lt;font&gt;
      &lt;ddsxmlobjectstreamwrapper binary="01010000900180380100065461686f6d61" /&gt;
    &lt;/font&gt;
    &lt;mouseicon&gt;
      &lt;ddsxmlobjectstreamwrapper binary="6c74000000000000" /&gt;
    &lt;/mouseicon&gt;
  &lt;/diagram&gt;
  &lt;layoutmanager&gt;
    &lt;ddsxmlobj /&gt;
  &lt;/layoutmanager&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="5843" logicalid="22" controlid="1" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{92E3F204-FCCC-4DCC-AE36-C128A921128F}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="7702" logicalid="23" controlid="2" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{4B221BA8-B49C-4C67-B552-A35F303C5BCC}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="9561" logicalid="24" controlid="3" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{896EC533-0BE4-4DBC-9235-DCB0B9055939}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="11420" logicalid="25" controlid="4" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{6A5AD73D-0F07-4566-88DA-1842301145B2}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsContainerObjectManagedBridge.2" tooltip="Sequence Container" left="-1703" top="2323" logicalid="26" controlid="5" masterid="0" hint1="0" hint2="0" width="7977" height="18394" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000291f0000da470000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="Caption" value="ServiceDesk Import Steps" vartype="8" /&gt;
        &lt;property name="CaptionHeight" value="1164" vartype="3" /&gt;
        &lt;property name="Collapsed" value="0" vartype="11" /&gt;
        &lt;property name="CollapsedWidth" value="7858" vartype="3" /&gt;
        &lt;property name="LogicalObject" value="{C8EEDCB6-192C-40A8-9997-89134EA0C4C6}" vartype="8" /&gt;
        &lt;property name="RealHeight" value="11272" vartype="3" /&gt;
        &lt;property name="RealWidth" value="7858" vartype="3" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="8467" logicalid="27" controlid="6" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{95FECBC2-763B-4682-88B8-17B656565852}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector sourceid="2" destid="3" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="8866" /&gt;
      &lt;point x="2259" y="9561" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="10326" logicalid="28" controlid="7" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{04335238-4CF1-4E28-B7B0-9A2F5C59396B}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector sourceid="3" destid="4" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="10725" /&gt;
      &lt;point x="2259" y="11420" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="6608" logicalid="29" controlid="8" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{227C2FBB-0087-47B9-991C-FF324B073CF9}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector sourceid="1" destid="2" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="7007" /&gt;
      &lt;point x="2259" y="7702" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-1503" top="481" logicalid="30" controlid="9" masterid="0" hint1="0" hint2="0" width="7778" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000621e00008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{EE3E6A38-1492-469F-BBC9-19559B44AE58}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1886" top="1246" logicalid="31" controlid="10" masterid="0" hint1="0" hint2="0" width="900" height="1577" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="16711680" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1"&gt;
          &lt;adornment percentpos="56.4826700898588" controlid="22" width="423" height="423" side="0" behavior="2" himetric="440" distfromline="175" startobj="0" x="1687" y="1386" visible="1" allowoverlap="1" usepercent="1" /&gt;
        &lt;/polyline&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{8C90B89F-D75B-4553-A76A-CB05568CBAA4}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="9" destid="5" sourceattachpoint="13" destattachpoint="14" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2386" y="1645" /&gt;
      &lt;point x="2386" y="1984" /&gt;
      &lt;point x="2285" y="1984" /&gt;
      &lt;point x="2285" y="2323" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Execute SQL Task" left="-770" top="16997" logicalid="32" controlid="11" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{5548FC6C-992D-4F72-919C-7DCF5B838419}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Execute SQL Task" left="-770" top="18857" logicalid="33" controlid="12" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{D4B8C156-76AF-4118-BA00-A4FF185CA8CB}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="17762" logicalid="34" controlid="13" masterid="0" hint1="0" hint2="0" width="799" height="1595" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{49E86F56-CF30-4E05-A9F8-78F5F4B11186}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="11" destid="12" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="18161" /&gt;
      &lt;point x="2259" y="18857" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="13279" logicalid="35" controlid="14" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{93bdca63-8d4b-489c-9be6-024d94a7af38}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="12185" logicalid="36" controlid="15" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{132AB8E9-FA27-48F4-BE15-EAAAEEC66448}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="4" destid="14" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="12584" /&gt;
      &lt;point x="2259" y="13279" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="15138" logicalid="37" controlid="16" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{15a6f0a6-53b0-4bb1-b17b-540112a23f4e}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="14044" logicalid="38" controlid="17" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{FC469C78-1207-47EC-AC95-DF541726AB9F}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="14" destid="16" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="14443" /&gt;
      &lt;point x="2259" y="15138" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="15903" logicalid="39" controlid="18" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{EFD9E50F-77F5-4715-AA92-B9E58A1C6EE3}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="16" destid="11" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="16302" /&gt;
      &lt;point x="2259" y="16997" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Script Task" left="-770" top="3984" logicalid="40" controlid="19" masterid="5" hint1="0" hint2="0" width="6059" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000ab1700008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{7DBD7941-84B2-45BB-8BC1-DE165D472125}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="MSDDS.Polyline" left="1860" top="4749" logicalid="41" controlid="20" masterid="0" hint1="0" hint2="0" width="799" height="1594" noresize="0" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="0" selectable="1" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobj&gt;
        &lt;polyline endtypedst="3" endtypesrc="1" usercolor="32768" linestyle="0" linerender="2" customendtypedstid="0" customendtypesrcid="0" adornsvisible="1" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{816D54AC-7564-47D4-9C13-474633D7BC0F}" vartype="8" /&gt;
        &lt;property name="Virtual" value="0" vartype="11" /&gt;
        &lt;property name="VisibleAP" value="0" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;connector lineroutestyle="Microsoft.DataWarehouse.Layout.GraphLayout100" sourceid="19" destid="1" sourceattachpoint="11" destattachpoint="10" segmenteditmode="0" bendpointeditmode="0" bendpointvisibility="2" relatedid="0" virtual="0"&gt;
      &lt;point x="2259" y="5148" /&gt;
      &lt;point x="2259" y="5843" /&gt;
    &lt;/connector&gt;
  &lt;/ddscontrol&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="@NeedsToRun" left="1687" top="1386" logicalid="43" controlid="22" masterid="10" hint1="0" hint2="0" width="423" height="423" noresize="1" nomove="0" nodefaultattachpoints="1" autodrag="0" usedefaultiddshape="1" selectable="0" showselectionhandles="0" allownudging="1" isannotation="0" dontautolayout="1" groupcollapsed="0" tabstop="0" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="00080000a7010000a7010000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="RESERVED_IS_DECORATION" value="10" vartype="3" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
&lt;/dds&gt;&lt;/dwd:Layout&gt;&lt;dwd:PersistedViewPortLeft&gt;-2700&lt;/dwd:PersistedViewPortLeft&gt;&lt;dwd:PersistedViewPortTop&gt;-519&lt;/dwd:PersistedViewPortTop&gt;&lt;/dwd:DtsControlFlowDiagram&gt;&lt;/Package&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">package-diagram</DTS:Property>
<DTS:Property DTS:Name="DTSID">{95467441-94F1-4F38-8017-BD8007C5DCC5}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable></DTS:Executable>